###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.50.0.50277/W32 for Atmel AVR    20/Dec/2013  10:32:44 #
# Copyright (C) 1996-2010 IAR Systems AB.                                     #
#                                                                             #
#    Source file  =  C:\work\TIEL_FrameWork\Basic_Component\pwm.cpp           #
#    Command line =  C:\work\TIEL_FrameWork\Basic_Component\pwm.cpp           #
#                    --cpu=m128 -ms -o C:\work\ATmega128_Debug\Obj\ -D        #
#                    xNDEBUG -D xWATCHDOG_ENABLE -lC                          #
#                    C:\work\ATmega128_Debug\List\ -y                         #
#                    --initializers_in_flash -z2 --no_cse --no_inline         #
#                    --no_code_motion --no_cross_call --no_clustering         #
#                    --no_tbaa --cross_call_passes=2 --debug                  #
#                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e -I ./\ -I    #
#                    C:\work\ -I C:\work/TIEL_FrameWork/Basic_Component\ -I   #
#                    C:\work/TIEL_FrameWork/BSP/MC_E02SMB_v1_3\ -I            #
#                    C:\work/TIEL_FrameWork/Common\ -I                        #
#                    C:\work/TIEL_FrameWork/Configuration\ -I                 #
#                    C:\work/TIEL_FrameWork/CPU/AVR_Driver\ -I                #
#                    C:\work/TIEL_FrameWork/Driver_Interface\ -I              #
#                    C:\work/TIEL_FrameWork/Drivers\ -I                       #
#                    C:\work/TIEL_FrameWork/Service\ -I                       #
#                    C:\work/TIEL_FrameWork/System\ -I                        #
#                    C:\work/TIEL_FrameWork/Test\ -I                          #
#                    C:\work/TIEL_FrameWork/Utils\ -I C:\work/BUILD_COUNT\    #
#                    -I "C:\Program Files\IAR Systems\Embedded Workbench      #
#                    5.4\avr\INC\" -I "C:\Program Files\IAR Systems\Embedded  #
#                    Workbench 5.4\avr\INC\DLIB\" --eeprom_size 4096 --eec++  #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h"          #
#    List file    =  C:\work\ATmega128_Debug\List\pwm.lst                     #
#    Object file  =  C:\work\ATmega128_Debug\Obj\pwm.r90                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\work\TIEL_FrameWork\Basic_Component\pwm.cpp
      1          //////////////////////////////////////////////////////////////////////////////////////////
      2           
      3          // Project description
      4           
      5          // Author: Yoo Joo-Hyoung (potato97@naver.com)
      6           
      7          // Site: ccrs.hanyang.ac.kr
      8           
      9          // Copyright (C) 2013-2013 TIEF(TIEF is Embedded S/W Framework) Project.
     10           
     11          //
     12           
     13          //////////////////////////////////////////////////////////////////////////////////////////
     14          //
     15          //    License type: GNU General Public License (GPL)
     16          //      
     17          //    This program is free software: you can redistribute it and/or modify
     18          //    it under the terms of the GNU General Public License as published by
     19          //    the Free Software Foundation, either version 3 of the License, or
     20          //    (at your option) any later version.
     21          
     22          //    This program is distributed in the hope that it will be useful,
     23          //    but WITHOUT ANY WARRANTY; without even the implied warranty of
     24          //    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     25          //    GNU General Public License for more details.
     26          
     27          //    You should have received a copy of the GNU General Public License
     28          //    along with this program.  If not, see <http://www.gnu.org/licenses/>.
     29          //
     30          //////////////////////////////////////////////////////////////////////////////////////////
     31          
     32          #include "pwm.h"
     33          #include <cassert>
     34          

   \                                 In  segment CODE, align 2, keep-with-next
     35          Pwm::Pwm(IPwmPort  *_ipwm)
   \                     ??Pwm:
     36          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   ....               LDI     R16, LOW(??__vtbl)
   \   0000000A   ....               LDI     R17, (??__vtbl) >> 8
   \   0000000C   01FD               MOVW    R31:R30, R27:R26
   \   0000000E   8303               STD     Z+3, R16
   \   00000010   8314               STD     Z+4, R17
     37            assert( 0 != _ipwm);
   \   00000012   2F08               MOV     R16, R24
   \   00000014   2B09               OR      R16, R25
   \   00000016   F451               BRNE    ??Pwm_1
   \   00000018   E245               LDI     R20, 37
   \   0000001A   E050               LDI     R21, 0
   \   0000001C   ....               LDI     R18, LOW(`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`)
   \   0000001E   ....               LDI     R19, (`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`) >> 8
   \   00000020   ....               LDI     R16, LOW(`?<Constant "0 != _ipwm">`)
   \   00000022   ....               LDI     R17, (`?<Constant "0 != _ipwm">`) >> 8
   \   00000024   ........           CALL    __taabi_assert
   \   00000028   ........           CALL    __iar_EmptyStepPoint
     38            
     39            ipwm = _ipwm;
   \                     ??Pwm_1:
   \   0000002C   938D               ST      X+, R24
   \   0000002E   939C               ST      X, R25
   \   00000030   9711               SBIW    R27:R26, 1
     40          }
   \   00000032   018D               MOVW    R17:R16, R27:R26
   \   00000034   E0E4               LDI     R30, 4
   \   00000036   ........           JMP     ?EPILOGUE_B4_L09
     41          

   \                                 In  segment CODE, align 2, keep-with-next
     42          Pwm::~Pwm()
   \                     `?~Pwm`:
     43          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   2F08               MOV     R16, R24
   \   00000008   2B09               OR      R16, R25
   \   0000000A   F031               BREQ    `?~Pwm_1`
   \   0000000C   2F02               MOV     R16, R18
   \   0000000E   FF00               SBRS    R16, 0
   \   00000010   C003               RJMP    `?~Pwm_1`
     44            
     45          }
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   ........           CALL    `??operator delete`
   \                     `?~Pwm_1`:
   \   00000018   9189               LD      R24, Y+
   \   0000001A   9199               LD      R25, Y+
   \   0000001C   9508               RET
     46          

   \                                 In  segment CODE, align 2, keep-with-next
     47          void Pwm::SetDuty(unsigned short _du)
   \                     ??SetDuty:
     48          {
   \   00000000   ........           CALL    ?PROLOGUE5_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
     49            assert( 0 != ipwm);
   \   00000008   910D               LD      R16, X+
   \   0000000A   911C               LD      R17, X
   \   0000000C   9711               SBIW    R27:R26, 1
   \   0000000E   2B01               OR      R16, R17
   \   00000010   F451               BRNE    ??SetDuty_1
   \   00000012   E341               LDI     R20, 49
   \   00000014   E050               LDI     R21, 0
   \   00000016   ....               LDI     R18, LOW(`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`)
   \   00000018   ....               LDI     R19, (`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`) >> 8
   \   0000001A   ....               LDI     R16, LOW(`?<Constant "0 != ipwm">`)
   \   0000001C   ....               LDI     R17, (`?<Constant "0 != ipwm">`) >> 8
   \   0000001E   ........           CALL    __taabi_assert
   \   00000022   ........           CALL    __iar_EmptyStepPoint
     50            unsigned char r;
     51            
     52            r = ipwm->GetResolution();
   \                     ??SetDuty_1:
   \   00000026   91ED               LD      R30, X+
   \   00000028   91FC               LD      R31, X
   \   0000002A   9711               SBIW    R27:R26, 1
   \   0000002C   8120               LD      R18, Z
   \   0000002E   8131               LDD     R19, Z+1
   \   00000030   5F28               SUBI    R18, 248
   \   00000032   4F3F               SBCI    R19, 255
   \   00000034   910D               LD      R16, X+
   \   00000036   911C               LD      R17, X
   \   00000038   9711               SBIW    R27:R26, 1
   \   0000003A   01F9               MOVW    R31:R30, R19:R18
   \   0000003C   9125               LPM     R18, Z+
   \   0000003E   9134               LPM     R19, Z
   \   00000040   9731               SBIW    R31:R30, 1
   \   00000042   01F9               MOVW    R31:R30, R19:R18
   \   00000044   9509               ICALL
   \   00000046   2E40               MOV     R4, R16
     53            
     54            assert(8 == r || 16 == r);
   \   00000048   E008               LDI     R16, 8
   \   0000004A   1640               CP      R4, R16
   \   0000004C   F069               BREQ    ??SetDuty_2
   \   0000004E   E100               LDI     R16, 16
   \   00000050   1640               CP      R4, R16
   \   00000052   F051               BREQ    ??SetDuty_2
   \   00000054   E346               LDI     R20, 54
   \   00000056   E050               LDI     R21, 0
   \   00000058   ....               LDI     R18, LOW(`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`)
   \   0000005A   ....               LDI     R19, (`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`) >> 8
   \   0000005C   ....               LDI     R16, LOW(`?<Constant "8 == r || 16 == r">`)
   \   0000005E   ....               LDI     R17, (`?<Constant "8 == r || 16 == r">`) >> 8
   \   00000060   ........           CALL    __taabi_assert
   \   00000064   ........           CALL    __iar_EmptyStepPoint
     55            
     56            ipwm->SetDuty(_du  );
   \                     ??SetDuty_2:
   \   00000068   91ED               LD      R30, X+
   \   0000006A   91FC               LD      R31, X
   \   0000006C   9711               SBIW    R27:R26, 1
   \   0000006E   8140               LD      R20, Z
   \   00000070   8151               LDD     R21, Z+1
   \   00000072   5F4A               SUBI    R20, 250
   \   00000074   4F5F               SBCI    R21, 255
   \   00000076   019C               MOVW    R19:R18, R25:R24
   \   00000078   910D               LD      R16, X+
   \   0000007A   911C               LD      R17, X
   \   0000007C   9711               SBIW    R27:R26, 1
   \   0000007E   01FA               MOVW    R31:R30, R21:R20
   \   00000080   9145               LPM     R20, Z+
   \   00000082   9154               LPM     R21, Z
   \   00000084   9731               SBIW    R31:R30, 1
   \   00000086   01FA               MOVW    R31:R30, R21:R20
   \   00000088   9509               ICALL
     57            
     58            Run();
   \   0000008A   018D               MOVW    R17:R16, R27:R26
   \   0000008C   ....               RCALL   ??Run
     59          }
   \   0000008E   E0E5               LDI     R30, 5
   \   00000090   ........           JMP     ?EPILOGUE_B5_L09
     60          //  unsigned short SetFrequency(unsigned short _hz);
     61          

   \                                 In  segment CODE, align 2, keep-with-next
     62          void Pwm::Run(void)
   \                     ??Run:
     63          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
     64            assert( 0 != ipwm);
   \   00000006   01FC               MOVW    R31:R30, R25:R24
   \   00000008   8100               LD      R16, Z
   \   0000000A   8111               LDD     R17, Z+1
   \   0000000C   2B01               OR      R16, R17
   \   0000000E   F451               BRNE    ??Run_1
   \   00000010   E440               LDI     R20, 64
   \   00000012   E050               LDI     R21, 0
   \   00000014   ....               LDI     R18, LOW(`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`)
   \   00000016   ....               LDI     R19, (`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`) >> 8
   \   00000018   ....               LDI     R16, LOW(`?<Constant "0 != ipwm">`)
   \   0000001A   ....               LDI     R17, (`?<Constant "0 != ipwm">`) >> 8
   \   0000001C   ........           CALL    __taabi_assert
   \   00000020   ........           CALL    __iar_EmptyStepPoint
     65            ipwm->Run();
   \                     ??Run_1:
   \   00000024   01FC               MOVW    R31:R30, R25:R24
   \   00000026   81A0               LD      R26, Z
   \   00000028   81B1               LDD     R27, Z+1
   \   0000002A   91ED               LD      R30, X+
   \   0000002C   91FC               LD      R31, X
   \   0000002E   9711               SBIW    R27:R26, 1
   \   00000030   9632               ADIW    R31:R30, 2
   \   00000032   01DC               MOVW    R27:R26, R25:R24
   \   00000034   910D               LD      R16, X+
   \   00000036   911C               LD      R17, X
   \   00000038   9711               SBIW    R27:R26, 1
   \   0000003A   9125               LPM     R18, Z+
   \   0000003C   9134               LPM     R19, Z
   \   0000003E   9731               SBIW    R31:R30, 1
   \   00000040   01F9               MOVW    R31:R30, R19:R18
   \   00000042   9509               ICALL
     66          }
   \   00000044   E0E4               LDI     R30, 4
   \   00000046   ........           JMP     ?EPILOGUE_B4_L09
     67          

   \                                 In  segment CODE, align 2, keep-with-next
     68          void Pwm::Stop(void)
   \                     ??Stop:
     69          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
     70            assert( 0 != ipwm);
   \   00000006   01FC               MOVW    R31:R30, R25:R24
   \   00000008   8100               LD      R16, Z
   \   0000000A   8111               LDD     R17, Z+1
   \   0000000C   2B01               OR      R16, R17
   \   0000000E   F451               BRNE    ??Stop_1
   \   00000010   E446               LDI     R20, 70
   \   00000012   E050               LDI     R21, 0
   \   00000014   ....               LDI     R18, LOW(`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`)
   \   00000016   ....               LDI     R19, (`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`) >> 8
   \   00000018   ....               LDI     R16, LOW(`?<Constant "0 != ipwm">`)
   \   0000001A   ....               LDI     R17, (`?<Constant "0 != ipwm">`) >> 8
   \   0000001C   ........           CALL    __taabi_assert
   \   00000020   ........           CALL    __iar_EmptyStepPoint
     71            
     72            ipwm->Stop();
   \                     ??Stop_1:
   \   00000024   01FC               MOVW    R31:R30, R25:R24
   \   00000026   81A0               LD      R26, Z
   \   00000028   81B1               LDD     R27, Z+1
   \   0000002A   91ED               LD      R30, X+
   \   0000002C   91FC               LD      R31, X
   \   0000002E   9711               SBIW    R27:R26, 1
   \   00000030   9634               ADIW    R31:R30, 4
   \   00000032   01DC               MOVW    R27:R26, R25:R24
   \   00000034   910D               LD      R16, X+
   \   00000036   911C               LD      R17, X
   \   00000038   9711               SBIW    R27:R26, 1
   \   0000003A   9125               LPM     R18, Z+
   \   0000003C   9134               LPM     R19, Z
   \   0000003E   9731               SBIW    R31:R30, 1
   \   00000040   01F9               MOVW    R31:R30, R19:R18
   \   00000042   9509               ICALL
     73            
     74          }
   \   00000044   E0E4               LDI     R30, 4
   \   00000046   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "0 != _ipwm">>`:
   \   00000000   20303D215F20       DC8 "0 != _ipwm"
   \              70696D7700  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "C:\\\\work\\\\TIEL_Fr`:
   \   00000000   3A43775C726F       DC8 "C:\\work\\TIEL_FrameWork\\Basic_Component\\pwm.cpp"
   \              5C6B49544C45
   \              465F6172656D
   \              6F576B72425C
   \              73616369435F
   \              6D6F6F70656E
   \              746E705C6D77
   \              632E707000  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "0 != ipwm">>`:
   \   00000000   20303D216920       DC8 "0 != ipwm"
   \              7770006D    

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "8 == r || 16 == r`:
   \   00000000   20383D3D7220       DC8 "8 == r || 16 == r"
   \              7C20207C3631
   \              3D20203D0072

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "0 != _ipwm">`:
   \   00000000                      DS8 11
   \   0000000B                      REQUIRE `?<Initializer for <Constant "0 != _ipwm">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`:
   \   00000000                      DS8 47
   \   0000002F                      REQUIRE `?<Initializer for <Constant "C:\\\\work\\\\TIEL_Fr`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "0 != ipwm">`:
   \   00000000                      DS8 10
   \   0000000A                      REQUIRE `?<Initializer for <Constant "0 != ipwm">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "8 == r || 16 == r">`:
   \   00000000                      DS8 18
   \   00000012                      REQUIRE `?<Initializer for <Constant "8 == r || 16 == r`

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 Pwm *Pwm::new Pwm(IPwmPort *)
   \                     `??new Pwm`:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   E005               LDI     R16, 5
   \   00000008   E010               LDI     R17, 0
   \   0000000A   ........           CALL    `??operator new`
   \   0000000E   01A8               MOVW    R21:R20, R17:R16
   \   00000010   2B01               OR      R16, R17
   \   00000012   F021               BREQ    `??new Pwm_1`
   \   00000014   019C               MOVW    R19:R18, R25:R24
   \   00000016   018A               MOVW    R17:R16, R21:R20
   \   00000018   ....               RCALL   ??Pwm
   \   0000001A   C002               RJMP    `??new Pwm_2`
   \                     `??new Pwm_1`:
   \   0000001C   E000               LDI     R16, 0
   \   0000001E   E010               LDI     R17, 0
   \                     `??new Pwm_2`:
   \   00000020   9189               LD      R24, Y+
   \   00000022   9199               LD      R25, Y+
   \   00000024   9508               RET

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     Pwm::Pwm(IPwmPort *)               4      2
       -> __taabi_assert                4      2
       -> __iar_EmptyStepPoint          4      2
     Pwm::Run()                         4      2
       -> __taabi_assert                4      2
       -> __iar_EmptyStepPoint          4      2
       ->   Indirect call               4      2
     Pwm::SetDuty(unsigned short)       5      2
       -> __taabi_assert                5      2
       -> __iar_EmptyStepPoint          5      2
       ->   Indirect call               5      2
       -> __taabi_assert                5      2
       -> __iar_EmptyStepPoint          5      2
       ->   Indirect call               5      2
       -> Pwm::Run()                    5      2
     Pwm::Stop()                        4      2
       -> __taabi_assert                4      2
       -> __iar_EmptyStepPoint          4      2
       ->   Indirect call               4      2
     Pwm::new Pwm(IPwmPort *)           2      2
       -> operator new(unsigned int)
                                        2      2
       -> Pwm::Pwm(IPwmPort *)          2      2
     Pwm::~Pwm()                        2      2
       -> operator delete(void *)       2      2


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     Pwm::Pwm(IPwmPort *)                             58
     Pwm::~Pwm()                                      30
     Pwm::SetDuty(unsigned short)                    148
     Pwm::Run()                                       74
     Pwm::Stop()                                      74
     ?<Initializer for <Constant "0 != _ipwm">>       11
     ?<Initializer for <Constant "C:\\work\\TIEL_Fr   47
     ?<Initializer for <Constant "0 != ipwm">>        10
     ?<Initializer for <Constant "8 == r || 16 == r   18
     ?<Constant "0 != _ipwm">                         11
     ?<Constant "C:\\work\\TIEL_FrameWor...">         47
     ?<Constant "0 != ipwm">                          10
     ?<Constant "8 == r || 16 == r">                  18
     Pwm::new Pwm(IPwmPort *)                         38
      Others                                           9

 
 422 bytes in segment CODE
   7 bytes in segment INITTAB
   2 bytes in segment NEAR_F
  86 bytes in segment NEAR_I
  86 bytes in segment NEAR_ID
 
 508 bytes of CODE memory (+ 9 bytes shared)
  86 bytes of DATA memory

Errors: none
Warnings: none
