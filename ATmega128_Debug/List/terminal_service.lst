###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.50.0.50277/W32 for Atmel AVR    20/Dec/2013  20:20:51 #
# Copyright (C) 1996-2010 IAR Systems AB.                                     #
#                                                                             #
#    Source file  =  C:\work\TIEL_FrameWork\Service\terminal_service.cpp      #
#    Command line =  C:\work\TIEL_FrameWork\Service\terminal_service.cpp      #
#                    --cpu=m128 -ms -o C:\work\ATmega128_Debug\Obj\ -D        #
#                    xNDEBUG -D xWATCHDOG_ENABLE -lC                          #
#                    C:\work\ATmega128_Debug\List\ -y                         #
#                    --initializers_in_flash -z2 --no_cse --no_inline         #
#                    --no_code_motion --no_cross_call --no_clustering         #
#                    --no_tbaa --cross_call_passes=2 --debug                  #
#                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e -I ./\ -I    #
#                    C:\work\ -I C:\work/TIEL_FrameWork/Basic_Component\ -I   #
#                    C:\work/TIEL_FrameWork/BSP/MC_E02SMB_v1_3\ -I            #
#                    C:\work/TIEL_FrameWork/Common\ -I                        #
#                    C:\work/TIEL_FrameWork/Configuration\ -I                 #
#                    C:\work/TIEL_FrameWork/CPU/AVR_Driver\ -I                #
#                    C:\work/TIEL_FrameWork/Driver_Interface\ -I              #
#                    C:\work/TIEL_FrameWork/Drivers\ -I                       #
#                    C:\work/TIEL_FrameWork/Service\ -I                       #
#                    C:\work/TIEL_FrameWork/System\ -I                        #
#                    C:\work/TIEL_FrameWork/Test\ -I                          #
#                    C:\work/TIEL_FrameWork/Utils\ -I C:\work/BUILD_COUNT\    #
#                    -I "C:\Program Files\IAR Systems\Embedded Workbench      #
#                    5.4\avr\INC\" -I "C:\Program Files\IAR Systems\Embedded  #
#                    Workbench 5.4\avr\INC\DLIB\" --eeprom_size 4096 --eec++  #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h"          #
#    List file    =  C:\work\ATmega128_Debug\List\terminal_service.lst        #
#    Object file  =  C:\work\ATmega128_Debug\Obj\terminal_service.r90         #
#                                                                             #
#                                                                             #
###############################################################################

C:\work\TIEL_FrameWork\Service\terminal_service.cpp
      1          
      2          #include "terminal_service.h"

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 size_t char_traits::length(char const *)
   \                     ??length:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    strlen
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 _ClassUtil::_AllocHolder<allocator<void>, false>::_AllocHolder()
   \                     ??_AllocHolder:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
   \                     ??_Alval:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   0189               MOVW    R17:R16, R19:R18
   \   00000008   ........           CALL    ??allocator_3
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval() const
   \                     ??_Alval_1:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   0189               MOVW    R17:R16, R19:R18
   \   00000008   ........           CALL    ??allocator_3
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char_allocator::char_allocator()
   \                     ??char_allocator:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 _String_val::_String_val(char_allocator)
   \                     ??_String_val:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8320               ST      Z, R18
   \   00000004   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string::string()
   \                     ??string:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   018E               MOVW    R17:R16, R29:R28
   \   0000000A   ........           CALL    ??char_allocator
   \   0000000E   01F8               MOVW    R31:R30, R17:R16
   \   00000010   8120               LD      R18, Z
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   ........           CALL    ??_String_val
   \   00000018   E040               LDI     R20, 0
   \   0000001A   E050               LDI     R21, 0
   \   0000001C   E020               LDI     R18, 0
   \   0000001E   018C               MOVW    R17:R16, R25:R24
   \   00000020   ........           CALL    ??_Tidy_1
   \   00000024   018C               MOVW    R17:R16, R25:R24
   \   00000026   9621               ADIW    R29:R28, 1
   \   00000028   9189               LD      R24, Y+
   \   0000002A   9199               LD      R25, Y+
   \   0000002C   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string::string(char const *)
   \                     ??string_2:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   01C9               MOVW    R25:R24, R19:R18
   \   0000000A   018E               MOVW    R17:R16, R29:R28
   \   0000000C   ........           CALL    ??char_allocator
   \   00000010   01F8               MOVW    R31:R30, R17:R16
   \   00000012   8120               LD      R18, Z
   \   00000014   018D               MOVW    R17:R16, R27:R26
   \   00000016   ........           CALL    ??_String_val
   \   0000001A   E040               LDI     R20, 0
   \   0000001C   E050               LDI     R21, 0
   \   0000001E   E020               LDI     R18, 0
   \   00000020   018D               MOVW    R17:R16, R27:R26
   \   00000022   ........           CALL    ??_Tidy_1
   \   00000026   019C               MOVW    R19:R18, R25:R24
   \   00000028   018D               MOVW    R17:R16, R27:R26
   \   0000002A   ........           CALL    ??assign_1
   \   0000002E   018D               MOVW    R17:R16, R27:R26
   \   00000030   9621               ADIW    R29:R28, 1
   \   00000032   E0E4               LDI     R30, 4
   \   00000034   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string::string(char const *, char const *)
   \                     ??string_3:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   0129               MOVW    R5:R4, R19:R18
   \   0000000A   01DA               MOVW    R27:R26, R21:R20
   \   0000000C   018E               MOVW    R17:R16, R29:R28
   \   0000000E   ........           CALL    ??char_allocator
   \   00000012   01F8               MOVW    R31:R30, R17:R16
   \   00000014   8120               LD      R18, Z
   \   00000016   018C               MOVW    R17:R16, R25:R24
   \   00000018   ........           CALL    ??_String_val
   \   0000001C   E040               LDI     R20, 0
   \   0000001E   E050               LDI     R21, 0
   \   00000020   E020               LDI     R18, 0
   \   00000022   018C               MOVW    R17:R16, R25:R24
   \   00000024   ........           CALL    ??_Tidy_1
   \   00000028   164A               CP      R4, R26
   \   0000002A   065B               CPC     R5, R27
   \   0000002C   F039               BREQ    ??string_4
   \   0000002E   01AD               MOVW    R21:R20, R27:R26
   \   00000030   1944               SUB     R20, R4
   \   00000032   0955               SBC     R21, R5
   \   00000034   0192               MOVW    R19:R18, R5:R4
   \   00000036   018C               MOVW    R17:R16, R25:R24
   \   00000038   ........           CALL    ??assign_3
   \                     ??string_4:
   \   0000003C   018C               MOVW    R17:R16, R25:R24
   \   0000003E   9621               ADIW    R29:R28, 1
   \   00000040   E0E6               LDI     R30, 6
   \   00000042   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string::string(string const &)
   \                     ??string_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   912C               LD      R18, X
   \   0000000A   018C               MOVW    R17:R16, R25:R24
   \   0000000C   ........           CALL    ??_String_val
   \   00000010   E040               LDI     R20, 0
   \   00000012   E050               LDI     R21, 0
   \   00000014   E020               LDI     R18, 0
   \   00000016   018C               MOVW    R17:R16, R25:R24
   \   00000018   ........           CALL    ??_Tidy_1
   \   0000001C   9160....           LDS     R22, ??npos
   \   00000020   9170....           LDS     R23, (??npos + 1)
   \   00000024   E040               LDI     R20, 0
   \   00000026   E050               LDI     R21, 0
   \   00000028   019D               MOVW    R19:R18, R27:R26
   \   0000002A   018C               MOVW    R17:R16, R25:R24
   \   0000002C   ........           CALL    ??assign_2
   \   00000030   018C               MOVW    R17:R16, R25:R24
   \   00000032   E0E4               LDI     R30, 4
   \   00000034   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string::~string()
   \                     `?~string`:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   E040               LDI     R20, 0
   \   00000008   E050               LDI     R21, 0
   \   0000000A   E021               LDI     R18, 1
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   ........           CALL    ??_Tidy_1
   \   00000012   9189               LD      R24, Y+
   \   00000014   9199               LD      R25, Y+
   \   00000016   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string &string::operator=(string const &)
   \                     `??operator=`:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   019C               MOVW    R19:R18, R25:R24
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   ........           CALL    ??assign
   \   00000010   E0E4               LDI     R30, 4
   \   00000012   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string &string::operator+=(string const &)
   \                     `??operator+=`:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   019C               MOVW    R19:R18, R25:R24
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   ........           CALL    ??append
   \   00000010   E0E4               LDI     R30, 4
   \   00000012   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string &string::operator+=(char const *)
   \                     `??operator+=_1`:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   019C               MOVW    R19:R18, R25:R24
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   ........           CALL    ??append_1
   \   00000010   E0E4               LDI     R30, 4
   \   00000012   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string &string::append(string const &)
   \                     ??append:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   9160....           LDS     R22, ??npos
   \   0000000C   9170....           LDS     R23, (??npos + 1)
   \   00000010   E040               LDI     R20, 0
   \   00000012   E050               LDI     R21, 0
   \   00000014   019C               MOVW    R19:R18, R25:R24
   \   00000016   018D               MOVW    R17:R16, R27:R26
   \   00000018   ........           CALL    ??append_2
   \   0000001C   E0E4               LDI     R30, 4
   \   0000001E   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string &string::append(char const *)
   \                     ??append_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   018C               MOVW    R17:R16, R25:R24
   \   0000000A   ........           CALL    ??length
   \   0000000E   01A8               MOVW    R21:R20, R17:R16
   \   00000010   019C               MOVW    R19:R18, R25:R24
   \   00000012   018D               MOVW    R17:R16, R27:R26
   \   00000014   ........           CALL    ??append_3
   \   00000018   E0E4               LDI     R30, 4
   \   0000001A   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string &string::assign(string const &)
   \                     ??assign:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   9160....           LDS     R22, ??npos
   \   0000000C   9170....           LDS     R23, (??npos + 1)
   \   00000010   E040               LDI     R20, 0
   \   00000012   E050               LDI     R21, 0
   \   00000014   019C               MOVW    R19:R18, R25:R24
   \   00000016   018D               MOVW    R17:R16, R27:R26
   \   00000018   ........           CALL    ??assign_2
   \   0000001C   E0E4               LDI     R30, 4
   \   0000001E   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string &string::assign(char const *)
   \                     ??assign_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   018C               MOVW    R17:R16, R25:R24
   \   0000000A   ........           CALL    ??length
   \   0000000E   01A8               MOVW    R21:R20, R17:R16
   \   00000010   019C               MOVW    R19:R18, R25:R24
   \   00000012   018D               MOVW    R17:R16, R27:R26
   \   00000014   ........           CALL    ??assign_3
   \   00000018   E0E4               LDI     R30, 4
   \   0000001A   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char * string::insert(char *, char)
   \                     ??insert:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   2F84               MOV     R24, R20
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   ........           CALL    ??begin
   \   00000010   0198               MOVW    R19:R18, R17:R16
   \   00000012   0182               MOVW    R17:R16, R5:R4
   \   00000014   ........           CALL    ??_Pdif
   \   00000018   0138               MOVW    R7:R6, R17:R16
   \   0000001A   2F68               MOV     R22, R24
   \   0000001C   E041               LDI     R20, 1
   \   0000001E   E050               LDI     R21, 0
   \   00000020   0193               MOVW    R19:R18, R7:R6
   \   00000022   018D               MOVW    R17:R16, R27:R26
   \   00000024   ........           CALL    ??insert_1
   \   00000028   018D               MOVW    R17:R16, R27:R26
   \   0000002A   ........           CALL    ??begin
   \   0000002E   0D06               ADD     R16, R6
   \   00000030   1D17               ADC     R17, R7
   \   00000032   E0E8               LDI     R30, 8
   \   00000034   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char * string::erase(char *, char *)
   \                     ??erase:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   012A               MOVW    R5:R4, R21:R20
   \   0000000A   018C               MOVW    R17:R16, R25:R24
   \   0000000C   ........           CALL    ??begin
   \   00000010   0198               MOVW    R19:R18, R17:R16
   \   00000012   018D               MOVW    R17:R16, R27:R26
   \   00000014   ........           CALL    ??_Pdif
   \   00000018   0138               MOVW    R7:R6, R17:R16
   \   0000001A   019D               MOVW    R19:R18, R27:R26
   \   0000001C   0182               MOVW    R17:R16, R5:R4
   \   0000001E   ........           CALL    ??_Pdif
   \   00000022   01A8               MOVW    R21:R20, R17:R16
   \   00000024   0193               MOVW    R19:R18, R7:R6
   \   00000026   018C               MOVW    R17:R16, R25:R24
   \   00000028   ........           CALL    ??erase_2
   \   0000002C   018C               MOVW    R17:R16, R25:R24
   \   0000002E   ........           CALL    ??_Myptr
   \   00000032   0D06               ADD     R16, R6
   \   00000034   1D17               ADC     R17, R7
   \   00000036   E0E8               LDI     R30, 8
   \   00000038   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void string::clear()
   \                     ??clear:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   018D               MOVW    R17:R16, R27:R26
   \   00000008   ........           CALL    ??end
   \   0000000C   01C8               MOVW    R25:R24, R17:R16
   \   0000000E   018D               MOVW    R17:R16, R27:R26
   \   00000010   ........           CALL    ??begin
   \   00000014   01AC               MOVW    R21:R20, R25:R24
   \   00000016   0198               MOVW    R19:R18, R17:R16
   \   00000018   018D               MOVW    R17:R16, R27:R26
   \   0000001A   ........           CALL    ??erase
   \   0000001E   E0E4               LDI     R30, 4
   \   00000020   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char * string::begin()
   \                     ??begin:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Myptr
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char * string::end()
   \                     ??end:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   018D               MOVW    R17:R16, R27:R26
   \   00000008   ........           CALL    ??_Myptr
   \   0000000C   9651               ADIW    R27:R26, 17
   \   0000000E   912D               LD      R18, X+
   \   00000010   913C               LD      R19, X
   \   00000012   9752               SBIW    R27:R26, 18
   \   00000014   0F02               ADD     R16, R18
   \   00000016   1F13               ADC     R17, R19
   \   00000018   91A9               LD      R26, Y+
   \   0000001A   91B9               LD      R27, Y+
   \   0000001C   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void string::push_back(char)
   \                     ??push_back:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   2F82               MOV     R24, R18
   \   00000008   018D               MOVW    R17:R16, R27:R26
   \   0000000A   ........           CALL    ??end
   \   0000000E   2F48               MOV     R20, R24
   \   00000010   0198               MOVW    R19:R18, R17:R16
   \   00000012   018D               MOVW    R17:R16, R27:R26
   \   00000014   ........           CALL    ??insert
   \   00000018   E0E4               LDI     R30, 4
   \   0000001A   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 size_t string::size() const
   \                     ??size:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8901               LDD     R16, Z+17
   \   00000004   8912               LDD     R17, Z+18
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 bool string::empty() const
   \                     ??empty:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8901               LDD     R16, Z+17
   \   00000004   8912               LDD     R17, Z+18
   \   00000006   2B01               OR      R16, R17
   \   00000008   F411               BRNE    ??empty_2
   \   0000000A   E001               LDI     R16, 1
   \   0000000C   9508               RET
   \                     ??empty_2:
   \   0000000E   E000               LDI     R16, 0
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 int string::compare(string const &) const
   \                     ??compare:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   018D               MOVW    R17:R16, R27:R26
   \   0000000A   ........           CALL    ??size
   \   0000000E   0128               MOVW    R5:R4, R17:R16
   \   00000010   018D               MOVW    R17:R16, R27:R26
   \   00000012   ........           CALL    ??_Myptr_1
   \   00000016   925A               ST      -Y, R5
   \   00000018   924A               ST      -Y, R4
   \   0000001A   01B8               MOVW    R23:R22, R17:R16
   \   0000001C   01FC               MOVW    R31:R30, R25:R24
   \   0000001E   8941               LDD     R20, Z+17
   \   00000020   8952               LDD     R21, Z+18
   \   00000022   E020               LDI     R18, 0
   \   00000024   E030               LDI     R19, 0
   \   00000026   018C               MOVW    R17:R16, R25:R24
   \   00000028   ........           CALL    ??compare_1
   \   0000002C   E0E6               LDI     R30, 6
   \   0000002E   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 size_t string::_Pdif(char const *, char const *)
   \                     ??_Pdif:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   2B41               OR      R20, R17
   \   00000004   F419               BRNE    ??_Pdif_1
   \   00000006   E000               LDI     R16, 0
   \   00000008   E010               LDI     R17, 0
   \   0000000A   9508               RET
   \                     ??_Pdif_1:
   \   0000000C   1B02               SUB     R16, R18
   \   0000000E   0B13               SBC     R17, R19
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char *string::_Myptr()
   \                     ??_Myptr:
   \   00000000   2F39               MOV     R19, R25
   \   00000002   2F48               MOV     R20, R24
   \   00000004   01F8               MOVW    R31:R30, R17:R16
   \   00000006   8983               LDD     R24, Z+19
   \   00000008   8994               LDD     R25, Z+20
   \   0000000A   3180               CPI     R24, 16
   \   0000000C   4090               SBCI    R25, 0
   \   0000000E   F020               BRCS    ??_Myptr_2
   \   00000010   01F8               MOVW    R31:R30, R17:R16
   \   00000012   8101               LDD     R16, Z+1
   \   00000014   8112               LDD     R17, Z+2
   \   00000016   C002               RJMP    ??_Myptr_3
   \                     ??_Myptr_2:
   \   00000018   5F0F               SUBI    R16, 255
   \   0000001A   4F1F               SBCI    R17, 255
   \                     ??_Myptr_3:
   \   0000001C   2F84               MOV     R24, R20
   \   0000001E   2F93               MOV     R25, R19
   \   00000020   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char const *string::_Myptr() const
   \                     ??_Myptr_1:
   \   00000000   2F39               MOV     R19, R25
   \   00000002   2F48               MOV     R20, R24
   \   00000004   01F8               MOVW    R31:R30, R17:R16
   \   00000006   8983               LDD     R24, Z+19
   \   00000008   8994               LDD     R25, Z+20
   \   0000000A   3180               CPI     R24, 16
   \   0000000C   4090               SBCI    R25, 0
   \   0000000E   F020               BRCS    ??_Myptr_4
   \   00000010   01F8               MOVW    R31:R30, R17:R16
   \   00000012   8101               LDD     R16, Z+1
   \   00000014   8112               LDD     R17, Z+2
   \   00000016   C002               RJMP    ??_Myptr_5
   \                     ??_Myptr_4:
   \   00000018   5F0F               SUBI    R16, 255
   \   0000001A   4F1F               SBCI    R17, 255
   \                     ??_Myptr_5:
   \   0000001C   2F84               MOV     R24, R20
   \   0000001E   2F93               MOV     R25, R19
   \   00000020   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Copy_opt0(string const *, string const *, string *)
   \                     ??_Copy_opt0:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \                     ??_Copy_opt0_1:
   \   0000000A   15A4               CP      R26, R4
   \   0000000C   05B5               CPC     R27, R5
   \   0000000E   F039               BREQ    ??_Copy_opt0_2
   \   00000010   019D               MOVW    R19:R18, R27:R26
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   ........           CALL    `??operator=`
   \   00000018   9645               ADIW    R25:R24, 21
   \   0000001A   9655               ADIW    R27:R26, 21
   \   0000001C   CFF6               RJMP    ??_Copy_opt0_1
   \                     ??_Copy_opt0_2:
   \   0000001E   018C               MOVW    R17:R16, R25:R24
   \   00000020   E0E6               LDI     R30, 6
   \   00000022   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Copier<string, false>::_Copy(string const *, string const *, string *)
   \                     ??_Copy:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_opt0
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Copy_opt(string const *, string const *, string *)
   \                     ??_Copy_opt:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Copy_opt(string *, string *, string *)
   \                     ??_Copy_opt_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_opt
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *copy(string *, string *, string *)
   \                     ??copy:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_opt_1
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Copy_backward_opt0(string const *, string const *, string *)
   \                     ??_Copy_backward_opt0:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   01DA               MOVW    R27:R26, R21:R20
   \                     ??_Copy_backward_opt0_1:
   \   0000000A   1648               CP      R4, R24
   \   0000000C   0659               CPC     R5, R25
   \   0000000E   F049               BREQ    ??_Copy_backward_opt0_2
   \   00000010   9745               SBIW    R25:R24, 21
   \   00000012   019C               MOVW    R19:R18, R25:R24
   \   00000014   01C9               MOVW    R25:R24, R19:R18
   \   00000016   9755               SBIW    R27:R26, 21
   \   00000018   018D               MOVW    R17:R16, R27:R26
   \   0000001A   01D8               MOVW    R27:R26, R17:R16
   \   0000001C   ........           CALL    `??operator=`
   \   00000020   CFF4               RJMP    ??_Copy_backward_opt0_1
   \                     ??_Copy_backward_opt0_2:
   \   00000022   018D               MOVW    R17:R16, R27:R26
   \   00000024   E0E6               LDI     R30, 6
   \   00000026   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Backward_copier<string, false>::_Copy(string const *, string const *, string *)
   \                     ??_Copy_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_backward_opt0
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short *_Backward_copier<unsigned short, true>::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
   \                     ??_Copy_2:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   013A               MOVW    R7:R6, R21:R20
   \   0000000A   018C               MOVW    R17:R16, R25:R24
   \   0000000C   1904               SUB     R16, R4
   \   0000000E   0915               SBC     R17, R5
   \   00000010   9515               ASR     R17
   \   00000012   9507               ROR     R16
   \   00000014   01D8               MOVW    R27:R26, R17:R16
   \   00000016   01AD               MOVW    R21:R20, R27:R26
   \   00000018   0F44               LSL     R20
   \   0000001A   1F55               ROL     R21
   \   0000001C   0192               MOVW    R19:R18, R5:R4
   \   0000001E   01BA               MOVW    R23:R22, R21:R20
   \   00000020   EF0E               LDI     R16, 254
   \   00000022   EF1F               LDI     R17, 255
   \   00000024   01AD               MOVW    R21:R20, R27:R26
   \   00000026   ........           CALL    ?S_EC_MUL_L02
   \   0000002A   01A8               MOVW    R21:R20, R17:R16
   \   0000002C   0183               MOVW    R17:R16, R7:R6
   \   0000002E   0F04               ADD     R16, R20
   \   00000030   1F15               ADC     R17, R21
   \   00000032   01AB               MOVW    R21:R20, R23:R22
   \   00000034   ........           CALL    memmove
   \   00000038   E0E8               LDI     R30, 8
   \   0000003A   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Copy_backward_opt(string const *, string const *, string *)
   \                     ??_Copy_backward_opt:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_1
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short *_Copy_backward_opt(unsigned short const *, unsigned short const *, unsigned short *)
   \                     ??_Copy_backward_opt_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_2
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Copy_backward_opt(string *, string *, string *)
   \                     ??_Copy_backward_opt_2:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_backward_opt
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short *_Copy_backward_opt(unsigned short *, unsigned short *, unsigned short *)
   \                     ??_Copy_backward_opt_3:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_backward_opt_1
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *copy_backward(string *, string *, string *)
   \                     ??copy_backward:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_backward_opt_2
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short *copy_backward(unsigned short *, unsigned short *, unsigned short *)
   \                     ??copy_backward_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_backward_opt_3
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void *operator new(unsigned int, void *)
   \                     `??operator new`:
   \   00000000   01A8               MOVW    R21:R20, R17:R16
   \   00000002   0189               MOVW    R17:R16, R19:R18
   \   00000004   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void *_Allocator<void>::allocate(unsigned int)
   \                     ??allocate:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    `??operator new_1`
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Allocator<void>::deallocate(void *)
   \                     ??deallocate:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    `??operator delete`
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Construct(string *, string const &)
   \                     ??_Construct:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   019C               MOVW    R19:R18, R25:R24
   \   0000000A   E105               LDI     R16, 21
   \   0000000C   E010               LDI     R17, 0
   \   0000000E   ........           CALL    `??operator new`
   \   00000012   01A8               MOVW    R21:R20, R17:R16
   \   00000014   2B01               OR      R16, R17
   \   00000016   F029               BREQ    ??_Construct_1
   \   00000018   019D               MOVW    R19:R18, R27:R26
   \   0000001A   018A               MOVW    R17:R16, R21:R20
   \   0000001C   ........           CALL    ??string_1
   \   00000020   C002               RJMP    ??_Construct_2
   \                     ??_Construct_1:
   \   00000022   E000               LDI     R16, 0
   \   00000024   E010               LDI     R17, 0
   \                     ??_Construct_2:
   \   00000026   E0E4               LDI     R30, 4
   \   00000028   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Destroy(string *)
   \                     ??_Destroy:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    `?~string`
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 allocator<string>::allocator(allocator<void> const &)
   \                     ??allocator:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 allocator<unsigned char>::allocator(allocator<void> const &)
   \                     ??allocator_1:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 allocator<unsigned short>::allocator(allocator<void> const &)
   \                     ??allocator_2:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void allocator<string>::deallocate(string *, unsigned int)
   \                     ??deallocate_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   01DA               MOVW    R27:R26, R21:R20
   \   0000000A   018C               MOVW    R17:R16, R25:R24
   \   0000000C   ........           CALL    ??deallocate
   \   00000010   E0E6               LDI     R30, 6
   \   00000012   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void allocator<unsigned short>::deallocate(unsigned short *, unsigned int)
   \                     ??deallocate_2:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   01DA               MOVW    R27:R26, R21:R20
   \   0000000A   018C               MOVW    R17:R16, R25:R24
   \   0000000C   ........           CALL    ??deallocate
   \   00000010   E0E6               LDI     R30, 6
   \   00000012   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * allocator<string>::allocate(unsigned int)
   \                     ??allocate_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   E105               LDI     R16, 21
   \   0000000A   E010               LDI     R17, 0
   \   0000000C   01AC               MOVW    R21:R20, R25:R24
   \   0000000E   ........           CALL    ?S_EC_MUL_L02
   \   00000012   ........           CALL    ??allocate
   \   00000016   E0E4               LDI     R30, 4
   \   00000018   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned char * allocator<unsigned char>::allocate(unsigned int)
   \                     ??allocate_2:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   018C               MOVW    R17:R16, R25:R24
   \   0000000A   ........           CALL    ??allocate
   \   0000000E   E0E4               LDI     R30, 4
   \   00000010   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short * allocator<unsigned short>::allocate(unsigned int)
   \                     ??allocate_3:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   018C               MOVW    R17:R16, R25:R24
   \   0000000A   0F00               LSL     R16
   \   0000000C   1F11               ROL     R17
   \   0000000E   ........           CALL    ??allocate
   \   00000012   E0E4               LDI     R30, 4
   \   00000014   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void allocator<string>::construct(string *, string const &)
   \                     ??construct:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   019C               MOVW    R19:R18, R25:R24
   \   0000000C   018D               MOVW    R17:R16, R27:R26
   \   0000000E   ........           CALL    ??_Construct
   \   00000012   E0E6               LDI     R30, 6
   \   00000014   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void allocator<string>::destroy(string *)
   \                     ??destroy:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   018C               MOVW    R17:R16, R25:R24
   \   0000000A   ........           CALL    ??_Destroy
   \   0000000E   E0E4               LDI     R30, 4
   \   00000010   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int allocator<string>::max_size() const
   \                     ??max_size:
   \   00000000   E320               LDI     R18, 48
   \   00000002   E03C               LDI     R19, 12
   \   00000004   2F42               MOV     R20, R18
   \   00000006   2B43               OR      R20, R19
   \   00000008   F011               BREQ    ??max_size_3
   \   0000000A   0189               MOVW    R17:R16, R19:R18
   \   0000000C   9508               RET
   \                     ??max_size_3:
   \   0000000E   E001               LDI     R16, 1
   \   00000010   E010               LDI     R17, 0
   \   00000012   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int allocator<unsigned char>::max_size() const
   \                     ??max_size_1:
   \   00000000   EF2F               LDI     R18, 255
   \   00000002   EF3F               LDI     R19, 255
   \   00000004   2F42               MOV     R20, R18
   \   00000006   2B43               OR      R20, R19
   \   00000008   F011               BREQ    ??max_size_4
   \   0000000A   0189               MOVW    R17:R16, R19:R18
   \   0000000C   9508               RET
   \                     ??max_size_4:
   \   0000000E   E001               LDI     R16, 1
   \   00000010   E010               LDI     R17, 0
   \   00000012   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int allocator<unsigned short>::max_size() const
   \                     ??max_size_2:
   \   00000000   EF2F               LDI     R18, 255
   \   00000002   E73F               LDI     R19, 127
   \   00000004   2F42               MOV     R20, R18
   \   00000006   2B43               OR      R20, R19
   \   00000008   F011               BREQ    ??max_size_5
   \   0000000A   0189               MOVW    R17:R16, R19:R18
   \   0000000C   9508               RET
   \                     ??max_size_5:
   \   0000000E   E001               LDI     R16, 1
   \   00000010   E010               LDI     R17, 0
   \   00000012   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 allocator<void>::allocator()
   \                     ??allocator_3:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Destroy_range(string *, string *, allocator<string> &)
   \                     ??_Destroy_range:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \                     ??_Destroy_range_1:
   \   0000000A   15A4               CP      R26, R4
   \   0000000C   05B5               CPC     R27, R5
   \   0000000E   F031               BREQ    ??_Destroy_range_2
   \   00000010   019D               MOVW    R19:R18, R27:R26
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   ........           CALL    ??destroy
   \   00000018   9655               ADIW    R27:R26, 21
   \   0000001A   CFF7               RJMP    ??_Destroy_range_1
   \                     ??_Destroy_range_2:
   \   0000001C   E0E6               LDI     R30, 6
   \   0000001E   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Uninit_copy0(string const *, string const *, string *)
   \                     ??_Uninit_copy0:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   013A               MOVW    R7:R6, R21:R20
   \   0000000A   0123               MOVW    R5:R4, R7:R6
   \                     ??_Uninit_copy0_1:
   \   0000000C   178A               CP      R24, R26
   \   0000000E   079B               CPC     R25, R27
   \   00000010   F051               BREQ    ??_Uninit_copy0_2
   \   00000012   019C               MOVW    R19:R18, R25:R24
   \   00000014   0183               MOVW    R17:R16, R7:R6
   \   00000016   ........           CALL    ??_Construct
   \   0000001A   E105               LDI     R16, 21
   \   0000001C   0E60               ADD     R6, R16
   \   0000001E   E000               LDI     R16, 0
   \   00000020   1E70               ADC     R7, R16
   \   00000022   9645               ADIW    R25:R24, 21
   \   00000024   CFF3               RJMP    ??_Uninit_copy0_1
   \                     ??_Uninit_copy0_2:
   \   00000026   0183               MOVW    R17:R16, R7:R6
   \   00000028   E0E8               LDI     R30, 8
   \   0000002A   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char *_Uninit_copy(char const *, char const *, char *)
   \                     ??_Uninit_copy:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   013A               MOVW    R7:R6, R21:R20
   \   0000000A   0182               MOVW    R17:R16, R5:R4
   \   0000000C   1B0A               SUB     R16, R26
   \   0000000E   0B1B               SBC     R17, R27
   \   00000010   01C8               MOVW    R25:R24, R17:R16
   \   00000012   01AC               MOVW    R21:R20, R25:R24
   \   00000014   019D               MOVW    R19:R18, R27:R26
   \   00000016   0183               MOVW    R17:R16, R7:R6
   \   00000018   ........           CALL    memmove
   \   0000001C   0F08               ADD     R16, R24
   \   0000001E   1F19               ADC     R17, R25
   \   00000020   E0E8               LDI     R30, 8
   \   00000022   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Uninit_copier<string, false>::_Copy(string const *, string const *, string *)
   \                     ??_Copy_3:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Uninit_copy0
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short *_Uninit_copier<unsigned short, true>::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
   \                     ??_Copy_4:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Uninit_copy
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Uninit_copy(string const *, string const *, string *)
   \                     ??_Uninit_copy_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_3
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short *_Uninit_copy(unsigned short const *, unsigned short const *, unsigned short *)
   \                     ??_Uninit_copy_2:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Copy_4
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Uninit_copy(string const *, string const *, string *, allocator<string> &)
   \                     ??_Uninit_copy_3:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   0138               MOVW    R7:R6, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   012B               MOVW    R5:R4, R23:R22
   \   0000000C   01AC               MOVW    R21:R20, R25:R24
   \   0000000E   019D               MOVW    R19:R18, R27:R26
   \   00000010   0183               MOVW    R17:R16, R7:R6
   \   00000012   ........           CALL    ??_Uninit_copy_1
   \   00000016   E0E8               LDI     R30, 8
   \   00000018   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short *_Uninit_copy(unsigned short const *, unsigned short const *, unsigned short *, allocator<unsigned short> &)
   \                     ??_Uninit_copy_4:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   0138               MOVW    R7:R6, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   012B               MOVW    R5:R4, R23:R22
   \   0000000C   01AC               MOVW    R21:R20, R25:R24
   \   0000000E   019D               MOVW    R19:R18, R27:R26
   \   00000010   0183               MOVW    R17:R16, R7:R6
   \   00000012   ........           CALL    ??_Uninit_copy_2
   \   00000016   E0E8               LDI     R30, 8
   \   00000018   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Uninitialized_copy(string const *, string const *, string *, allocator<string> &)
   \                     ??_Uninitialized_copy:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   0138               MOVW    R7:R6, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   01DA               MOVW    R27:R26, R21:R20
   \   0000000A   01CB               MOVW    R25:R24, R23:R22
   \   0000000C   01BC               MOVW    R23:R22, R25:R24
   \   0000000E   01AD               MOVW    R21:R20, R27:R26
   \   00000010   0192               MOVW    R19:R18, R5:R4
   \   00000012   0183               MOVW    R17:R16, R7:R6
   \   00000014   ........           CALL    ??_Uninit_copy_3
   \   00000018   E0E8               LDI     R30, 8
   \   0000001A   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short *_Uninitialized_copy(unsigned short const *, unsigned short const *, unsigned short *, allocator<unsigned short> &)
   \                     ??_Uninitialized_copy_1:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   0138               MOVW    R7:R6, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   01DA               MOVW    R27:R26, R21:R20
   \   0000000A   01CB               MOVW    R25:R24, R23:R22
   \   0000000C   01BC               MOVW    R23:R22, R25:R24
   \   0000000E   01AD               MOVW    R21:R20, R27:R26
   \   00000010   0192               MOVW    R19:R18, R5:R4
   \   00000012   0183               MOVW    R17:R16, R7:R6
   \   00000014   ........           CALL    ??_Uninit_copy_4
   \   00000018   E0E8               LDI     R30, 8
   \   0000001A   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
   \                     ??_Uninitialized_fill_n:
   \   00000000   ........           CALL    ?PROLOGUE10_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   014B               MOVW    R9:R8, R23:R22
   \   0000000C   0132               MOVW    R7:R6, R5:R4
   \                     ??_Uninitialized_fill_n_2:
   \   0000000E   2F0A               MOV     R16, R26
   \   00000010   2B0B               OR      R16, R27
   \   00000012   F059               BREQ    ??_Uninitialized_fill_n_3
   \   00000014   01AC               MOVW    R21:R20, R25:R24
   \   00000016   0192               MOVW    R19:R18, R5:R4
   \   00000018   0184               MOVW    R17:R16, R9:R8
   \   0000001A   ........           CALL    ??construct
   \   0000001E   9711               SBIW    R27:R26, 1
   \   00000020   E105               LDI     R16, 21
   \   00000022   0E40               ADD     R4, R16
   \   00000024   E000               LDI     R16, 0
   \   00000026   1E50               ADC     R5, R16
   \   00000028   CFF2               RJMP    ??_Uninitialized_fill_n_2
   \                     ??_Uninitialized_fill_n_3:
   \   0000002A   E0EA               LDI     R30, 10
   \   0000002C   ........           JMP     ?EPILOGUE_B10_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Uninitialized_fill_n(unsigned short *, unsigned int, unsigned short const &, allocator<unsigned short> &)
   \                     ??_Uninitialized_fill_n_1:
   \                     ??_Uninitialized_fill_n_4:
   \   00000000   2E02               MOV     R0, R18
   \   00000002   2A03               OR      R0, R19
   \   00000004   F059               BREQ    ??_Uninitialized_fill_n_5
   \   00000006   01FA               MOVW    R31:R30, R21:R20
   \   00000008   8000               LD      R0, Z
   \   0000000A   8011               LDD     R1, Z+1
   \   0000000C   01F8               MOVW    R31:R30, R17:R16
   \   0000000E   8200               ST      Z, R0
   \   00000010   8211               STD     Z+1, R1
   \   00000012   5021               SUBI    R18, 1
   \   00000014   4030               SBCI    R19, 0
   \   00000016   5F0E               SUBI    R16, 254
   \   00000018   4F1F               SBCI    R17, 255
   \   0000001A   CFF2               RJMP    ??_Uninitialized_fill_n_4
   \                     ??_Uninitialized_fill_n_5:
   \   0000001C   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 _Vector_value<allocator<void>>::_Vector_value()
   \                     ??_Vector_value:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_AllocHolder
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   9189               LD      R24, Y+
   \   00000010   9199               LD      R25, Y+
   \   00000012   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_value<allocator<void>>::_Zero()
   \                     ??_Zero:
   \   00000000   E020               LDI     R18, 0
   \   00000002   E030               LDI     R19, 0
   \   00000004   01F8               MOVW    R31:R30, R17:R16
   \   00000006   8320               ST      Z, R18
   \   00000008   8331               STD     Z+1, R19
   \   0000000A   E020               LDI     R18, 0
   \   0000000C   E030               LDI     R19, 0
   \   0000000E   01F8               MOVW    R31:R30, R17:R16
   \   00000010   8322               STD     Z+2, R18
   \   00000012   8333               STD     Z+3, R19
   \   00000014   E020               LDI     R18, 0
   \   00000016   E030               LDI     R19, 0
   \   00000018   01F8               MOVW    R31:R30, R17:R16
   \   0000001A   8324               STD     Z+4, R18
   \   0000001C   8335               STD     Z+5, R19
   \   0000001E   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 bool _Vector_value<allocator<void>>::_Buy(unsigned int)
   \                     ??_Buy:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9722               SBIW    R29:R28, 2
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   01C9               MOVW    R25:R24, R19:R18
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   ........           CALL    ??_Zero
   \   00000010   019E               MOVW    R19:R18, R29:R28
   \   00000012   5F2F               SUBI    R18, 255
   \   00000014   4F3F               SBCI    R19, 255
   \   00000016   018D               MOVW    R17:R16, R27:R26
   \   00000018   ........           CALL    ??_Alval
   \   0000001C   019E               MOVW    R19:R18, R29:R28
   \   0000001E   5F2F               SUBI    R18, 255
   \   00000020   4F3F               SBCI    R19, 255
   \   00000022   018E               MOVW    R17:R16, R29:R28
   \   00000024   ........           CALL    ??allocator_1
   \   00000028   2F08               MOV     R16, R24
   \   0000002A   2B09               OR      R16, R25
   \   0000002C   F411               BRNE    ??_Buy_1
   \   0000002E   E000               LDI     R16, 0
   \   00000030   C020               RJMP    ??_Buy_2
   \                     ??_Buy_1:
   \   00000032   018E               MOVW    R17:R16, R29:R28
   \   00000034   ........           CALL    ??max_size_1
   \   00000038   1708               CP      R16, R24
   \   0000003A   0719               CPC     R17, R25
   \   0000003C   F420               BRCC    ??_Buy_3
   \   0000003E   018D               MOVW    R17:R16, R27:R26
   \   00000040   ........           CALL    ??_Xlen
   \   00000044   C015               RJMP    ??_Buy_4
   \                     ??_Buy_3:
   \   00000046   019C               MOVW    R19:R18, R25:R24
   \   00000048   018E               MOVW    R17:R16, R29:R28
   \   0000004A   ........           CALL    ??allocate_2
   \   0000004E   930D               ST      X+, R16
   \   00000050   931C               ST      X, R17
   \   00000052   9711               SBIW    R27:R26, 1
   \   00000054   910D               LD      R16, X+
   \   00000056   911C               LD      R17, X
   \   00000058   9711               SBIW    R27:R26, 1
   \   0000005A   01FD               MOVW    R31:R30, R27:R26
   \   0000005C   8302               STD     Z+2, R16
   \   0000005E   8313               STD     Z+3, R17
   \   00000060   910D               LD      R16, X+
   \   00000062   911C               LD      R17, X
   \   00000064   9711               SBIW    R27:R26, 1
   \   00000066   0F08               ADD     R16, R24
   \   00000068   1F19               ADC     R17, R25
   \   0000006A   01FD               MOVW    R31:R30, R27:R26
   \   0000006C   8304               STD     Z+4, R16
   \   0000006E   8315               STD     Z+5, R17
   \                     ??_Buy_4:
   \   00000070   E001               LDI     R16, 1
   \                     ??_Buy_2:
   \   00000072   9622               ADIW    R29:R28, 2
   \   00000074   E0E4               LDI     R30, 4
   \   00000076   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned char * _Vector_value<allocator<void>>::_ToBptr(void *)
   \                     ??_ToBptr:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned char * _Vector_value<allocator<void>>::_Bfirst() const
   \                     ??_Bfirst:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8100               LD      R16, Z
   \   00000004   8111               LDD     R17, Z+1
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned char * _Vector_value<allocator<void>>::_Blast() const
   \                     ??_Blast:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8102               LDD     R16, Z+2
   \   00000004   8113               LDD     R17, Z+3
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned char * _Vector_value<allocator<void>>::_Bend() const
   \                     ??_Bend:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8104               LDD     R16, Z+4
   \   00000004   8115               LDD     R17, Z+5
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_value<allocator<void>>::_Bsize() const
   \                     ??_Bsize:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Blast
   \   0000000C   01D8               MOVW    R27:R26, R17:R16
   \   0000000E   018C               MOVW    R17:R16, R25:R24
   \   00000010   ........           CALL    ??_Bfirst
   \   00000014   1BA0               SUB     R26, R16
   \   00000016   0BB1               SBC     R27, R17
   \   00000018   018D               MOVW    R17:R16, R27:R26
   \   0000001A   E0E4               LDI     R30, 4
   \   0000001C   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_value<allocator<void>>::_Bcapacity() const
   \                     ??_Bcapacity:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Bend
   \   0000000C   01D8               MOVW    R27:R26, R17:R16
   \   0000000E   018C               MOVW    R17:R16, R25:R24
   \   00000010   ........           CALL    ??_Bfirst
   \   00000014   1BA0               SUB     R26, R16
   \   00000016   0BB1               SBC     R27, R17
   \   00000018   018D               MOVW    R17:R16, R27:R26
   \   0000001A   E0E4               LDI     R30, 4
   \   0000001C   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_value<allocator<void>>::_Capacity<21U>() const
   \                     ??_Capacity:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Bcapacity
   \   0000000C   E145               LDI     R20, 21
   \   0000000E   E050               LDI     R21, 0
   \   00000010   ........           CALL    ?US_DIVMOD_L02
   \   00000014   9189               LD      R24, Y+
   \   00000016   9199               LD      R25, Y+
   \   00000018   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_value<allocator<void>>::_Capacity<2U>() const
   \                     ??_Capacity_1:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Bcapacity
   \   0000000C   9516               LSR     R17
   \   0000000E   9507               ROR     R16
   \   00000010   9189               LD      R24, Y+
   \   00000012   9199               LD      R25, Y+
   \   00000014   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_value<allocator<void>>::_Size<21U>() const
   \                     ??_Size:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Bsize
   \   0000000C   E145               LDI     R20, 21
   \   0000000E   E050               LDI     R21, 0
   \   00000010   ........           CALL    ?US_DIVMOD_L02
   \   00000014   9189               LD      R24, Y+
   \   00000016   9199               LD      R25, Y+
   \   00000018   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_value<allocator<void>>::_Size<1U>() const
   \                     ??_Size_1:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Bsize
   \   0000000C   E041               LDI     R20, 1
   \   0000000E   E050               LDI     R21, 0
   \   00000010   ........           CALL    ?US_DIVMOD_L02
   \   00000014   9189               LD      R24, Y+
   \   00000016   9199               LD      R25, Y+
   \   00000018   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_value<allocator<void>>::_Size<2U>() const
   \                     ??_Size_2:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Bsize
   \   0000000C   9516               LSR     R17
   \   0000000E   9507               ROR     R16
   \   00000010   9189               LD      R24, Y+
   \   00000012   9199               LD      R25, Y+
   \   00000014   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_value<allocator<void>>::_Xlen() const
   \                     ??_Xlen:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 _Vector_impl<string, allocator<string>>::_Vector_impl()
   \                     ??_Vector_impl:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Vector_value
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   9189               LD      R24, Y+
   \   00000010   9199               LD      R25, Y+
   \   00000012   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 _Vector_impl<unsigned short, allocator<unsigned short>>::_Vector_impl()
   \                     ??_Vector_impl_1:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Vector_value
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   9189               LD      R24, Y+
   \   00000010   9199               LD      R25, Y+
   \   00000012   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Altyval() const
   \                     ??_Altyval:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
   \   0000000A   019E               MOVW    R19:R18, R29:R28
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   ........           CALL    ??_Alval_1
   \   00000012   019E               MOVW    R19:R18, R29:R28
   \   00000014   018D               MOVW    R17:R16, R27:R26
   \   00000016   ........           CALL    ??allocator
   \   0000001A   9621               ADIW    R29:R28, 1
   \   0000001C   E0E4               LDI     R30, 4
   \   0000001E   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<unsigned short, allocator<unsigned short>>::_Altyval() const
   \                     ??_Altyval_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
   \   0000000A   019E               MOVW    R19:R18, R29:R28
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   ........           CALL    ??_Alval_1
   \   00000012   019E               MOVW    R19:R18, R29:R28
   \   00000014   018D               MOVW    R17:R16, R27:R26
   \   00000016   ........           CALL    ??allocator_2
   \   0000001A   9621               ADIW    R29:R28, 1
   \   0000001C   E0E4               LDI     R30, 4
   \   0000001E   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_EraseAll()
   \                     ??_EraseAll:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   018D               MOVW    R17:R16, R27:R26
   \   00000008   ........           CALL    ??_Mytylast
   \   0000000C   01C8               MOVW    R25:R24, R17:R16
   \   0000000E   018D               MOVW    R17:R16, R27:R26
   \   00000010   ........           CALL    ??_Mytyfirst
   \   00000014   01AC               MOVW    R21:R20, R25:R24
   \   00000016   0198               MOVW    R19:R18, R17:R16
   \   00000018   018D               MOVW    R17:R16, R27:R26
   \   0000001A   ........           CALL    ??_Destroy_1
   \   0000001E   910D               LD      R16, X+
   \   00000020   911C               LD      R17, X
   \   00000022   9711               SBIW    R27:R26, 1
   \   00000024   9612               ADIW    R27:R26, 2
   \   00000026   930D               ST      X+, R16
   \   00000028   931C               ST      X, R17
   \   0000002A   9713               SBIW    R27:R26, 3
   \   0000002C   E0E4               LDI     R30, 4
   \   0000002E   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<unsigned short, allocator<unsigned short>>::_EraseAll()
   \                     ??_EraseAll_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   018D               MOVW    R17:R16, R27:R26
   \   00000008   ........           CALL    ??_Mytylast_1
   \   0000000C   01C8               MOVW    R25:R24, R17:R16
   \   0000000E   018D               MOVW    R17:R16, R27:R26
   \   00000010   ........           CALL    ??_Mytyfirst_1
   \   00000014   01AC               MOVW    R21:R20, R25:R24
   \   00000016   0198               MOVW    R19:R18, R17:R16
   \   00000018   018D               MOVW    R17:R16, R27:R26
   \   0000001A   ........           CALL    ??_Destroy_2
   \   0000001E   910D               LD      R16, X+
   \   00000020   911C               LD      R17, X
   \   00000022   9711               SBIW    R27:R26, 1
   \   00000024   9612               ADIW    R27:R26, 2
   \   00000026   930D               ST      X+, R16
   \   00000028   931C               ST      X, R17
   \   0000002A   9713               SBIW    R27:R26, 3
   \   0000002C   E0E4               LDI     R30, 4
   \   0000002E   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   01FC               MOVW    R31:R30, R25:R24
   \   0000000A   8100               LD      R16, Z
   \   0000000C   8111               LDD     R17, Z+1
   \   0000000E   2B01               OR      R16, R17
   \   00000010   F0F9               BREQ    ??_Tidy0_2
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   ........           CALL    ??_EraseAll
   \   00000018   018C               MOVW    R17:R16, R25:R24
   \   0000001A   ........           CALL    ??_Mytyend
   \   0000001E   0128               MOVW    R5:R4, R17:R16
   \   00000020   018C               MOVW    R17:R16, R25:R24
   \   00000022   ........           CALL    ??_Mytyfirst
   \   00000026   0138               MOVW    R7:R6, R17:R16
   \   00000028   018C               MOVW    R17:R16, R25:R24
   \   0000002A   ........           CALL    ??_Mytyfirst
   \   0000002E   01D8               MOVW    R27:R26, R17:R16
   \   00000030   019E               MOVW    R19:R18, R29:R28
   \   00000032   018C               MOVW    R17:R16, R25:R24
   \   00000034   ........           CALL    ??_Altyval
   \   00000038   1846               SUB     R4, R6
   \   0000003A   0857               SBC     R5, R7
   \   0000003C   0182               MOVW    R17:R16, R5:R4
   \   0000003E   E145               LDI     R20, 21
   \   00000040   E050               LDI     R21, 0
   \   00000042   ........           CALL    ?SS_DIVMOD_L02
   \   00000046   01A8               MOVW    R21:R20, R17:R16
   \   00000048   019D               MOVW    R19:R18, R27:R26
   \   0000004A   018E               MOVW    R17:R16, R29:R28
   \   0000004C   ........           CALL    ??deallocate_1
   \                     ??_Tidy0_2:
   \   00000050   9621               ADIW    R29:R28, 1
   \   00000052   E0E8               LDI     R30, 8
   \   00000054   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
   \                     ??_Tidy0_1:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   01FC               MOVW    R31:R30, R25:R24
   \   0000000A   8100               LD      R16, Z
   \   0000000C   8111               LDD     R17, Z+1
   \   0000000E   2B01               OR      R16, R17
   \   00000010   F0E1               BREQ    ??_Tidy0_3
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   ........           CALL    ??_EraseAll_1
   \   00000018   018C               MOVW    R17:R16, R25:R24
   \   0000001A   ........           CALL    ??_Mytyend_1
   \   0000001E   01D8               MOVW    R27:R26, R17:R16
   \   00000020   018C               MOVW    R17:R16, R25:R24
   \   00000022   ........           CALL    ??_Mytyfirst_1
   \   00000026   0138               MOVW    R7:R6, R17:R16
   \   00000028   018C               MOVW    R17:R16, R25:R24
   \   0000002A   ........           CALL    ??_Mytyfirst_1
   \   0000002E   0128               MOVW    R5:R4, R17:R16
   \   00000030   019E               MOVW    R19:R18, R29:R28
   \   00000032   018C               MOVW    R17:R16, R25:R24
   \   00000034   ........           CALL    ??_Altyval_1
   \   00000038   19A6               SUB     R26, R6
   \   0000003A   09B7               SBC     R27, R7
   \   0000003C   95B5               ASR     R27
   \   0000003E   95A7               ROR     R26
   \   00000040   01AD               MOVW    R21:R20, R27:R26
   \   00000042   0192               MOVW    R19:R18, R5:R4
   \   00000044   018E               MOVW    R17:R16, R29:R28
   \   00000046   ........           CALL    ??deallocate_2
   \                     ??_Tidy0_3:
   \   0000004A   9621               ADIW    R29:R28, 1
   \   0000004C   E0E8               LDI     R30, 8
   \   0000004E   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Tidy()
   \                     ??_Tidy:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Tidy0
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   ........           CALL    ??_Zero
   \   00000012   9189               LD      R24, Y+
   \   00000014   9199               LD      R25, Y+
   \   00000016   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
   \                     ??_Destroy_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
   \   0000000A   012A               MOVW    R5:R4, R21:R20
   \   0000000C   019E               MOVW    R19:R18, R29:R28
   \   0000000E   018C               MOVW    R17:R16, R25:R24
   \   00000010   ........           CALL    ??_Altyval
   \   00000014   01AE               MOVW    R21:R20, R29:R28
   \   00000016   0192               MOVW    R19:R18, R5:R4
   \   00000018   018D               MOVW    R17:R16, R27:R26
   \   0000001A   ........           CALL    ??_Destroy_range
   \   0000001E   9621               ADIW    R29:R28, 1
   \   00000020   E0E6               LDI     R30, 6
   \   00000022   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<unsigned short, allocator<unsigned short>>::_Destroy(unsigned short *, unsigned short *)
   \                     ??_Destroy_2:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Assign(_Vector_impl<string, allocator<string>> const &)
   \                     ??_Assign:
   \   00000000   ........           CALL    ?PROLOGUE10_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   01C9               MOVW    R25:R24, R19:R18
   \   0000000A   17A8               CP      R26, R24
   \   0000000C   07B9               CPC     R27, R25
   \   0000000E   F409               BRNE    $+2+2
   \   00000010   C0BA               RJMP    ??_Assign_1
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   ........           CALL    ??size_1
   \   00000018   2B01               OR      R16, R17
   \   0000001A   F421               BRNE    ??_Assign_2
   \   0000001C   018D               MOVW    R17:R16, R27:R26
   \   0000001E   ........           CALL    ??_Tidy
   \   00000022   C0B1               RJMP    ??_Assign_1
   \                     ??_Assign_2:
   \   00000024   018D               MOVW    R17:R16, R27:R26
   \   00000026   ........           CALL    ??size_1
   \   0000002A   0128               MOVW    R5:R4, R17:R16
   \   0000002C   018C               MOVW    R17:R16, R25:R24
   \   0000002E   ........           CALL    ??size_1
   \   00000032   1640               CP      R4, R16
   \   00000034   0651               CPC     R5, R17
   \   00000036   F148               BRCS    ??_Assign_3
   \   00000038   018D               MOVW    R17:R16, R27:R26
   \   0000003A   ........           CALL    ??_Mytyfirst
   \   0000003E   0148               MOVW    R9:R8, R17:R16
   \   00000040   018C               MOVW    R17:R16, R25:R24
   \   00000042   ........           CALL    ??_Mytylast
   \   00000046   0128               MOVW    R5:R4, R17:R16
   \   00000048   018C               MOVW    R17:R16, R25:R24
   \   0000004A   ........           CALL    ??_Mytyfirst
   \   0000004E   01A4               MOVW    R21:R20, R9:R8
   \   00000050   0192               MOVW    R19:R18, R5:R4
   \   00000052   ........           CALL    ??copy
   \   00000056   0138               MOVW    R7:R6, R17:R16
   \   00000058   018D               MOVW    R17:R16, R27:R26
   \   0000005A   ........           CALL    ??_Mytylast
   \   0000005E   01A8               MOVW    R21:R20, R17:R16
   \   00000060   0193               MOVW    R19:R18, R7:R6
   \   00000062   018D               MOVW    R17:R16, R27:R26
   \   00000064   ........           CALL    ??_Destroy_1
   \   00000068   018D               MOVW    R17:R16, R27:R26
   \   0000006A   ........           CALL    ??_Mytyfirst
   \   0000006E   0128               MOVW    R5:R4, R17:R16
   \   00000070   018C               MOVW    R17:R16, R25:R24
   \   00000072   ........           CALL    ??size_1
   \   00000076   E145               LDI     R20, 21
   \   00000078   E050               LDI     R21, 0
   \   0000007A   ........           CALL    ?S_EC_MUL_L02
   \   0000007E   0E40               ADD     R4, R16
   \   00000080   1E51               ADC     R5, R17
   \   00000082   01FD               MOVW    R31:R30, R27:R26
   \   00000084   8242               STD     Z+2, R4
   \   00000086   8253               STD     Z+3, R5
   \   00000088   C07E               RJMP    ??_Assign_1
   \                     ??_Assign_3:
   \   0000008A   018D               MOVW    R17:R16, R27:R26
   \   0000008C   ........           CALL    ??capacity
   \   00000090   0128               MOVW    R5:R4, R17:R16
   \   00000092   018C               MOVW    R17:R16, R25:R24
   \   00000094   ........           CALL    ??size_1
   \   00000098   1640               CP      R4, R16
   \   0000009A   0651               CPC     R5, R17
   \   0000009C   F150               BRCS    ??_Assign_4
   \   0000009E   018C               MOVW    R17:R16, R25:R24
   \   000000A0   ........           CALL    ??_Mytyfirst
   \   000000A4   0128               MOVW    R5:R4, R17:R16
   \   000000A6   018D               MOVW    R17:R16, R27:R26
   \   000000A8   ........           CALL    ??size_1
   \   000000AC   E145               LDI     R20, 21
   \   000000AE   E050               LDI     R21, 0
   \   000000B0   ........           CALL    ?S_EC_MUL_L02
   \   000000B4   0E40               ADD     R4, R16
   \   000000B6   1E51               ADC     R5, R17
   \   000000B8   0132               MOVW    R7:R6, R5:R4
   \   000000BA   018D               MOVW    R17:R16, R27:R26
   \   000000BC   ........           CALL    ??_Mytyfirst
   \   000000C0   0128               MOVW    R5:R4, R17:R16
   \   000000C2   018C               MOVW    R17:R16, R25:R24
   \   000000C4   ........           CALL    ??_Mytyfirst
   \   000000C8   01A2               MOVW    R21:R20, R5:R4
   \   000000CA   0193               MOVW    R19:R18, R7:R6
   \   000000CC   ........           CALL    ??copy
   \   000000D0   018D               MOVW    R17:R16, R27:R26
   \   000000D2   ........           CALL    ??_Mytylast
   \   000000D6   0128               MOVW    R5:R4, R17:R16
   \   000000D8   018C               MOVW    R17:R16, R25:R24
   \   000000DA   ........           CALL    ??_Mytylast
   \   000000DE   01B2               MOVW    R23:R22, R5:R4
   \   000000E0   01A8               MOVW    R21:R20, R17:R16
   \   000000E2   0193               MOVW    R19:R18, R7:R6
   \   000000E4   018D               MOVW    R17:R16, R27:R26
   \   000000E6   ........           CALL    ??_Ucopy
   \   000000EA   01FD               MOVW    R31:R30, R27:R26
   \   000000EC   8302               STD     Z+2, R16
   \   000000EE   8313               STD     Z+3, R17
   \   000000F0   C04A               RJMP    ??_Assign_1
   \                     ??_Assign_4:
   \   000000F2   910D               LD      R16, X+
   \   000000F4   911C               LD      R17, X
   \   000000F6   9711               SBIW    R27:R26, 1
   \   000000F8   2B01               OR      R16, R17
   \   000000FA   F141               BREQ    ??_Assign_5
   \   000000FC   018D               MOVW    R17:R16, R27:R26
   \   000000FE   ........           CALL    ??_Mytylast
   \   00000102   0128               MOVW    R5:R4, R17:R16
   \   00000104   018D               MOVW    R17:R16, R27:R26
   \   00000106   ........           CALL    ??_Mytyfirst
   \   0000010A   0198               MOVW    R19:R18, R17:R16
   \   0000010C   01A2               MOVW    R21:R20, R5:R4
   \   0000010E   018D               MOVW    R17:R16, R27:R26
   \   00000110   ........           CALL    ??_Destroy_1
   \   00000114   018D               MOVW    R17:R16, R27:R26
   \   00000116   ........           CALL    ??_Mytyend
   \   0000011A   0138               MOVW    R7:R6, R17:R16
   \   0000011C   018D               MOVW    R17:R16, R27:R26
   \   0000011E   ........           CALL    ??_Mytyfirst
   \   00000122   0148               MOVW    R9:R8, R17:R16
   \   00000124   018D               MOVW    R17:R16, R27:R26
   \   00000126   ........           CALL    ??_Mytyfirst
   \   0000012A   0128               MOVW    R5:R4, R17:R16
   \   0000012C   019E               MOVW    R19:R18, R29:R28
   \   0000012E   018D               MOVW    R17:R16, R27:R26
   \   00000130   ........           CALL    ??_Altyval
   \   00000134   1868               SUB     R6, R8
   \   00000136   0879               SBC     R7, R9
   \   00000138   0183               MOVW    R17:R16, R7:R6
   \   0000013A   E145               LDI     R20, 21
   \   0000013C   E050               LDI     R21, 0
   \   0000013E   ........           CALL    ?SS_DIVMOD_L02
   \   00000142   01A8               MOVW    R21:R20, R17:R16
   \   00000144   0192               MOVW    R19:R18, R5:R4
   \   00000146   018E               MOVW    R17:R16, R29:R28
   \   00000148   ........           CALL    ??deallocate_1
   \                     ??_Assign_5:
   \   0000014C   018C               MOVW    R17:R16, R25:R24
   \   0000014E   ........           CALL    ??_Size_1
   \   00000152   0198               MOVW    R19:R18, R17:R16
   \   00000154   018D               MOVW    R17:R16, R27:R26
   \   00000156   ........           CALL    ??_Buy
   \   0000015A   2300               TST     R16
   \   0000015C   F0A1               BREQ    ??_Assign_1
   \   0000015E   018D               MOVW    R17:R16, R27:R26
   \   00000160   ........           CALL    ??_Mytyfirst
   \   00000164   0138               MOVW    R7:R6, R17:R16
   \   00000166   018C               MOVW    R17:R16, R25:R24
   \   00000168   ........           CALL    ??_Mytylast
   \   0000016C   0128               MOVW    R5:R4, R17:R16
   \   0000016E   018C               MOVW    R17:R16, R25:R24
   \   00000170   ........           CALL    ??_Mytyfirst
   \   00000174   01B3               MOVW    R23:R22, R7:R6
   \   00000176   01A2               MOVW    R21:R20, R5:R4
   \   00000178   0198               MOVW    R19:R18, R17:R16
   \   0000017A   018D               MOVW    R17:R16, R27:R26
   \   0000017C   ........           CALL    ??_Ucopy
   \   00000180   01FD               MOVW    R31:R30, R27:R26
   \   00000182   8302               STD     Z+2, R16
   \   00000184   8313               STD     Z+3, R17
   \                     ??_Assign_1:
   \   00000186   9621               ADIW    R29:R28, 1
   \   00000188   E0EA               LDI     R30, 10
   \   0000018A   ........           JMP     ?EPILOGUE_B10_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Insert(string *, string const &)
   \                     ??_Insert:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01AC               MOVW    R21:R20, R25:R24
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   0182               MOVW    R17:R16, R5:R4
   \   00000010   ........           CALL    ??_Insert0
   \   00000014   E0E6               LDI     R30, 6
   \   00000016   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short * _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert(unsigned short *, unsigned short const &)
   \                     ??_Insert_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   0128               MOVW    R5:R4, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   01DA               MOVW    R27:R26, R21:R20
   \   0000000A   914D               LD      R20, X+
   \   0000000C   915C               LD      R21, X
   \   0000000E   9711               SBIW    R27:R26, 1
   \   00000010   019C               MOVW    R19:R18, R25:R24
   \   00000012   0182               MOVW    R17:R16, R5:R4
   \   00000014   ........           CALL    ??_Insert0_1
   \   00000018   E0E6               LDI     R30, 6
   \   0000001A   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Insert_n(string *, unsigned int, string const &)
   \                     ??_Insert_n:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   9765               SBIW    R29:R28, 21
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
   \   0000000A   013A               MOVW    R7:R6, R21:R20
   \   0000000C   012B               MOVW    R5:R4, R23:R22
   \   0000000E   0192               MOVW    R19:R18, R5:R4
   \   00000010   018E               MOVW    R17:R16, R29:R28
   \   00000012   ........           CALL    ??string_1
   \   00000016   01BE               MOVW    R23:R22, R29:R28
   \   00000018   01A3               MOVW    R21:R20, R7:R6
   \   0000001A   019D               MOVW    R19:R18, R27:R26
   \   0000001C   018C               MOVW    R17:R16, R25:R24
   \   0000001E   ........           CALL    ??_Insert_n0
   \   00000022   018E               MOVW    R17:R16, R29:R28
   \   00000024   ........           CALL    `?~string`
   \   00000028   9665               ADIW    R29:R28, 21
   \   0000002A   E0E8               LDI     R30, 8
   \   0000002C   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n(unsigned short *, unsigned int, unsigned short const &)
   \                     ??_Insert_n_1:
   \   00000000   ........           CALL    ?PROLOGUE10_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004   0148               MOVW    R9:R8, R17:R16
   \   00000006   0139               MOVW    R7:R6, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   01DB               MOVW    R27:R26, R23:R22
   \   0000000C   01FD               MOVW    R31:R30, R27:R26
   \   0000000E   8100               LD      R16, Z
   \   00000010   8111               LDD     R17, Z+1
   \   00000012   0128               MOVW    R5:R4, R17:R16
   \   00000014   01B2               MOVW    R23:R22, R5:R4
   \   00000016   01AC               MOVW    R21:R20, R25:R24
   \   00000018   0193               MOVW    R19:R18, R7:R6
   \   0000001A   0184               MOVW    R17:R16, R9:R8
   \   0000001C   ........           CALL    ??_Insert_n0_1
   \   00000020   E0EA               LDI     R30, 10
   \   00000022   ........           JMP     ?EPILOGUE_B10_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Erase(string *)
   \                     ??_Erase:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   018C               MOVW    R17:R16, R25:R24
   \   0000000A   ........           CALL    ??_Mytylast
   \   0000000E   01A2               MOVW    R21:R20, R5:R4
   \   00000010   0198               MOVW    R19:R18, R17:R16
   \   00000012   0182               MOVW    R17:R16, R5:R4
   \   00000014   5E0B               SUBI    R16, 235
   \   00000016   4F1F               SBCI    R17, 255
   \   00000018   ........           CALL    ??copy
   \   0000001C   018C               MOVW    R17:R16, R25:R24
   \   0000001E   ........           CALL    ??_Mytylast
   \   00000022   01D8               MOVW    R27:R26, R17:R16
   \   00000024   018C               MOVW    R17:R16, R25:R24
   \   00000026   ........           CALL    ??_Mytylast
   \   0000002A   0198               MOVW    R19:R18, R17:R16
   \   0000002C   01AD               MOVW    R21:R20, R27:R26
   \   0000002E   5125               SUBI    R18, 21
   \   00000030   4030               SBCI    R19, 0
   \   00000032   018C               MOVW    R17:R16, R25:R24
   \   00000034   ........           CALL    ??_Destroy_1
   \   00000038   018C               MOVW    R17:R16, R25:R24
   \   0000003A   ........           CALL    ??_Mytylast
   \   0000003E   5105               SUBI    R16, 21
   \   00000040   4010               SBCI    R17, 0
   \   00000042   01FC               MOVW    R31:R30, R25:R24
   \   00000044   8302               STD     Z+2, R16
   \   00000046   8313               STD     Z+3, R17
   \   00000048   0182               MOVW    R17:R16, R5:R4
   \   0000004A   E0E6               LDI     R30, 6
   \   0000004C   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Push_back(string const &)
   \                     ??_Push_back:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   019C               MOVW    R19:R18, R25:R24
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   ........           CALL    ??_Push_back0
   \   00000010   E0E4               LDI     R30, 4
   \   00000012   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back(ITerminalCommand * const &)
   \                     ??_Push_back_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   912D               LD      R18, X+
   \   0000000A   913C               LD      R19, X
   \   0000000C   9711               SBIW    R27:R26, 1
   \   0000000E   018C               MOVW    R17:R16, R25:R24
   \   00000010   ........           CALL    ??_Push_back0_1
   \   00000014   E0E4               LDI     R30, 4
   \   00000016   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Mytyfirst() const
   \                     ??_Mytyfirst:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8100               LD      R16, Z
   \   00000004   8111               LDD     R17, Z+1
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short * _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyfirst() const
   \                     ??_Mytyfirst_1:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8100               LD      R16, Z
   \   00000004   8111               LDD     R17, Z+1
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Mytylast() const
   \                     ??_Mytylast:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8102               LDD     R16, Z+2
   \   00000004   8113               LDD     R17, Z+3
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short * _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
   \                     ??_Mytylast_1:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8102               LDD     R16, Z+2
   \   00000004   8113               LDD     R17, Z+3
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Mytyend() const
   \                     ??_Mytyend:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8104               LDD     R16, Z+4
   \   00000004   8115               LDD     R17, Z+5
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short * _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyend() const
   \                     ??_Mytyend_1:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8104               LDD     R16, Z+4
   \   00000004   8115               LDD     R17, Z+5
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Make_room(string *, unsigned int)
   \                     ??_Make_room:
   \   00000000   ........           CALL    ?PROLOGUE16_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004                      REQUIRE ?Register_R10_is_cg_reg
   \   00000004                      REQUIRE ?Register_R11_is_cg_reg
   \   00000004                      REQUIRE ?Register_R12_is_cg_reg
   \   00000004                      REQUIRE ?Register_R13_is_cg_reg
   \   00000004                      REQUIRE ?Register_R14_is_cg_reg
   \   00000004                      REQUIRE ?Register_R15_is_cg_reg
   \   00000004   9724               SBIW    R29:R28, 4
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   0149               MOVW    R9:R8, R19:R18
   \   0000000A   01CA               MOVW    R25:R24, R21:R20
   \   0000000C   018D               MOVW    R17:R16, R27:R26
   \   0000000E   ........           CALL    ??capacity
   \   00000012   0128               MOVW    R5:R4, R17:R16
   \   00000014   019E               MOVW    R19:R18, R29:R28
   \   00000016   5F2F               SUBI    R18, 255
   \   00000018   4F3F               SBCI    R19, 255
   \   0000001A   018D               MOVW    R17:R16, R27:R26
   \   0000001C   ........           CALL    ??_Alval
   \   00000020   019E               MOVW    R19:R18, R29:R28
   \   00000022   5F2F               SUBI    R18, 255
   \   00000024   4F3F               SBCI    R19, 255
   \   00000026   018E               MOVW    R17:R16, R29:R28
   \   00000028   ........           CALL    ??allocator
   \   0000002C   018D               MOVW    R17:R16, R27:R26
   \   0000002E   ........           CALL    ??size_1
   \   00000032   0138               MOVW    R7:R6, R17:R16
   \   00000034   2F08               MOV     R16, R24
   \   00000036   2B09               OR      R16, R25
   \   00000038   F409               BRNE    $+2+2
   \   0000003A   C0DC               RJMP    ??_Make_room_2
   \   0000003C   018E               MOVW    R17:R16, R29:R28
   \   0000003E   ........           CALL    ??max_size
   \   00000042   1906               SUB     R16, R6
   \   00000044   0917               SBC     R17, R7
   \   00000046   1708               CP      R16, R24
   \   00000048   0719               CPC     R17, R25
   \   0000004A   F420               BRCC    ??_Make_room_3
   \   0000004C   018D               MOVW    R17:R16, R27:R26
   \   0000004E   ........           CALL    ??_Xlen
   \   00000052   C0D0               RJMP    ??_Make_room_2
   \                     ??_Make_room_3:
   \   00000054   0183               MOVW    R17:R16, R7:R6
   \   00000056   0F08               ADD     R16, R24
   \   00000058   1F19               ADC     R17, R25
   \   0000005A   1640               CP      R4, R16
   \   0000005C   0651               CPC     R5, R17
   \   0000005E   F008               BRCS    $+2+2
   \   00000060   C062               RJMP    ??_Make_room_4
   \   00000062   018E               MOVW    R17:R16, R29:R28
   \   00000064   ........           CALL    ??max_size
   \   00000068   0192               MOVW    R19:R18, R5:R4
   \   0000006A   9536               LSR     R19
   \   0000006C   9527               ROR     R18
   \   0000006E   1B02               SUB     R16, R18
   \   00000070   0B13               SBC     R17, R19
   \   00000072   1504               CP      R16, R4
   \   00000074   0515               CPC     R17, R5
   \   00000076   F418               BRCC    ??_Make_room_5
   \   00000078   2444               CLR     R4
   \   0000007A   2455               CLR     R5
   \   0000007C   C005               RJMP    ??_Make_room_6
   \                     ??_Make_room_5:
   \   0000007E   0182               MOVW    R17:R16, R5:R4
   \   00000080   9516               LSR     R17
   \   00000082   9507               ROR     R16
   \   00000084   0E40               ADD     R4, R16
   \   00000086   1E51               ADC     R5, R17
   \                     ??_Make_room_6:
   \   00000088   0183               MOVW    R17:R16, R7:R6
   \   0000008A   0F08               ADD     R16, R24
   \   0000008C   1F19               ADC     R17, R25
   \   0000008E   1640               CP      R4, R16
   \   00000090   0651               CPC     R5, R17
   \   00000092   F420               BRCC    ??_Make_room_7
   \   00000094   0183               MOVW    R17:R16, R7:R6
   \   00000096   0F08               ADD     R16, R24
   \   00000098   1F19               ADC     R17, R25
   \   0000009A   0128               MOVW    R5:R4, R17:R16
   \                     ??_Make_room_7:
   \   0000009C   0192               MOVW    R19:R18, R5:R4
   \   0000009E   018E               MOVW    R17:R16, R29:R28
   \   000000A0   ........           CALL    ??allocate_1
   \   000000A4   0158               MOVW    R11:R10, R17:R16
   \   000000A6   82AA               STD     Y+2, R10
   \   000000A8   82BB               STD     Y+3, R11
   \   000000AA   018D               MOVW    R17:R16, R27:R26
   \   000000AC   ........           CALL    ??_Mytyfirst
   \   000000B0   01B5               MOVW    R23:R22, R11:R10
   \   000000B2   01A4               MOVW    R21:R20, R9:R8
   \   000000B4   0198               MOVW    R19:R18, R17:R16
   \   000000B6   018D               MOVW    R17:R16, R27:R26
   \   000000B8   ........           CALL    ??_Ucopy
   \   000000BC   0168               MOVW    R13:R12, R17:R16
   \   000000BE   E105               LDI     R16, 21
   \   000000C0   E010               LDI     R17, 0
   \   000000C2   01AC               MOVW    R21:R20, R25:R24
   \   000000C4   ........           CALL    ?S_EC_MUL_L02
   \   000000C8   0196               MOVW    R19:R18, R13:R12
   \   000000CA   0F20               ADD     R18, R16
   \   000000CC   1F31               ADC     R19, R17
   \   000000CE   0179               MOVW    R15:R14, R19:R18
   \   000000D0   018D               MOVW    R17:R16, R27:R26
   \   000000D2   ........           CALL    ??_Mytylast
   \   000000D6   01A8               MOVW    R21:R20, R17:R16
   \   000000D8   01B7               MOVW    R23:R22, R15:R14
   \   000000DA   0194               MOVW    R19:R18, R9:R8
   \   000000DC   018D               MOVW    R17:R16, R27:R26
   \   000000DE   ........           CALL    ??_Ucopy
   \   000000E2   830A               STD     Y+2, R16
   \   000000E4   831B               STD     Y+3, R17
   \   000000E6   0D86               ADD     R24, R6
   \   000000E8   1D97               ADC     R25, R7
   \   000000EA   018D               MOVW    R17:R16, R27:R26
   \   000000EC   ........           CALL    ??_Tidy0
   \   000000F0   E105               LDI     R16, 21
   \   000000F2   E010               LDI     R17, 0
   \   000000F4   01A2               MOVW    R21:R20, R5:R4
   \   000000F6   ........           CALL    ?S_EC_MUL_L02
   \   000000FA   0195               MOVW    R19:R18, R11:R10
   \   000000FC   0F20               ADD     R18, R16
   \   000000FE   1F31               ADC     R19, R17
   \   00000100   01FD               MOVW    R31:R30, R27:R26
   \   00000102   8324               STD     Z+4, R18
   \   00000104   8335               STD     Z+5, R19
   \   00000106   E105               LDI     R16, 21
   \   00000108   E010               LDI     R17, 0
   \   0000010A   01AC               MOVW    R21:R20, R25:R24
   \   0000010C   ........           CALL    ?S_EC_MUL_L02
   \   00000110   0195               MOVW    R19:R18, R11:R10
   \   00000112   0F20               ADD     R18, R16
   \   00000114   1F31               ADC     R19, R17
   \   00000116   01FD               MOVW    R31:R30, R27:R26
   \   00000118   8322               STD     Z+2, R18
   \   0000011A   8333               STD     Z+3, R19
   \   0000011C   92AD               ST      X+, R10
   \   0000011E   92BC               ST      X, R11
   \   00000120   9711               SBIW    R27:R26, 1
   \   00000122   0146               MOVW    R9:R8, R13:R12
   \   00000124   C067               RJMP    ??_Make_room_2
   \                     ??_Make_room_4:
   \   00000126   018D               MOVW    R17:R16, R27:R26
   \   00000128   ........           CALL    ??_Mytylast
   \   0000012C   1908               SUB     R16, R8
   \   0000012E   0919               SBC     R17, R9
   \   00000130   E145               LDI     R20, 21
   \   00000132   E050               LDI     R21, 0
   \   00000134   ........           CALL    ?SS_DIVMOD_L02
   \   00000138   1708               CP      R16, R24
   \   0000013A   0719               CPC     R17, R25
   \   0000013C   F540               BRCC    ??_Make_room_8
   \   0000013E   018D               MOVW    R17:R16, R27:R26
   \   00000140   ........           CALL    ??_Mytylast
   \   00000144   0198               MOVW    R19:R18, R17:R16
   \   00000146   E105               LDI     R16, 21
   \   00000148   E010               LDI     R17, 0
   \   0000014A   01AC               MOVW    R21:R20, R25:R24
   \   0000014C   ........           CALL    ?S_EC_MUL_L02
   \   00000150   01B4               MOVW    R23:R22, R9:R8
   \   00000152   0F60               ADD     R22, R16
   \   00000154   1F71               ADC     R23, R17
   \   00000156   01A9               MOVW    R21:R20, R19:R18
   \   00000158   0194               MOVW    R19:R18, R9:R8
   \   0000015A   018D               MOVW    R17:R16, R27:R26
   \   0000015C   ........           CALL    ??_Ucopy
   \   00000160   018D               MOVW    R17:R16, R27:R26
   \   00000162   ........           CALL    ??_Mytylast
   \   00000166   01A8               MOVW    R21:R20, R17:R16
   \   00000168   0194               MOVW    R19:R18, R9:R8
   \   0000016A   018D               MOVW    R17:R16, R27:R26
   \   0000016C   ........           CALL    ??_Destroy_1
   \   00000170   018D               MOVW    R17:R16, R27:R26
   \   00000172   ........           CALL    ??_Mytylast
   \   00000176   0198               MOVW    R19:R18, R17:R16
   \   00000178   E105               LDI     R16, 21
   \   0000017A   E010               LDI     R17, 0
   \   0000017C   01AC               MOVW    R21:R20, R25:R24
   \   0000017E   ........           CALL    ?S_EC_MUL_L02
   \   00000182   0F20               ADD     R18, R16
   \   00000184   1F31               ADC     R19, R17
   \   00000186   01FD               MOVW    R31:R30, R27:R26
   \   00000188   8322               STD     Z+2, R18
   \   0000018A   8333               STD     Z+3, R19
   \   0000018C   C033               RJMP    ??_Make_room_2
   \                     ??_Make_room_8:
   \   0000018E   018D               MOVW    R17:R16, R27:R26
   \   00000190   ........           CALL    ??_Mytylast
   \   00000194   0158               MOVW    R11:R10, R17:R16
   \   00000196   018D               MOVW    R17:R16, R27:R26
   \   00000198   ........           CALL    ??_Mytylast
   \   0000019C   01B8               MOVW    R23:R22, R17:R16
   \   0000019E   01A5               MOVW    R21:R20, R11:R10
   \   000001A0   011A               MOVW    R3:R2, R21:R20
   \   000001A2   EE0B               LDI     R16, 235
   \   000001A4   EF1F               LDI     R17, 255
   \   000001A6   01AC               MOVW    R21:R20, R25:R24
   \   000001A8   ........           CALL    ?S_EC_MUL_L02
   \   000001AC   0195               MOVW    R19:R18, R11:R10
   \   000001AE   0F20               ADD     R18, R16
   \   000001B0   1F31               ADC     R19, R17
   \   000001B2   01A1               MOVW    R21:R20, R3:R2
   \   000001B4   018D               MOVW    R17:R16, R27:R26
   \   000001B6   ........           CALL    ??_Ucopy
   \   000001BA   01FD               MOVW    R31:R30, R27:R26
   \   000001BC   8302               STD     Z+2, R16
   \   000001BE   8313               STD     Z+3, R17
   \   000001C0   01A5               MOVW    R21:R20, R11:R10
   \   000001C2   01BA               MOVW    R23:R22, R21:R20
   \   000001C4   EE0B               LDI     R16, 235
   \   000001C6   EF1F               LDI     R17, 255
   \   000001C8   01AC               MOVW    R21:R20, R25:R24
   \   000001CA   ........           CALL    ?S_EC_MUL_L02
   \   000001CE   0195               MOVW    R19:R18, R11:R10
   \   000001D0   0F20               ADD     R18, R16
   \   000001D2   1F31               ADC     R19, R17
   \   000001D4   01AB               MOVW    R21:R20, R23:R22
   \   000001D6   0184               MOVW    R17:R16, R9:R8
   \   000001D8   ........           CALL    ??copy_backward
   \   000001DC   E105               LDI     R16, 21
   \   000001DE   E010               LDI     R17, 0
   \   000001E0   01AC               MOVW    R21:R20, R25:R24
   \   000001E2   ........           CALL    ?S_EC_MUL_L02
   \   000001E6   01A4               MOVW    R21:R20, R9:R8
   \   000001E8   0F40               ADD     R20, R16
   \   000001EA   1F51               ADC     R21, R17
   \   000001EC   0194               MOVW    R19:R18, R9:R8
   \   000001EE   018D               MOVW    R17:R16, R27:R26
   \   000001F0   ........           CALL    ??_Destroy_1
   \                     ??_Make_room_2:
   \   000001F4   0184               MOVW    R17:R16, R9:R8
   \   000001F6   9624               ADIW    R29:R28, 4
   \   000001F8   E1E0               LDI     R30, 16
   \   000001FA   ........           JMP     ?EPILOGUE_B16_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short * _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
   \                     ??_Make_room_1:
   \   00000000   ........           CALL    ?PROLOGUE16_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004                      REQUIRE ?Register_R10_is_cg_reg
   \   00000004                      REQUIRE ?Register_R11_is_cg_reg
   \   00000004                      REQUIRE ?Register_R12_is_cg_reg
   \   00000004                      REQUIRE ?Register_R13_is_cg_reg
   \   00000004                      REQUIRE ?Register_R14_is_cg_reg
   \   00000004                      REQUIRE ?Register_R15_is_cg_reg
   \   00000004   9724               SBIW    R29:R28, 4
   \   00000006   0128               MOVW    R5:R4, R17:R16
   \   00000008   0159               MOVW    R11:R10, R19:R18
   \   0000000A   01CA               MOVW    R25:R24, R21:R20
   \   0000000C   0182               MOVW    R17:R16, R5:R4
   \   0000000E   ........           CALL    ??capacity_1
   \   00000012   01D8               MOVW    R27:R26, R17:R16
   \   00000014   019E               MOVW    R19:R18, R29:R28
   \   00000016   5F2F               SUBI    R18, 255
   \   00000018   4F3F               SBCI    R19, 255
   \   0000001A   0182               MOVW    R17:R16, R5:R4
   \   0000001C   ........           CALL    ??_Alval
   \   00000020   019E               MOVW    R19:R18, R29:R28
   \   00000022   5F2F               SUBI    R18, 255
   \   00000024   4F3F               SBCI    R19, 255
   \   00000026   018E               MOVW    R17:R16, R29:R28
   \   00000028   ........           CALL    ??allocator_2
   \   0000002C   0182               MOVW    R17:R16, R5:R4
   \   0000002E   ........           CALL    ??size_2
   \   00000032   0138               MOVW    R7:R6, R17:R16
   \   00000034   2F08               MOV     R16, R24
   \   00000036   2B09               OR      R16, R25
   \   00000038   F409               BRNE    $+2+2
   \   0000003A   C08B               RJMP    ??_Make_room_9
   \   0000003C   018E               MOVW    R17:R16, R29:R28
   \   0000003E   ........           CALL    ??max_size_2
   \   00000042   1906               SUB     R16, R6
   \   00000044   0917               SBC     R17, R7
   \   00000046   1708               CP      R16, R24
   \   00000048   0719               CPC     R17, R25
   \   0000004A   F420               BRCC    ??_Make_room_10
   \   0000004C   0182               MOVW    R17:R16, R5:R4
   \   0000004E   ........           CALL    ??_Xlen
   \   00000052   C07F               RJMP    ??_Make_room_9
   \                     ??_Make_room_10:
   \   00000054   0183               MOVW    R17:R16, R7:R6
   \   00000056   0F08               ADD     R16, R24
   \   00000058   1F19               ADC     R17, R25
   \   0000005A   17A0               CP      R26, R16
   \   0000005C   07B1               CPC     R27, R17
   \   0000005E   F008               BRCS    $+2+2
   \   00000060   C05C               RJMP    ??_Make_room_11
   \   00000062   018E               MOVW    R17:R16, R29:R28
   \   00000064   ........           CALL    ??max_size_2
   \   00000068   019D               MOVW    R19:R18, R27:R26
   \   0000006A   9536               LSR     R19
   \   0000006C   9527               ROR     R18
   \   0000006E   1B02               SUB     R16, R18
   \   00000070   0B13               SBC     R17, R19
   \   00000072   170A               CP      R16, R26
   \   00000074   071B               CPC     R17, R27
   \   00000076   F418               BRCC    ??_Make_room_12
   \   00000078   E0A0               LDI     R26, 0
   \   0000007A   E0B0               LDI     R27, 0
   \   0000007C   C005               RJMP    ??_Make_room_13
   \                     ??_Make_room_12:
   \   0000007E   018D               MOVW    R17:R16, R27:R26
   \   00000080   9516               LSR     R17
   \   00000082   9507               ROR     R16
   \   00000084   0FA0               ADD     R26, R16
   \   00000086   1FB1               ADC     R27, R17
   \                     ??_Make_room_13:
   \   00000088   0183               MOVW    R17:R16, R7:R6
   \   0000008A   0F08               ADD     R16, R24
   \   0000008C   1F19               ADC     R17, R25
   \   0000008E   17A0               CP      R26, R16
   \   00000090   07B1               CPC     R27, R17
   \   00000092   F420               BRCC    ??_Make_room_14
   \   00000094   0183               MOVW    R17:R16, R7:R6
   \   00000096   0F08               ADD     R16, R24
   \   00000098   1F19               ADC     R17, R25
   \   0000009A   01D8               MOVW    R27:R26, R17:R16
   \                     ??_Make_room_14:
   \   0000009C   019D               MOVW    R19:R18, R27:R26
   \   0000009E   018E               MOVW    R17:R16, R29:R28
   \   000000A0   ........           CALL    ??allocate_3
   \   000000A4   0148               MOVW    R9:R8, R17:R16
   \   000000A6   828A               STD     Y+2, R8
   \   000000A8   829B               STD     Y+3, R9
   \   000000AA   0182               MOVW    R17:R16, R5:R4
   \   000000AC   ........           CALL    ??_Mytyfirst_1
   \   000000B0   01B4               MOVW    R23:R22, R9:R8
   \   000000B2   01A5               MOVW    R21:R20, R11:R10
   \   000000B4   0198               MOVW    R19:R18, R17:R16
   \   000000B6   0182               MOVW    R17:R16, R5:R4
   \   000000B8   ........           CALL    ??_Ucopy_1
   \   000000BC   0168               MOVW    R13:R12, R17:R16
   \   000000BE   018C               MOVW    R17:R16, R25:R24
   \   000000C0   0F00               LSL     R16
   \   000000C2   1F11               ROL     R17
   \   000000C4   0196               MOVW    R19:R18, R13:R12
   \   000000C6   0F20               ADD     R18, R16
   \   000000C8   1F31               ADC     R19, R17
   \   000000CA   0179               MOVW    R15:R14, R19:R18
   \   000000CC   0182               MOVW    R17:R16, R5:R4
   \   000000CE   ........           CALL    ??_Mytylast_1
   \   000000D2   01A8               MOVW    R21:R20, R17:R16
   \   000000D4   01B7               MOVW    R23:R22, R15:R14
   \   000000D6   0195               MOVW    R19:R18, R11:R10
   \   000000D8   0182               MOVW    R17:R16, R5:R4
   \   000000DA   ........           CALL    ??_Ucopy_1
   \   000000DE   830A               STD     Y+2, R16
   \   000000E0   831B               STD     Y+3, R17
   \   000000E2   0D86               ADD     R24, R6
   \   000000E4   1D97               ADC     R25, R7
   \   000000E6   0182               MOVW    R17:R16, R5:R4
   \   000000E8   ........           CALL    ??_Tidy0_1
   \   000000EC   018D               MOVW    R17:R16, R27:R26
   \   000000EE   0F00               LSL     R16
   \   000000F0   1F11               ROL     R17
   \   000000F2   0194               MOVW    R19:R18, R9:R8
   \   000000F4   0F20               ADD     R18, R16
   \   000000F6   1F31               ADC     R19, R17
   \   000000F8   01F2               MOVW    R31:R30, R5:R4
   \   000000FA   8324               STD     Z+4, R18
   \   000000FC   8335               STD     Z+5, R19
   \   000000FE   018C               MOVW    R17:R16, R25:R24
   \   00000100   0F00               LSL     R16
   \   00000102   1F11               ROL     R17
   \   00000104   0194               MOVW    R19:R18, R9:R8
   \   00000106   0F20               ADD     R18, R16
   \   00000108   1F31               ADC     R19, R17
   \   0000010A   01F2               MOVW    R31:R30, R5:R4
   \   0000010C   8322               STD     Z+2, R18
   \   0000010E   8333               STD     Z+3, R19
   \   00000110   01F2               MOVW    R31:R30, R5:R4
   \   00000112   8280               ST      Z, R8
   \   00000114   8291               STD     Z+1, R9
   \   00000116   0156               MOVW    R11:R10, R13:R12
   \   00000118   C01C               RJMP    ??_Make_room_9
   \                     ??_Make_room_11:
   \   0000011A   0182               MOVW    R17:R16, R5:R4
   \   0000011C   ........           CALL    ??_Mytylast_1
   \   00000120   0148               MOVW    R9:R8, R17:R16
   \   00000122   0182               MOVW    R17:R16, R5:R4
   \   00000124   ........           CALL    ??_Mytylast_1
   \   00000128   0198               MOVW    R19:R18, R17:R16
   \   0000012A   018C               MOVW    R17:R16, R25:R24
   \   0000012C   0F00               LSL     R16
   \   0000012E   1F11               ROL     R17
   \   00000130   0E80               ADD     R8, R16
   \   00000132   1E91               ADC     R9, R17
   \   00000134   01A4               MOVW    R21:R20, R9:R8
   \   00000136   0185               MOVW    R17:R16, R11:R10
   \   00000138   ........           CALL    ??copy_backward_1
   \   0000013C   0182               MOVW    R17:R16, R5:R4
   \   0000013E   ........           CALL    ??_Mytylast_1
   \   00000142   019C               MOVW    R19:R18, R25:R24
   \   00000144   0F22               LSL     R18
   \   00000146   1F33               ROL     R19
   \   00000148   0F02               ADD     R16, R18
   \   0000014A   1F13               ADC     R17, R19
   \   0000014C   01F2               MOVW    R31:R30, R5:R4
   \   0000014E   8302               STD     Z+2, R16
   \   00000150   8313               STD     Z+3, R17
   \                     ??_Make_room_9:
   \   00000152   0185               MOVW    R17:R16, R11:R10
   \   00000154   9624               ADIW    R29:R28, 4
   \   00000156   E1E0               LDI     R30, 16
   \   00000158   ........           JMP     ?EPILOGUE_B16_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_impl<string, allocator<string>>::size() const
   \                     ??size_1:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Size
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_impl<unsigned short, allocator<unsigned short>>::size() const
   \                     ??size_2:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Size_2
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_impl<string, allocator<string>>::capacity() const
   \                     ??capacity:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Capacity
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int _Vector_impl<unsigned short, allocator<unsigned short>>::capacity() const
   \                     ??capacity_1:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Capacity_1
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Insert0(string *, string const &)
   \                     ??_Insert0:
   \   00000000   ........           CALL    ?PROLOGUE10_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   012A               MOVW    R5:R4, R21:R20
   \   0000000A   01FD               MOVW    R31:R30, R27:R26
   \   0000000C   8100               LD      R16, Z
   \   0000000E   8111               LDD     R17, Z+1
   \   00000010   2B01               OR      R16, R17
   \   00000012   F419               BRNE    ??_Insert0_2
   \   00000014   2488               CLR     R8
   \   00000016   2499               CLR     R9
   \   00000018   C009               RJMP    ??_Insert0_3
   \                     ??_Insert0_2:
   \   0000001A   018C               MOVW    R17:R16, R25:R24
   \   0000001C   ........           CALL    ??_ToBptr
   \   00000020   0148               MOVW    R9:R8, R17:R16
   \   00000022   018D               MOVW    R17:R16, R27:R26
   \   00000024   ........           CALL    ??_Bfirst
   \   00000028   1A80               SUB     R8, R16
   \   0000002A   0A91               SBC     R9, R17
   \                     ??_Insert0_3:
   \   0000002C   0134               MOVW    R7:R6, R9:R8
   \   0000002E   01B2               MOVW    R23:R22, R5:R4
   \   00000030   E041               LDI     R20, 1
   \   00000032   E050               LDI     R21, 0
   \   00000034   019C               MOVW    R19:R18, R25:R24
   \   00000036   018D               MOVW    R17:R16, R27:R26
   \   00000038   ........           CALL    ??_Insert_n
   \   0000003C   018D               MOVW    R17:R16, R27:R26
   \   0000003E   ........           CALL    ??_Bfirst
   \   00000042   0D06               ADD     R16, R6
   \   00000044   1D17               ADC     R17, R7
   \   00000046   E0EA               LDI     R30, 10
   \   00000048   ........           JMP     ?EPILOGUE_B10_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short * _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert0(unsigned short *, unsigned short)
   \                     ??_Insert0_1:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   9722               SBIW    R29:R28, 2
   \   00000006   8348               ST      Y, R20
   \   00000008   8359               STD     Y+1, R21
   \   0000000A   0128               MOVW    R5:R4, R17:R16
   \   0000000C   01C9               MOVW    R25:R24, R19:R18
   \   0000000E   01F2               MOVW    R31:R30, R5:R4
   \   00000010   8100               LD      R16, Z
   \   00000012   8111               LDD     R17, Z+1
   \   00000014   2B01               OR      R16, R17
   \   00000016   F419               BRNE    ??_Insert0_4
   \   00000018   2466               CLR     R6
   \   0000001A   2477               CLR     R7
   \   0000001C   C009               RJMP    ??_Insert0_5
   \                     ??_Insert0_4:
   \   0000001E   018C               MOVW    R17:R16, R25:R24
   \   00000020   ........           CALL    ??_ToBptr
   \   00000024   0138               MOVW    R7:R6, R17:R16
   \   00000026   0182               MOVW    R17:R16, R5:R4
   \   00000028   ........           CALL    ??_Bfirst
   \   0000002C   1A60               SUB     R6, R16
   \   0000002E   0A71               SBC     R7, R17
   \                     ??_Insert0_5:
   \   00000030   01D3               MOVW    R27:R26, R7:R6
   \   00000032   01BE               MOVW    R23:R22, R29:R28
   \   00000034   E041               LDI     R20, 1
   \   00000036   E050               LDI     R21, 0
   \   00000038   019C               MOVW    R19:R18, R25:R24
   \   0000003A   0182               MOVW    R17:R16, R5:R4
   \   0000003C   ........           CALL    ??_Insert_n_1
   \   00000040   0182               MOVW    R17:R16, R5:R4
   \   00000042   ........           CALL    ??_Bfirst
   \   00000046   0F0A               ADD     R16, R26
   \   00000048   1F1B               ADC     R17, R27
   \   0000004A   9622               ADIW    R29:R28, 2
   \   0000004C   E0E8               LDI     R30, 8
   \   0000004E   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Insert_n0(string *, unsigned int, string const &)
   \                     ??_Insert_n0:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   0138               MOVW    R7:R6, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   012B               MOVW    R5:R4, R23:R22
   \   0000000C   01AC               MOVW    R21:R20, R25:R24
   \   0000000E   019D               MOVW    R19:R18, R27:R26
   \   00000010   0183               MOVW    R17:R16, R7:R6
   \   00000012   ........           CALL    ??_Make_room
   \   00000016   01D8               MOVW    R27:R26, R17:R16
   \   00000018   01B2               MOVW    R23:R22, R5:R4
   \   0000001A   01AC               MOVW    R21:R20, R25:R24
   \   0000001C   019D               MOVW    R19:R18, R27:R26
   \   0000001E   0183               MOVW    R17:R16, R7:R6
   \   00000020   ........           CALL    ??_Ufill
   \   00000024   E0E8               LDI     R30, 8
   \   00000026   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n0(unsigned short *, unsigned int, unsigned short)
   \                     ??_Insert_n0_1:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   0138               MOVW    R7:R6, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   012B               MOVW    R5:R4, R23:R22
   \   0000000C   01AC               MOVW    R21:R20, R25:R24
   \   0000000E   019D               MOVW    R19:R18, R27:R26
   \   00000010   0183               MOVW    R17:R16, R7:R6
   \   00000012   ........           CALL    ??_Make_room_1
   \   00000016   01D8               MOVW    R27:R26, R17:R16
   \   00000018   01B2               MOVW    R23:R22, R5:R4
   \   0000001A   01AC               MOVW    R21:R20, R25:R24
   \   0000001C   019D               MOVW    R19:R18, R27:R26
   \   0000001E   0183               MOVW    R17:R16, R7:R6
   \   00000020   ........           CALL    ??_Ufill_1
   \   00000024   E0E8               LDI     R30, 8
   \   00000026   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Push_back0(string const &)
   \                     ??_Push_back0:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   01FD               MOVW    R31:R30, R27:R26
   \   0000000A   8102               LDD     R16, Z+2
   \   0000000C   8113               LDD     R17, Z+3
   \   0000000E   01FD               MOVW    R31:R30, R27:R26
   \   00000010   8124               LDD     R18, Z+4
   \   00000012   8135               LDD     R19, Z+5
   \   00000014   1702               CP      R16, R18
   \   00000016   0713               CPC     R17, R19
   \   00000018   F470               BRCC    ??_Push_back0_2
   \   0000001A   018D               MOVW    R17:R16, R27:R26
   \   0000001C   ........           CALL    ??_Mytylast
   \   00000020   01BC               MOVW    R23:R22, R25:R24
   \   00000022   E041               LDI     R20, 1
   \   00000024   E050               LDI     R21, 0
   \   00000026   0198               MOVW    R19:R18, R17:R16
   \   00000028   018D               MOVW    R17:R16, R27:R26
   \   0000002A   ........           CALL    ??_Ufill
   \   0000002E   01FD               MOVW    R31:R30, R27:R26
   \   00000030   8302               STD     Z+2, R16
   \   00000032   8313               STD     Z+3, R17
   \   00000034   C008               RJMP    ??_Push_back0_3
   \                     ??_Push_back0_2:
   \   00000036   018D               MOVW    R17:R16, R27:R26
   \   00000038   ........           CALL    ??_Mytylast
   \   0000003C   0198               MOVW    R19:R18, R17:R16
   \   0000003E   01AC               MOVW    R21:R20, R25:R24
   \   00000040   018D               MOVW    R17:R16, R27:R26
   \   00000042   ........           CALL    ??_Insert
   \                     ??_Push_back0_3:
   \   00000046   E0E4               LDI     R30, 4
   \   00000048   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back0(unsigned short)
   \                     ??_Push_back0_1:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
   \   00000004   9722               SBIW    R29:R28, 2
   \   00000006   8328               ST      Y, R18
   \   00000008   8339               STD     Y+1, R19
   \   0000000A   01D8               MOVW    R27:R26, R17:R16
   \   0000000C   9612               ADIW    R27:R26, 2
   \   0000000E   910D               LD      R16, X+
   \   00000010   911C               LD      R17, X
   \   00000012   9713               SBIW    R27:R26, 3
   \   00000014   9614               ADIW    R27:R26, 4
   \   00000016   912D               LD      R18, X+
   \   00000018   913C               LD      R19, X
   \   0000001A   9715               SBIW    R27:R26, 5
   \   0000001C   1702               CP      R16, R18
   \   0000001E   0713               CPC     R17, R19
   \   00000020   F480               BRCC    ??_Push_back0_4
   \   00000022   018D               MOVW    R17:R16, R27:R26
   \   00000024   ........           CALL    ??_Mytylast_1
   \   00000028   8168               LD      R22, Y
   \   0000002A   8179               LDD     R23, Y+1
   \   0000002C   E041               LDI     R20, 1
   \   0000002E   E050               LDI     R21, 0
   \   00000030   0198               MOVW    R19:R18, R17:R16
   \   00000032   018D               MOVW    R17:R16, R27:R26
   \   00000034   ........           CALL    ??_Ufill_1
   \   00000038   9612               ADIW    R27:R26, 2
   \   0000003A   930D               ST      X+, R16
   \   0000003C   931C               ST      X, R17
   \   0000003E   9713               SBIW    R27:R26, 3
   \   00000040   C008               RJMP    ??_Push_back0_5
   \                     ??_Push_back0_4:
   \   00000042   018D               MOVW    R17:R16, R27:R26
   \   00000044   ........           CALL    ??_Mytylast_1
   \   00000048   0198               MOVW    R19:R18, R17:R16
   \   0000004A   01AE               MOVW    R21:R20, R29:R28
   \   0000004C   018D               MOVW    R17:R16, R27:R26
   \   0000004E   ........           CALL    ??_Insert_1
   \                     ??_Push_back0_5:
   \   00000052   9622               ADIW    R29:R28, 2
   \   00000054   91A9               LD      R26, Y+
   \   00000056   91B9               LD      R27, Y+
   \   00000058   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void * _Vector_impl<string, allocator<string>>::_Ufill(string *, unsigned int, string const &)
   \                     ??_Ufill:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   9722               SBIW    R29:R28, 2
   \   00000006   0138               MOVW    R7:R6, R17:R16
   \   00000008   01C9               MOVW    R25:R24, R19:R18
   \   0000000A   012A               MOVW    R5:R4, R21:R20
   \   0000000C   01DB               MOVW    R27:R26, R23:R22
   \   0000000E   019E               MOVW    R19:R18, R29:R28
   \   00000010   5F2F               SUBI    R18, 255
   \   00000012   4F3F               SBCI    R19, 255
   \   00000014   0183               MOVW    R17:R16, R7:R6
   \   00000016   ........           CALL    ??_Alval
   \   0000001A   019E               MOVW    R19:R18, R29:R28
   \   0000001C   5F2F               SUBI    R18, 255
   \   0000001E   4F3F               SBCI    R19, 255
   \   00000020   018E               MOVW    R17:R16, R29:R28
   \   00000022   ........           CALL    ??allocator
   \   00000026   01BE               MOVW    R23:R22, R29:R28
   \   00000028   01AD               MOVW    R21:R20, R27:R26
   \   0000002A   0192               MOVW    R19:R18, R5:R4
   \   0000002C   018C               MOVW    R17:R16, R25:R24
   \   0000002E   ........           CALL    ??_Uninitialized_fill_n
   \   00000032   E145               LDI     R20, 21
   \   00000034   E050               LDI     R21, 0
   \   00000036   0182               MOVW    R17:R16, R5:R4
   \   00000038   ........           CALL    ?S_EC_MUL_L02
   \   0000003C   0F80               ADD     R24, R16
   \   0000003E   1F91               ADC     R25, R17
   \   00000040   018C               MOVW    R17:R16, R25:R24
   \   00000042   9622               ADIW    R29:R28, 2
   \   00000044   E0E8               LDI     R30, 8
   \   00000046   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void * _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short)
   \                     ??_Ufill_1:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   9724               SBIW    R29:R28, 4
   \   00000006   836A               STD     Y+2, R22
   \   00000008   837B               STD     Y+3, R23
   \   0000000A   01D8               MOVW    R27:R26, R17:R16
   \   0000000C   0129               MOVW    R5:R4, R19:R18
   \   0000000E   01CA               MOVW    R25:R24, R21:R20
   \   00000010   019E               MOVW    R19:R18, R29:R28
   \   00000012   5F2F               SUBI    R18, 255
   \   00000014   4F3F               SBCI    R19, 255
   \   00000016   018D               MOVW    R17:R16, R27:R26
   \   00000018   ........           CALL    ??_Alval
   \   0000001C   019E               MOVW    R19:R18, R29:R28
   \   0000001E   5F2F               SUBI    R18, 255
   \   00000020   4F3F               SBCI    R19, 255
   \   00000022   018E               MOVW    R17:R16, R29:R28
   \   00000024   ........           CALL    ??allocator_2
   \   00000028   01BE               MOVW    R23:R22, R29:R28
   \   0000002A   01AE               MOVW    R21:R20, R29:R28
   \   0000002C   5F4E               SUBI    R20, 254
   \   0000002E   4F5F               SBCI    R21, 255
   \   00000030   019C               MOVW    R19:R18, R25:R24
   \   00000032   0182               MOVW    R17:R16, R5:R4
   \   00000034   ........           CALL    ??_Uninitialized_fill_n_1
   \   00000038   0F88               LSL     R24
   \   0000003A   1F99               ROL     R25
   \   0000003C   0E48               ADD     R4, R24
   \   0000003E   1E59               ADC     R5, R25
   \   00000040   0182               MOVW    R17:R16, R5:R4
   \   00000042   9624               ADIW    R29:R28, 4
   \   00000044   E0E6               LDI     R30, 6
   \   00000046   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
   \                     ??_Ucopy:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   9722               SBIW    R29:R28, 2
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
   \   0000000A   012A               MOVW    R5:R4, R21:R20
   \   0000000C   013B               MOVW    R7:R6, R23:R22
   \   0000000E   019E               MOVW    R19:R18, R29:R28
   \   00000010   5F2F               SUBI    R18, 255
   \   00000012   4F3F               SBCI    R19, 255
   \   00000014   018C               MOVW    R17:R16, R25:R24
   \   00000016   ........           CALL    ??_Alval
   \   0000001A   019E               MOVW    R19:R18, R29:R28
   \   0000001C   5F2F               SUBI    R18, 255
   \   0000001E   4F3F               SBCI    R19, 255
   \   00000020   018E               MOVW    R17:R16, R29:R28
   \   00000022   ........           CALL    ??allocator
   \   00000026   01BE               MOVW    R23:R22, R29:R28
   \   00000028   01A3               MOVW    R21:R20, R7:R6
   \   0000002A   0192               MOVW    R19:R18, R5:R4
   \   0000002C   018D               MOVW    R17:R16, R27:R26
   \   0000002E   ........           CALL    ??_Uninitialized_copy
   \   00000032   9622               ADIW    R29:R28, 2
   \   00000034   E0E8               LDI     R30, 8
   \   00000036   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned short * _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *)
   \                     ??_Ucopy_1:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   9722               SBIW    R29:R28, 2
   \   00000006   01C8               MOVW    R25:R24, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
   \   0000000A   012A               MOVW    R5:R4, R21:R20
   \   0000000C   013B               MOVW    R7:R6, R23:R22
   \   0000000E   019E               MOVW    R19:R18, R29:R28
   \   00000010   5F2F               SUBI    R18, 255
   \   00000012   4F3F               SBCI    R19, 255
   \   00000014   018C               MOVW    R17:R16, R25:R24
   \   00000016   ........           CALL    ??_Alval
   \   0000001A   019E               MOVW    R19:R18, R29:R28
   \   0000001C   5F2F               SUBI    R18, 255
   \   0000001E   4F3F               SBCI    R19, 255
   \   00000020   018E               MOVW    R17:R16, R29:R28
   \   00000022   ........           CALL    ??allocator_2
   \   00000026   01BE               MOVW    R23:R22, R29:R28
   \   00000028   01A3               MOVW    R21:R20, R7:R6
   \   0000002A   0192               MOVW    R19:R18, R5:R4
   \   0000002C   018D               MOVW    R17:R16, R27:R26
   \   0000002E   ........           CALL    ??_Uninitialized_copy_1
   \   00000032   9622               ADIW    R29:R28, 2
   \   00000034   E0E8               LDI     R30, 8
   \   00000036   ........           JMP     ?EPILOGUE_B8_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 vector<string>::vector()
   \                     ??vector:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Vector_impl
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   ........           CALL    ??_Zero
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   9189               LD      R24, Y+
   \   00000016   9199               LD      R25, Y+
   \   00000018   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 vector<ITerminalCommand *>::vector()
   \                     ??vector_1:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Vector_impl_1
   \   0000000C   018C               MOVW    R17:R16, R25:R24
   \   0000000E   ........           CALL    ??_Zero
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   9189               LD      R24, Y+
   \   00000016   9199               LD      R25, Y+
   \   00000018   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 vector<string>::~vector()
   \                     `?~vector`:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Tidy
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 vector<string> &vector<string>::operator=(vector<string> const &)
   \                     `??operator=_1`:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   019D               MOVW    R19:R18, R27:R26
   \   0000000A   018C               MOVW    R17:R16, R25:R24
   \   0000000C   ........           CALL    ??_Assign
   \   00000010   018C               MOVW    R17:R16, R25:R24
   \   00000012   E0E4               LDI     R30, 4
   \   00000014   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * vector<string>::begin()
   \                     ??begin_1:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8100               LD      R16, Z
   \   00000004   8111               LDD     R17, Z+1
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 ITerminalCommand ** vector<ITerminalCommand *>::begin()
   \                     ??begin_2:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8100               LD      R16, Z
   \   00000004   8111               LDD     R17, Z+1
   \   00000006   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int vector<string>::size() const
   \                     ??size_3:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Size
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 unsigned int vector<ITerminalCommand *>::size() const
   \                     ??size_4:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??_Size_2
   \   0000000C   9189               LD      R24, Y+
   \   0000000E   9199               LD      R25, Y+
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 bool vector<string>::empty() const
   \                     ??empty_1:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   018C               MOVW    R17:R16, R25:R24
   \   00000008   ........           CALL    ??size_3
   \   0000000C   2B01               OR      R16, R17
   \   0000000E   F411               BRNE    ??empty_3
   \   00000010   E001               LDI     R16, 1
   \   00000012   C001               RJMP    ??empty_4
   \                     ??empty_3:
   \   00000014   E000               LDI     R16, 0
   \                     ??empty_4:
   \   00000016   9189               LD      R24, Y+
   \   00000018   9199               LD      R25, Y+
   \   0000001A   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string & vector<string>::operator[](unsigned int)
   \                     `??operator[]`:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   018D               MOVW    R17:R16, R27:R26
   \   0000000A   ........           CALL    ??begin_1
   \   0000000E   0198               MOVW    R19:R18, R17:R16
   \   00000010   E105               LDI     R16, 21
   \   00000012   E010               LDI     R17, 0
   \   00000014   01AC               MOVW    R21:R20, R25:R24
   \   00000016   ........           CALL    ?S_EC_MUL_L02
   \   0000001A   0F20               ADD     R18, R16
   \   0000001C   1F31               ADC     R19, R17
   \   0000001E   0189               MOVW    R17:R16, R19:R18
   \   00000020   E0E4               LDI     R30, 4
   \   00000022   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 ITerminalCommand *& vector<ITerminalCommand *>::operator[](unsigned int)
   \                     `??operator[]_1`:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   018D               MOVW    R17:R16, R27:R26
   \   0000000A   ........           CALL    ??begin_2
   \   0000000E   0F88               LSL     R24
   \   00000010   1F99               ROL     R25
   \   00000012   0F08               ADD     R16, R24
   \   00000014   1F19               ADC     R17, R25
   \   00000016   E0E4               LDI     R30, 4
   \   00000018   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void vector<string>::push_back(string const &)
   \                     ??push_back_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   019C               MOVW    R19:R18, R25:R24
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   ........           CALL    ??_Push_back
   \   00000010   E0E4               LDI     R30, 4
   \   00000012   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void vector<ITerminalCommand *>::push_back(ITerminalCommand *)
   \                     ??push_back_2:
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   9722               SBIW    R29:R28, 2
   \   00000006   8328               ST      Y, R18
   \   00000008   8339               STD     Y+1, R19
   \   0000000A   01C8               MOVW    R25:R24, R17:R16
   \   0000000C   019E               MOVW    R19:R18, R29:R28
   \   0000000E   018C               MOVW    R17:R16, R25:R24
   \   00000010   ........           CALL    ??_Push_back_1
   \   00000014   9622               ADIW    R29:R28, 2
   \   00000016   9189               LD      R24, Y+
   \   00000018   9199               LD      R25, Y+
   \   0000001A   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * vector<string>::erase(string *)
   \                     ??erase_1:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
   \   00000008   019D               MOVW    R19:R18, R27:R26
   \   0000000A   018C               MOVW    R17:R16, R25:R24
   \   0000000C   ........           CALL    ??_P
   \   00000010   0198               MOVW    R19:R18, R17:R16
   \   00000012   018C               MOVW    R17:R16, R25:R24
   \   00000014   ........           CALL    ??_Erase
   \   00000018   0198               MOVW    R19:R18, R17:R16
   \   0000001A   018C               MOVW    R17:R16, R25:R24
   \   0000001C   ........           CALL    ??_I
   \   00000020   E0E4               LDI     R30, 4
   \   00000022   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * vector<string>::_P(string *)
   \                     ??_P:
   \   00000000   01A8               MOVW    R21:R20, R17:R16
   \   00000002   0189               MOVW    R17:R16, R19:R18
   \   00000004   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * vector<string>::_I(string *)
   \                     ??_I:
   \   00000000   01A8               MOVW    R21:R20, R17:R16
   \   00000002   0189               MOVW    R17:R16, R19:R18
   \   00000004   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void operator+(char const *, string const &)
   \                     `??operator+`:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   9765               SBIW    R29:R28, 21
   \   00000006   0128               MOVW    R5:R4, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
   \   0000000A   01CA               MOVW    R25:R24, R21:R20
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   018E               MOVW    R17:R16, R29:R28
   \   00000010   ........           CALL    ??string_2
   \   00000014   019C               MOVW    R19:R18, R25:R24
   \   00000016   ........           CALL    `??operator+=`
   \   0000001A   0198               MOVW    R19:R18, R17:R16
   \   0000001C   0182               MOVW    R17:R16, R5:R4
   \   0000001E   ........           CALL    ??string_1
   \   00000022   018E               MOVW    R17:R16, R29:R28
   \   00000024   ........           CALL    `?~string`
   \   00000028   9665               ADIW    R29:R28, 21
   \   0000002A   E0E6               LDI     R30, 6
   \   0000002C   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   9765               SBIW    R29:R28, 21
   \   00000006   0128               MOVW    R5:R4, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
   \   0000000A   01CA               MOVW    R25:R24, R21:R20
   \   0000000C   019D               MOVW    R19:R18, R27:R26
   \   0000000E   018E               MOVW    R17:R16, R29:R28
   \   00000010   ........           CALL    ??string_1
   \   00000014   019C               MOVW    R19:R18, R25:R24
   \   00000016   ........           CALL    `??operator+=_1`
   \   0000001A   0198               MOVW    R19:R18, R17:R16
   \   0000001C   0182               MOVW    R17:R16, R5:R4
   \   0000001E   ........           CALL    ??string_1
   \   00000022   018E               MOVW    R17:R16, R29:R28
   \   00000024   ........           CALL    `?~string`
   \   00000028   9665               ADIW    R29:R28, 21
   \   0000002A   E0E6               LDI     R30, 6
   \   0000002C   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 bool operator==(string const &, string const &)
   \                     `??operator==`:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   019C               MOVW    R19:R18, R25:R24
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   ........           CALL    ??compare
   \   00000010   2B01               OR      R16, R17
   \   00000012   F411               BRNE    `??operator==_2`
   \   00000014   E001               LDI     R16, 1
   \   00000016   C001               RJMP    `??operator==_3`
   \                     `??operator==_2`:
   \   00000018   E000               LDI     R16, 0
   \                     `??operator==_3`:
   \   0000001A   E0E4               LDI     R30, 4
   \   0000001C   ........           JMP     ?EPILOGUE_B4_L09

    virtual const std::string & GetDescription(void){};
                                                     ^
"C:\work\TIEL_FrameWork\Service\terminal_service.h",66  Warning[Pe940]: 
          missing return statement at end of non-void function
          "ITerminalCommand::GetDescription"

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 char ITerminalCommand::operator==(string const &)
   \                     `??operator==_1`:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   019C               MOVW    R19:R18, R25:R24
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   5F0E               SUBI    R16, 254
   \   0000000E   4F1F               SBCI    R17, 255
   \   00000010   ........           CALL    `??operator==`
   \   00000014   E0E4               LDI     R30, 4
   \   00000016   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void ITerminalCommand::SetTerminalService(TerminalService &)
   \                     ??SetTerminalService:
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8320               ST      Z, R18
   \   00000004   8331               STD     Z+1, R19
   \   00000006   9508               RET
      3          #include "split.h"
      4          #include "build_count.h"
      5          #include <assert.h>
      6          
      7          

   \                                 In  segment NEAR_F, align 1, keep-with-next
      8          CONST  char  errormsg[]="\nCommand not found.please enter \"help\" command.\n";
   \                     errormsg:
   \   00000000   430A6D6F616D       DC8 "\012Command not found.please enter \"help\" command.\012"
   \              646E6E20746F
   \              6620756F646E
   \              702E656C7361
   \              20656E656574
   \              207268226C65
   \              227063206D6F
   \              616D646E0A2E
   \              00          
      9          

   \                                 In  segment CODE, align 2, keep-with-next
     10          TerminalService::TerminalService(unsigned char _defaultParamMax)
   \                     ??TerminalService:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   2F82               MOV     R24, R18
     11          :defaultParams(_defaultParamMax)
   \   00000008   938C               ST      X, R24
     12          {
   \   0000000A   018D               MOVW    R17:R16, R27:R26
   \   0000000C   5F0F               SUBI    R16, 255
   \   0000000E   4F1F               SBCI    R17, 255
   \   00000010   ........           CALL    ??vector
   \   00000014   018D               MOVW    R17:R16, R27:R26
   \   00000016   5F09               SUBI    R16, 249
   \   00000018   4F1F               SBCI    R17, 255
   \   0000001A   ........           CALL    ??string
   \   0000001E   018D               MOVW    R17:R16, R27:R26
   \   00000020   5E04               SUBI    R16, 228
   \   00000022   4F1F               SBCI    R17, 255
   \   00000024   ........           CALL    ??vector_1
     13          
     14          }
   \   00000028   018D               MOVW    R17:R16, R27:R26
   \   0000002A   E0E4               LDI     R30, 4
   \   0000002C   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
     15          void TerminalService::Init(void)
   \                     ??Init:
     16          {
     17          //  const std::string lic(clic);
     18          //  Output("\n");
     19          //  Output((const char *)clic);
     20            
     21          //  Output("\n\n");
     22          //  Output(">> "); 
     23          }
   \   00000000   9508               RET
     24          

   \                                 In  segment CODE, align 2, keep-with-next
     25          void TerminalService::Input(char _ch)
   \                     ??Input:
     26          {
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   97EF               SBIW    R29:R28, 63
   \   00000006   97EF               SBIW    R29:R28, 63
   \   00000008   9765               SBIW    R29:R28, 21
   \   0000000A   01D8               MOVW    R27:R26, R17:R16
   \   0000000C   2F82               MOV     R24, R18
     27            InputHook(_ch);
   \   0000000E   01FD               MOVW    R31:R30, R27:R26
   \   00000010   A142               LDD     R20, Z+34
   \   00000012   A153               LDD     R21, Z+35
   \   00000014   5F4A               SUBI    R20, 250
   \   00000016   4F5F               SBCI    R21, 255
   \   00000018   2F28               MOV     R18, R24
   \   0000001A   018D               MOVW    R17:R16, R27:R26
   \   0000001C   01FA               MOVW    R31:R30, R21:R20
   \   0000001E   9145               LPM     R20, Z+
   \   00000020   9154               LPM     R21, Z
   \   00000022   9731               SBIW    R31:R30, 1
   \   00000024   01FA               MOVW    R31:R30, R21:R20
   \   00000026   9509               ICALL
     28            /*
     29               char str[15];
     30                sprintf(str,"%x",_ch);
     31                Output(str);
     32                return;
     33            */
     34            
     35            static char ctrl =0;
     36            static unsigned char listpointer=0;
     37              if(0x1b == _ch)// control char
   \   00000028   318B               CPI     R24, 27
   \   0000002A   F421               BRNE    ??Input_2
     38              {
     39                ctrl = 1;
   \   0000002C   E001               LDI     R16, 1
   \   0000002E   9300....           STS     ??ctrl, R16
     40                return;
   \   00000032   C158               RJMP    ??Input_3
     41              }
     42              
     43              if(0x5b == _ch)
   \                     ??Input_2:
   \   00000034   358B               CPI     R24, 91
   \   00000036   F431               BRNE    ??Input_4
     44              {
     45                ctrl++;
   \   00000038   9100....           LDS     R16, ??ctrl
   \   0000003C   9503               INC     R16
   \   0000003E   9300....           STS     ??ctrl, R16
     46                return;
   \   00000042   C150               RJMP    ??Input_3
     47              }    
     48               if( 2 == ctrl)
   \                     ??Input_4:
   \   00000044   9100....           LDS     R16, ??ctrl
   \   00000048   3002               CPI     R16, 2
   \   0000004A   F009               BREQ    $+2+2
   \   0000004C   C07E               RJMP    ??Input_5
     49              {
     50                if(0x41 == _ch )//key up
   \   0000004E   3481               CPI     R24, 65
   \   00000050   F009               BREQ    $+2+2
   \   00000052   C077               RJMP    ??Input_6
     51                {
     52                  if(!cmdlist.empty()){
   \   00000054   018D               MOVW    R17:R16, R27:R26
   \   00000056   5F0F               SUBI    R16, 255
   \   00000058   4F1F               SBCI    R17, 255
   \   0000005A   ........           CALL    ??empty_1
   \   0000005E   2300               TST     R16
   \   00000060   F009               BREQ    $+2+2
   \   00000062   C06F               RJMP    ??Input_6
     53                     listpointer++;
   \   00000064   9100....           LDS     R16, ??listpointer
   \   00000068   9503               INC     R16
   \   0000006A   9300....           STS     ??listpointer, R16
     54                     if(cmdlist.size() < listpointer)
   \   0000006E   018D               MOVW    R17:R16, R27:R26
   \   00000070   5F0F               SUBI    R16, 255
   \   00000072   4F1F               SBCI    R17, 255
   \   00000074   ........           CALL    ??size_3
   \   00000078   9120....           LDS     R18, ??listpointer
   \   0000007C   E030               LDI     R19, 0
   \   0000007E   1702               CP      R16, R18
   \   00000080   0713               CPC     R17, R19
   \   00000082   F418               BRCC    ??Input_7
     55                     {
     56                       listpointer = 1;
   \   00000084   E001               LDI     R16, 1
   \   00000086   9300....           STS     ??listpointer, R16
     57                     }
     58                     Output("\r            ");
   \                     ??Input_7:
   \   0000008A   01FD               MOVW    R31:R30, R27:R26
   \   0000008C   A042               LDD     R4, Z+34
   \   0000008E   A053               LDD     R5, Z+35
   \   00000090   ....               LDI     R18, LOW(`?<Constant "\\r            ">`)
   \   00000092   ....               LDI     R19, (`?<Constant "\\r            ">`) >> 8
   \   00000094   018E               MOVW    R17:R16, R29:R28
   \   00000096   5802               SUBI    R16, 130
   \   00000098   4F1F               SBCI    R17, 255
   \   0000009A   ........           CALL    ??string_2
   \   0000009E   0198               MOVW    R19:R18, R17:R16
   \   000000A0   018D               MOVW    R17:R16, R27:R26
   \   000000A2   01F2               MOVW    R31:R30, R5:R4
   \   000000A4   9145               LPM     R20, Z+
   \   000000A6   9154               LPM     R21, Z
   \   000000A8   9731               SBIW    R31:R30, 1
   \   000000AA   01FA               MOVW    R31:R30, R21:R20
   \   000000AC   9509               ICALL
   \   000000AE   018E               MOVW    R17:R16, R29:R28
   \   000000B0   5802               SUBI    R16, 130
   \   000000B2   4F1F               SBCI    R17, 255
   \   000000B4   ........           CALL    `?~string`
     59                     Output("\r>> ");
   \   000000B8   01FD               MOVW    R31:R30, R27:R26
   \   000000BA   A042               LDD     R4, Z+34
   \   000000BC   A053               LDD     R5, Z+35
   \   000000BE   ....               LDI     R18, LOW(`?<Constant "\\r>> ">`)
   \   000000C0   ....               LDI     R19, (`?<Constant "\\r>> ">`) >> 8
   \   000000C2   018E               MOVW    R17:R16, R29:R28
   \   000000C4   5907               SUBI    R16, 151
   \   000000C6   4F1F               SBCI    R17, 255
   \   000000C8   ........           CALL    ??string_2
   \   000000CC   0198               MOVW    R19:R18, R17:R16
   \   000000CE   018D               MOVW    R17:R16, R27:R26
   \   000000D0   01F2               MOVW    R31:R30, R5:R4
   \   000000D2   9145               LPM     R20, Z+
   \   000000D4   9154               LPM     R21, Z
   \   000000D6   9731               SBIW    R31:R30, 1
   \   000000D8   01FA               MOVW    R31:R30, R21:R20
   \   000000DA   9509               ICALL
   \   000000DC   018E               MOVW    R17:R16, R29:R28
   \   000000DE   5907               SUBI    R16, 151
   \   000000E0   4F1F               SBCI    R17, 255
   \   000000E2   ........           CALL    `?~string`
     60                     currCmd = cmdlist[cmdlist.size() - listpointer ];
   \   000000E6   018D               MOVW    R17:R16, R27:R26
   \   000000E8   5F0F               SUBI    R16, 255
   \   000000EA   4F1F               SBCI    R17, 255
   \   000000EC   ........           CALL    ??size_3
   \   000000F0   9120....           LDS     R18, ??listpointer
   \   000000F4   E030               LDI     R19, 0
   \   000000F6   1B02               SUB     R16, R18
   \   000000F8   0B13               SBC     R17, R19
   \   000000FA   0198               MOVW    R19:R18, R17:R16
   \   000000FC   018D               MOVW    R17:R16, R27:R26
   \   000000FE   5F0F               SUBI    R16, 255
   \   00000100   4F1F               SBCI    R17, 255
   \   00000102   ........           CALL    `??operator[]`
   \   00000106   0198               MOVW    R19:R18, R17:R16
   \   00000108   018D               MOVW    R17:R16, R27:R26
   \   0000010A   5F09               SUBI    R16, 249
   \   0000010C   4F1F               SBCI    R17, 255
   \   0000010E   ........           CALL    `??operator=`
     61                     Output(currCmd);
   \   00000112   01FD               MOVW    R31:R30, R27:R26
   \   00000114   A042               LDD     R4, Z+34
   \   00000116   A053               LDD     R5, Z+35
   \   00000118   019D               MOVW    R19:R18, R27:R26
   \   0000011A   5F29               SUBI    R18, 249
   \   0000011C   4F3F               SBCI    R19, 255
   \   0000011E   018E               MOVW    R17:R16, R29:R28
   \   00000120   5A0C               SUBI    R16, 172
   \   00000122   4F1F               SBCI    R17, 255
   \   00000124   ........           CALL    ??string_1
   \   00000128   0198               MOVW    R19:R18, R17:R16
   \   0000012A   018D               MOVW    R17:R16, R27:R26
   \   0000012C   01F2               MOVW    R31:R30, R5:R4
   \   0000012E   9145               LPM     R20, Z+
   \   00000130   9154               LPM     R21, Z
   \   00000132   9731               SBIW    R31:R30, 1
   \   00000134   01FA               MOVW    R31:R30, R21:R20
   \   00000136   9509               ICALL
   \   00000138   018E               MOVW    R17:R16, R29:R28
   \   0000013A   5A0C               SUBI    R16, 172
   \   0000013C   4F1F               SBCI    R17, 255
   \   0000013E   ........           CALL    `?~string`
     62                     
     63          
     64                  }
     65                }
     66                
     67          
     68          
     69                ctrl = 0;
   \                     ??Input_6:
   \   00000142   E000               LDI     R16, 0
   \   00000144   9300....           STS     ??ctrl, R16
     70                return;
   \   00000148   C0CD               RJMP    ??Input_3
     71              } 
     72          
     73                if( 0x08 == _ch )//backspace
   \                     ??Input_5:
   \   0000014A   3088               CPI     R24, 8
   \   0000014C   F009               BREQ    $+2+2
   \   0000014E   C062               RJMP    ??Input_8
     74                {
     75          	if(!currCmd.empty())
   \   00000150   018D               MOVW    R17:R16, R27:R26
   \   00000152   5F09               SUBI    R16, 249
   \   00000154   4F1F               SBCI    R17, 255
   \   00000156   ........           CALL    ??empty
   \   0000015A   2300               TST     R16
   \   0000015C   F009               BREQ    $+2+2
   \   0000015E   C05A               RJMP    ??Input_8
     76                  {
     77          	  currCmd= std::string(currCmd.begin(),currCmd.end()-1);
   \   00000160   018D               MOVW    R17:R16, R27:R26
   \   00000162   5F09               SUBI    R16, 249
   \   00000164   4F1F               SBCI    R17, 255
   \   00000166   ........           CALL    ??end
   \   0000016A   0128               MOVW    R5:R4, R17:R16
   \   0000016C   018D               MOVW    R17:R16, R27:R26
   \   0000016E   5F09               SUBI    R16, 249
   \   00000170   4F1F               SBCI    R17, 255
   \   00000172   ........           CALL    ??begin
   \   00000176   EF2F               LDI     R18, 255
   \   00000178   0E42               ADD     R4, R18
   \   0000017A   EF2F               LDI     R18, 255
   \   0000017C   1E52               ADC     R5, R18
   \   0000017E   01A2               MOVW    R21:R20, R5:R4
   \   00000180   0198               MOVW    R19:R18, R17:R16
   \   00000182   018E               MOVW    R17:R16, R29:R28
   \   00000184   5C01               SUBI    R16, 193
   \   00000186   4F1F               SBCI    R17, 255
   \   00000188   ........           CALL    ??string_3
   \   0000018C   0198               MOVW    R19:R18, R17:R16
   \   0000018E   018D               MOVW    R17:R16, R27:R26
   \   00000190   5F09               SUBI    R16, 249
   \   00000192   4F1F               SBCI    R17, 255
   \   00000194   ........           CALL    `??operator=`
   \   00000198   018E               MOVW    R17:R16, R29:R28
   \   0000019A   5C01               SUBI    R16, 193
   \   0000019C   4F1F               SBCI    R17, 255
   \   0000019E   ........           CALL    `?~string`
     78                    Output("\r>> "+currCmd+" ");
   \   000001A2   01FD               MOVW    R31:R30, R27:R26
   \   000001A4   A042               LDD     R4, Z+34
   \   000001A6   A053               LDD     R5, Z+35
   \   000001A8   01AD               MOVW    R21:R20, R27:R26
   \   000001AA   5F49               SUBI    R20, 249
   \   000001AC   4F5F               SBCI    R21, 255
   \   000001AE   ....               LDI     R18, LOW(`?<Constant "\\r>> ">`)
   \   000001B0   ....               LDI     R19, (`?<Constant "\\r>> ">`) >> 8
   \   000001B2   018E               MOVW    R17:R16, R29:R28
   \   000001B4   5E0B               SUBI    R16, 235
   \   000001B6   4F1F               SBCI    R17, 255
   \   000001B8   ........           CALL    `??operator+`
   \   000001BC   ....               LDI     R20, LOW(`?<Constant " ">`)
   \   000001BE   ....               LDI     R21, (`?<Constant " ">`) >> 8
   \   000001C0   019E               MOVW    R19:R18, R29:R28
   \   000001C2   5E2B               SUBI    R18, 235
   \   000001C4   4F3F               SBCI    R19, 255
   \   000001C6   018E               MOVW    R17:R16, R29:R28
   \   000001C8   5D06               SUBI    R16, 214
   \   000001CA   4F1F               SBCI    R17, 255
   \   000001CC   ........           CALL    `??operator+_1`
   \   000001D0   019E               MOVW    R19:R18, R29:R28
   \   000001D2   5D26               SUBI    R18, 214
   \   000001D4   4F3F               SBCI    R19, 255
   \   000001D6   018D               MOVW    R17:R16, R27:R26
   \   000001D8   01F2               MOVW    R31:R30, R5:R4
   \   000001DA   9145               LPM     R20, Z+
   \   000001DC   9154               LPM     R21, Z
   \   000001DE   9731               SBIW    R31:R30, 1
   \   000001E0   01FA               MOVW    R31:R30, R21:R20
   \   000001E2   9509               ICALL
   \   000001E4   018E               MOVW    R17:R16, R29:R28
   \   000001E6   5D06               SUBI    R16, 214
   \   000001E8   4F1F               SBCI    R17, 255
   \   000001EA   ........           CALL    `?~string`
   \   000001EE   018E               MOVW    R17:R16, R29:R28
   \   000001F0   5E0B               SUBI    R16, 235
   \   000001F2   4F1F               SBCI    R17, 255
   \   000001F4   ........           CALL    `?~string`
     79                    Output(_ch);        
   \   000001F8   01FD               MOVW    R31:R30, R27:R26
   \   000001FA   A142               LDD     R20, Z+34
   \   000001FC   A153               LDD     R21, Z+35
   \   000001FE   5F4E               SUBI    R20, 254
   \   00000200   4F5F               SBCI    R21, 255
   \   00000202   2F28               MOV     R18, R24
   \   00000204   018D               MOVW    R17:R16, R27:R26
   \   00000206   01FA               MOVW    R31:R30, R21:R20
   \   00000208   9145               LPM     R20, Z+
   \   0000020A   9154               LPM     R21, Z
   \   0000020C   9731               SBIW    R31:R30, 1
   \   0000020E   01FA               MOVW    R31:R30, R21:R20
   \   00000210   9509               ICALL
     80                    return;
   \   00000212   C068               RJMP    ??Input_3
     81                  }
     82                }    
     83          
     84                if('\n' == _ch  || '\r' == _ch  || STRING_SIZE <= currCmd.size()){
   \                     ??Input_8:
   \   00000214   308A               CPI     R24, 10
   \   00000216   F059               BREQ    ??Input_9
   \   00000218   308D               CPI     R24, 13
   \   0000021A   F049               BREQ    ??Input_9
   \   0000021C   018D               MOVW    R17:R16, R27:R26
   \   0000021E   5F09               SUBI    R16, 249
   \   00000220   4F1F               SBCI    R17, 255
   \   00000222   ........           CALL    ??size
   \   00000226   300C               CPI     R16, 12
   \   00000228   4010               SBCI    R17, 0
   \   0000022A   F408               BRCC    $+2+2
   \   0000022C   C043               RJMP    ??Input_10
     85                  if(!currCmd.empty()){
   \                     ??Input_9:
   \   0000022E   018D               MOVW    R17:R16, R27:R26
   \   00000230   5F09               SUBI    R16, 249
   \   00000232   4F1F               SBCI    R17, 255
   \   00000234   ........           CALL    ??empty
   \   00000238   2300               TST     R16
   \   0000023A   F541               BRNE    ??Input_11
     86                    cmdlist.push_back(currCmd);
   \   0000023C   019D               MOVW    R19:R18, R27:R26
   \   0000023E   5F29               SUBI    R18, 249
   \   00000240   4F3F               SBCI    R19, 255
   \   00000242   018D               MOVW    R17:R16, R27:R26
   \   00000244   5F0F               SUBI    R16, 255
   \   00000246   4F1F               SBCI    R17, 255
   \   00000248   ........           CALL    ??push_back_1
     87                    if(cmdlist.size() > 3)
   \   0000024C   018D               MOVW    R17:R16, R27:R26
   \   0000024E   5F0F               SUBI    R16, 255
   \   00000250   4F1F               SBCI    R17, 255
   \   00000252   ........           CALL    ??size_3
   \   00000256   3004               CPI     R16, 4
   \   00000258   4010               SBCI    R17, 0
   \   0000025A   F058               BRCS    ??Input_12
     88                    {
     89                       cmdlist.erase(cmdlist.begin());
   \   0000025C   018D               MOVW    R17:R16, R27:R26
   \   0000025E   5F0F               SUBI    R16, 255
   \   00000260   4F1F               SBCI    R17, 255
   \   00000262   ........           CALL    ??begin_1
   \   00000266   0198               MOVW    R19:R18, R17:R16
   \   00000268   018D               MOVW    R17:R16, R27:R26
   \   0000026A   5F0F               SUBI    R16, 255
   \   0000026C   4F1F               SBCI    R17, 255
   \   0000026E   ........           CALL    ??erase_1
     90                    }
     91                    Input(currCmd);
   \                     ??Input_12:
   \   00000272   019D               MOVW    R19:R18, R27:R26
   \   00000274   5F29               SUBI    R18, 249
   \   00000276   4F3F               SBCI    R19, 255
   \   00000278   018D               MOVW    R17:R16, R27:R26
   \   0000027A   ....               RCALL   ??Input_1
     92                    currCmd.clear();
   \   0000027C   018D               MOVW    R17:R16, R27:R26
   \   0000027E   5F09               SUBI    R16, 249
   \   00000280   4F1F               SBCI    R17, 255
   \   00000282   ........           CALL    ??clear
     93                    listpointer=1;
   \   00000286   E001               LDI     R16, 1
   \   00000288   9300....           STS     ??listpointer, R16
     94                  }
     95                  
     96                Output("\n>> ");
   \                     ??Input_11:
   \   0000028C   01FD               MOVW    R31:R30, R27:R26
   \   0000028E   A042               LDD     R4, Z+34
   \   00000290   A053               LDD     R5, Z+35
   \   00000292   ....               LDI     R18, LOW(`?<Constant "\\n>> ">`)
   \   00000294   ....               LDI     R19, (`?<Constant "\\n>> ">`) >> 8
   \   00000296   018E               MOVW    R17:R16, R29:R28
   \   00000298   ........           CALL    ??string_2
   \   0000029C   0198               MOVW    R19:R18, R17:R16
   \   0000029E   018D               MOVW    R17:R16, R27:R26
   \   000002A0   01F2               MOVW    R31:R30, R5:R4
   \   000002A2   9145               LPM     R20, Z+
   \   000002A4   9154               LPM     R21, Z
   \   000002A6   9731               SBIW    R31:R30, 1
   \   000002A8   01FA               MOVW    R31:R30, R21:R20
   \   000002AA   9509               ICALL
   \   000002AC   018E               MOVW    R17:R16, R29:R28
   \   000002AE   ........           CALL    `?~string`
     97                return;
   \   000002B2   C018               RJMP    ??Input_3
     98              }     
     99             
    100          
    101              if(isprint(_ch) )
   \                     ??Input_10:
   \   000002B4   2F28               MOV     R18, R24
   \   000002B6   018D               MOVW    R17:R16, R27:R26
   \   000002B8   ....               RCALL   ??isprint
   \   000002BA   2300               TST     R16
   \   000002BC   F099               BREQ    ??Input_3
    102              {
    103                currCmd.push_back(_ch);
   \   000002BE   2F28               MOV     R18, R24
   \   000002C0   018D               MOVW    R17:R16, R27:R26
   \   000002C2   5F09               SUBI    R16, 249
   \   000002C4   4F1F               SBCI    R17, 255
   \   000002C6   ........           CALL    ??push_back
    104                Output(_ch);
   \   000002CA   01FD               MOVW    R31:R30, R27:R26
   \   000002CC   A142               LDD     R20, Z+34
   \   000002CE   A153               LDD     R21, Z+35
   \   000002D0   5F4E               SUBI    R20, 254
   \   000002D2   4F5F               SBCI    R21, 255
   \   000002D4   2F28               MOV     R18, R24
   \   000002D6   018D               MOVW    R17:R16, R27:R26
   \   000002D8   01FA               MOVW    R31:R30, R21:R20
   \   000002DA   9145               LPM     R20, Z+
   \   000002DC   9154               LPM     R21, Z
   \   000002DE   9731               SBIW    R31:R30, 1
   \   000002E0   01FA               MOVW    R31:R30, R21:R20
   \   000002E2   9509               ICALL
    105              }
    106          
    107               
    108            
    109                
    110            
    111          }
   \                     ??Input_3:
   \   000002E4   96EF               ADIW    R29:R28, 63
   \   000002E6   96EF               ADIW    R29:R28, 63
   \   000002E8   9665               ADIW    R29:R28, 21
   \   000002EA   E0E6               LDI     R30, 6
   \   000002EC   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     ??ctrl:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     ??listpointer:
   \   00000000                      DS8 1
    112          

   \                                 In  segment CODE, align 2, keep-with-next
    113          char TerminalService::isprint(char _ch)
   \                     ??isprint:
    114          {
   \   00000000   01A8               MOVW    R21:R20, R17:R16
    115            if(' ' <= _ch &&  '}' >= _ch)
   \   00000002   3220               CPI     R18, 32
   \   00000004   F020               BRCS    ??isprint_1
   \   00000006   372E               CPI     R18, 126
   \   00000008   F410               BRCC    ??isprint_1
    116            {
    117              return 1;
   \   0000000A   E001               LDI     R16, 1
   \   0000000C   9508               RET
    118            }
    119            
    120            return 0;
   \                     ??isprint_1:
   \   0000000E   E000               LDI     R16, 0
   \   00000010   9508               RET
    121          }
    122          

   \                                 In  segment CODE, align 2, keep-with-next
    123          void TerminalService::Input(const std::string & _string)
   \                     ??Input_1:
    124          {
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   97A1               SBIW    R29:R28, 33
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   0129               MOVW    R5:R4, R19:R18
    125            std::vector<std::string> str_split;
   \   0000000A   018E               MOVW    R17:R16, R29:R28
   \   0000000C   ........           CALL    ??vector
    126            
    127            unsigned char i;
    128            
    129            str_split = split(_string);
   \   00000010   0192               MOVW    R19:R18, R5:R4
   \   00000012   018E               MOVW    R17:R16, R29:R28
   \   00000014   5F0A               SUBI    R16, 250
   \   00000016   4F1F               SBCI    R17, 255
   \   00000018   ........           CALL    ??split
   \   0000001C   019E               MOVW    R19:R18, R29:R28
   \   0000001E   5F2A               SUBI    R18, 250
   \   00000020   4F3F               SBCI    R19, 255
   \   00000022   018E               MOVW    R17:R16, R29:R28
   \   00000024   ........           CALL    `??operator=_1`
   \   00000028   018E               MOVW    R17:R16, R29:R28
   \   0000002A   5F0A               SUBI    R16, 250
   \   0000002C   4F1F               SBCI    R17, 255
   \   0000002E   ........           CALL    `?~vector`
    130            
    131          //  if(str_split.size() == 0){
    132          //    Output("\n>> ");
    133          //    return;
    134          //  }
    135            if( 0 < str_split.size())
   \   00000032   018E               MOVW    R17:R16, R29:R28
   \   00000034   ........           CALL    ??size_3
   \   00000038   2B01               OR      R16, R17
   \   0000003A   F409               BRNE    $+2+2
   \   0000003C   C051               RJMP    ??Input_13
    136            {
    137              for( i = 0 ; i < tcs.size() ; i++)
   \   0000003E   E080               LDI     R24, 0
   \                     ??Input_14:
   \   00000040   E090               LDI     R25, 0
   \   00000042   018D               MOVW    R17:R16, R27:R26
   \   00000044   5E04               SUBI    R16, 228
   \   00000046   4F1F               SBCI    R17, 255
   \   00000048   ........           CALL    ??size_4
   \   0000004C   1780               CP      R24, R16
   \   0000004E   0791               CPC     R25, R17
   \   00000050   F008               BRCS    $+2+2
   \   00000052   C046               RJMP    ??Input_13
    138              {
    139                if(*(tcs[i]) == str_split[0])
   \   00000054   E020               LDI     R18, 0
   \   00000056   E030               LDI     R19, 0
   \   00000058   018E               MOVW    R17:R16, R29:R28
   \   0000005A   ........           CALL    `??operator[]`
   \   0000005E   0138               MOVW    R7:R6, R17:R16
   \   00000060   2F28               MOV     R18, R24
   \   00000062   E030               LDI     R19, 0
   \   00000064   018D               MOVW    R17:R16, R27:R26
   \   00000066   5E04               SUBI    R16, 228
   \   00000068   4F1F               SBCI    R17, 255
   \   0000006A   ........           CALL    `??operator[]_1`
   \   0000006E   0193               MOVW    R19:R18, R7:R6
   \   00000070   01F8               MOVW    R31:R30, R17:R16
   \   00000072   8100               LD      R16, Z
   \   00000074   8111               LDD     R17, Z+1
   \   00000076   ........           CALL    `??operator==_1`
   \   0000007A   2300               TST     R16
   \   0000007C   F179               BREQ    ??Input_15
    140                {
    141                  Output("\n");
   \   0000007E   01FD               MOVW    R31:R30, R27:R26
   \   00000080   A062               LDD     R6, Z+34
   \   00000082   A073               LDD     R7, Z+35
   \   00000084   ....               LDI     R18, LOW(`?<Constant "\\n">`)
   \   00000086   ....               LDI     R19, (`?<Constant "\\n">`) >> 8
   \   00000088   018E               MOVW    R17:R16, R29:R28
   \   0000008A   5F04               SUBI    R16, 244
   \   0000008C   4F1F               SBCI    R17, 255
   \   0000008E   ........           CALL    ??string_2
   \   00000092   0198               MOVW    R19:R18, R17:R16
   \   00000094   018D               MOVW    R17:R16, R27:R26
   \   00000096   01F3               MOVW    R31:R30, R7:R6
   \   00000098   9145               LPM     R20, Z+
   \   0000009A   9154               LPM     R21, Z
   \   0000009C   9731               SBIW    R31:R30, 1
   \   0000009E   01FA               MOVW    R31:R30, R21:R20
   \   000000A0   9509               ICALL
   \   000000A2   018E               MOVW    R17:R16, R29:R28
   \   000000A4   5F04               SUBI    R16, 244
   \   000000A6   4F1F               SBCI    R17, 255
   \   000000A8   ........           CALL    `?~string`
    142                  tcs[i]->ExecuteCommand(str_split);
   \   000000AC   2F28               MOV     R18, R24
   \   000000AE   E030               LDI     R19, 0
   \   000000B0   018D               MOVW    R17:R16, R27:R26
   \   000000B2   5E04               SUBI    R16, 228
   \   000000B4   4F1F               SBCI    R17, 255
   \   000000B6   ........           CALL    `??operator[]_1`
   \   000000BA   01F8               MOVW    R31:R30, R17:R16
   \   000000BC   8120               LD      R18, Z
   \   000000BE   8131               LDD     R19, Z+1
   \   000000C0   0189               MOVW    R17:R16, R19:R18
   \   000000C2   01F9               MOVW    R31:R30, R19:R18
   \   000000C4   8947               LDD     R20, Z+23
   \   000000C6   8D50               LDD     R21, Z+24
   \   000000C8   5F4C               SUBI    R20, 252
   \   000000CA   4F5F               SBCI    R21, 255
   \   000000CC   019E               MOVW    R19:R18, R29:R28
   \   000000CE   01FA               MOVW    R31:R30, R21:R20
   \   000000D0   9145               LPM     R20, Z+
   \   000000D2   9154               LPM     R21, Z
   \   000000D4   9731               SBIW    R31:R30, 1
   \   000000D6   01FA               MOVW    R31:R30, R21:R20
   \   000000D8   9509               ICALL
    143                  break;
   \   000000DA   C002               RJMP    ??Input_13
    144                }
    145              }
   \                     ??Input_15:
   \   000000DC   9583               INC     R24
   \   000000DE   CFB0               RJMP    ??Input_14
    146            }
    147            if(tcs.size() == i)
   \                     ??Input_13:
   \   000000E0   018D               MOVW    R17:R16, R27:R26
   \   000000E2   5E04               SUBI    R16, 228
   \   000000E4   4F1F               SBCI    R17, 255
   \   000000E6   ........           CALL    ??size_4
   \   000000EA   E090               LDI     R25, 0
   \   000000EC   1708               CP      R16, R24
   \   000000EE   0719               CPC     R17, R25
   \   000000F0   F471               BRNE    ??Input_16
    148              Output(errormsg);
   \   000000F2   01FD               MOVW    R31:R30, R27:R26
   \   000000F4   A142               LDD     R20, Z+34
   \   000000F6   A153               LDD     R21, Z+35
   \   000000F8   5F4C               SUBI    R20, 252
   \   000000FA   4F5F               SBCI    R21, 255
   \   000000FC   ....               LDI     R18, LOW(errormsg)
   \   000000FE   ....               LDI     R19, (errormsg) >> 8
   \   00000100   018D               MOVW    R17:R16, R27:R26
   \   00000102   01FA               MOVW    R31:R30, R21:R20
   \   00000104   9145               LPM     R20, Z+
   \   00000106   9154               LPM     R21, Z
   \   00000108   9731               SBIW    R31:R30, 1
   \   0000010A   01FA               MOVW    R31:R30, R21:R20
   \   0000010C   9509               ICALL
    149            
    150          //  Output("\n>> ");
    151          }
   \                     ??Input_16:
   \   0000010E   018E               MOVW    R17:R16, R29:R28
   \   00000110   ........           CALL    `?~vector`
   \   00000114   96A1               ADIW    R29:R28, 33
   \   00000116   E0E8               LDI     R30, 8
   \   00000118   ........           JMP     ?EPILOGUE_B8_L09
    152          

   \                                 In  segment CODE, align 2, keep-with-next
    153          void TerminalService::AddCommand(ITerminalCommand & _tc)  
   \                     ??AddCommand:
    154          //void TerminalService::AddCommand(std::shared_ptr<ITerminalCommand>  _tc)
    155          { 
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   01D9               MOVW    R27:R26, R19:R18
    156          //  assert(ptcs.size() <=defaultParams);
    157          //  assert( 0 != _tc.get());
    158          //  _tc->SetTerminalService(*this);
    159          //  ptcs.push_back(_tc);
    160            
    161            assert(tcs.size() <=defaultParams);  
   \   00000008   01FC               MOVW    R31:R30, R25:R24
   \   0000000A   8040               LD      R4, Z
   \   0000000C   2455               CLR     R5
   \   0000000E   018C               MOVW    R17:R16, R25:R24
   \   00000010   5E04               SUBI    R16, 228
   \   00000012   4F1F               SBCI    R17, 255
   \   00000014   ........           CALL    ??size_4
   \   00000018   1640               CP      R4, R16
   \   0000001A   0651               CPC     R5, R17
   \   0000001C   F450               BRCC    ??AddCommand_1
   \   0000001E   EA41               LDI     R20, 161
   \   00000020   E050               LDI     R21, 0
   \   00000022   ....               LDI     R18, LOW(`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`)
   \   00000024   ....               LDI     R19, (`?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`) >> 8
   \   00000026   ....               LDI     R16, LOW(`?<Constant "tcs.size() <=defaultP...">`)
   \   00000028   ....               LDI     R17, (`?<Constant "tcs.size() <=defaultP...">`) >> 8
   \   0000002A   ........           CALL    __taabi_assert
   \   0000002E   ........           CALL    __iar_EmptyStepPoint
    162              _tc.SetTerminalService(*this);
   \                     ??AddCommand_1:
   \   00000032   019C               MOVW    R19:R18, R25:R24
   \   00000034   018D               MOVW    R17:R16, R27:R26
   \   00000036   ........           CALL    ??SetTerminalService
    163               tcs.push_back(&_tc);
   \   0000003A   019D               MOVW    R19:R18, R27:R26
   \   0000003C   018C               MOVW    R17:R16, R25:R24
   \   0000003E   5E04               SUBI    R16, 228
   \   00000040   4F1F               SBCI    R17, 255
   \   00000042   ........           CALL    ??push_back_2
    164          }
   \   00000046   E0E6               LDI     R30, 6
   \   00000048   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\n">>`:
   \   00000000   000A               DC8 "\012"

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\r            ">>`:
   \   00000000   200D20202020       DC8 "\015            "
   \              202020202020
   \              0020        

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\r>> ">>`:
   \   00000000   3E0D203E00         DC8 "\015>> "

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant " ">>`:
   \   00000000   0020               DC8 " "

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\n>> ">>`:
   \   00000000   3E0A203E00         DC8 "\012>> "

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "tcs.size() <=defa`:
   \   00000000   63742E736973       DC8 "tcs.size() <=defaultParams"
   \              657A29283C20
   \              643D66657561
   \              746C61506172
   \              736D00      

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "C:\\\\work\\\\TIEL_Fr`:
   \   00000000   3A43775C726F       DC8 43H, 3AH, 5CH, 77H, 6FH, 72H, 6BH, 5CH
   \              5C6B        
   \   00000008   49544C45465F       DC8 54H, 49H, 45H, 4CH, 5FH, 46H, 72H, 61H
   \              6172        
   \   00000010   656D6F576B72       DC8 6DH, 65H, 57H, 6FH, 72H, 6BH, 5CH, 53H
   \              535C        
   \   00000018   726569766563       DC8 65H, 72H, 76H, 69H, 63H, 65H, 5CH, 74H
   \              745C        
   \   00000020   7265696D616E       DC8 65H, 72H, 6DH, 69H, 6EH, 61H, 6CH, 5FH
   \              5F6C        
   \   00000028   657376726369       DC8 73H, 65H, 72H, 76H, 69H, 63H, 65H, 2EH
   \              2E65        
   \   00000030   70630070           DC8 63H, 70H, 70H, 0

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\n">`:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for <Constant "\\n">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\r            ">`:
   \   00000000                      DS8 14
   \   0000000E                      REQUIRE `?<Initializer for <Constant "\\r            ">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\r>> ">`:
   \   00000000                      DS8 5
   \   00000005                      REQUIRE `?<Initializer for <Constant "\\r>> ">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant " ">`:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for <Constant " ">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\n>> ">`:
   \   00000000                      DS8 5
   \   00000005                      REQUIRE `?<Initializer for <Constant "\\n>> ">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "tcs.size() <=defaultP...">`:
   \   00000000                      DS8 27
   \   0000001B                      REQUIRE `?<Initializer for <Constant "tcs.size() <=defa`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "C:\\\\work\\\\TIEL_FrameWor...">`:
   \   00000000                      DS8 52
   \   00000034                      REQUIRE `?<Initializer for <Constant "C:\\\\work\\\\TIEL_Fr`

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 TerminalService *TerminalService::new TerminalService(unsigned char)
   \                     `??new TerminalService`:
   \   00000000   938A               ST      -Y, R24
   \   00000002   2F80               MOV     R24, R16
   \   00000004   E204               LDI     R16, 36
   \   00000006   E010               LDI     R17, 0
   \   00000008   ........           CALL    `??operator new_1`
   \   0000000C   01A8               MOVW    R21:R20, R17:R16
   \   0000000E   2B01               OR      R16, R17
   \   00000010   F021               BREQ    `??new TerminalService_1`
   \   00000012   2F28               MOV     R18, R24
   \   00000014   018A               MOVW    R17:R16, R21:R20
   \   00000016   ....               RCALL   ??TerminalService
   \   00000018   C002               RJMP    `??new TerminalService_2`
   \                     `??new TerminalService_1`:
   \   0000001A   E000               LDI     R16, 0
   \   0000001C   E010               LDI     R17, 0
   \                     `??new TerminalService_2`:
   \   0000001E   9189               LD      R24, Y+
   \   00000020   9508               RET

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     ITerminalCommand::SetTerminalService(TerminalService &)
                                        0      2
     ITerminalCommand::operator==(string const &)
                                        4      2
       -> operator==(string const &, string const &)
                                        4      2
     TerminalService::AddCommand(ITerminalCommand &)
                                        6      2
       -> vector<ITerminalCommand *>::size() const
                                        6      2
       -> __taabi_assert                6      2
       -> __iar_EmptyStepPoint          6      2
       -> ITerminalCommand::SetTerminalService(TerminalService &)
                                        6      2
       -> vector<ITerminalCommand *>::push_back(ITerminalCommand *)
                                        6      2
     TerminalService::Init()            0      2
     TerminalService::Input(char)     153      2
       ->   Indirect call             153      2
       -> vector<string>::empty() const
                                      153      2
       -> vector<string>::size() const
                                      153      2
       -> string::string(char const *)
                                      153      2
       ->   Indirect call             153      2
       -> string::~string()           153      2
       -> string::string(char const *)
                                      153      2
       ->   Indirect call             153      2
       -> string::~string()           153      2
       -> vector<string>::size() const
                                      153      2
       -> vector<string>::operator[](unsigned int)
                                      153      2
       -> string::operator=(string const &)
                                      153      2
       -> string::string(string const &)
                                      153      2
       ->   Indirect call             153      2
       -> string::~string()           153      2
       -> string::empty() const       153      2
       -> string::end()               153      2
       -> string::begin()             153      2
       -> string::string(char const *, char const *)
                                      153      2
       -> string::operator=(string const &)
                                      153      2
       -> string::~string()           153      2
       -> operator+(char const *, string const &)
                                      153      2
       -> operator+(string const &, char const *)
                                      153      2
       ->   Indirect call             153      2
       -> string::~string()           153      2
       -> string::~string()           153      2
       ->   Indirect call             153      2
       -> string::size() const        153      2
       -> string::empty() const       153      2
       -> vector<string>::push_back(string const &)
                                      153      2
       -> vector<string>::size() const
                                      153      2
       -> vector<string>::begin()     153      2
       -> vector<string>::erase(string *)
                                      153      2
       -> TerminalService::Input(string const &)
                                      153      2
       -> string::clear()             153      2
       -> string::string(char const *)
                                      153      2
       ->   Indirect call             153      2
       -> string::~string()           153      2
       -> TerminalService::isprint(char)
                                      153      2
       -> string::push_back(char)     153      2
       ->   Indirect call             153      2
     TerminalService::Input(string const &)
                                       41      2
       -> vector<string>::vector()     41      2
       -> split(string const &)        41      2
       -> vector<string>::operator=(vector<string> const &)
                                       41      2
       -> vector<string>::~vector()    41      2
       -> vector<string>::size() const
                                       41      2
       -> vector<ITerminalCommand *>::size() const
                                       41      2
       -> vector<string>::operator[](unsigned int)
                                       41      2
       -> vector<ITerminalCommand *>::operator[](unsigned int)
                                       41      2
       -> ITerminalCommand::operator==(string const &)
                                       41      2
       -> string::string(char const *)
                                       41      2
       ->   Indirect call              41      2
       -> string::~string()            41      2
       -> vector<ITerminalCommand *>::operator[](unsigned int)
                                       41      2
       ->   Indirect call              41      2
       -> vector<ITerminalCommand *>::size() const
                                       41      2
       ->   Indirect call              41      2
       -> vector<string>::~vector()    41      2
     TerminalService::TerminalService(unsigned char)
                                        4      2
       -> vector<string>::vector()      4      2
       -> string::string()              4      2
       -> vector<ITerminalCommand *>::vector()
                                        4      2
     TerminalService::isprint(char)     0      2
     TerminalService::new TerminalService(unsigned char)
                                        1      2
       -> operator new(size_t)          1      2
       -> TerminalService::TerminalService(unsigned char)
                                        1      2
     _Allocator<void>::allocate(unsigned int)
                                        2      2
       -> operator new(size_t)          2      2
     _Allocator<void>::deallocate(void *)
                                        2      2
       -> operator delete(void *)       2      2
     _Backward_copier<string, false>::_Copy(string const *, string const *, string *)
                                        6      2
       -> _Copy_backward_opt0(string const *, string const *, string *)
                                        6      2
     _Backward_copier<unsigned short, true>::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
                                        8      4
       -> memmove                       8      2
     _ClassUtil::_AllocHolder<allocator<void>, false>::_AllocHolder()
                                        0      2
     _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                        2      2
       -> allocator<void>::allocator()
                                        2      2
     _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval() const
                                        2      2
       -> allocator<void>::allocator()
                                        2      2
     _Construct(string *, string const &)
                                        4      2
       -> operator new(unsigned int, void *)
                                        4      2
       -> string::string(string const &)
                                        4      2
     _Copier<string, false>::_Copy(string const *, string const *, string *)
                                        6      2
       -> _Copy_opt0(string const *, string const *, string *)
                                        6      2
     _Copy_backward_opt(string *, string *, string *)
                                        6      2
       -> _Copy_backward_opt(string const *, string const *, string *)
                                        6      2
     _Copy_backward_opt(string const *, string const *, string *)
                                        6      2
       -> _Backward_copier<string, false>::_Copy(string const *, string const *, string *)
                                        6      2
     _Copy_backward_opt(unsigned short *, unsigned short *, unsigned short *)
                                        6      2
       -> _Copy_backward_opt(unsigned short const *, unsigned short const *, unsigned short *)
                                        6      2
     _Copy_backward_opt(unsigned short const *, unsigned short const *, unsigned short *)
                                        6      2
       -> _Backward_copier<unsigned short, true>::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
                                        6      2
     _Copy_backward_opt0(string const *, string const *, string *)
                                        6      2
       -> string::operator=(string const &)
                                        6      2
     _Copy_opt(string *, string *, string *)
                                        6      2
       -> _Copy_opt(string const *, string const *, string *)
                                        6      2
     _Copy_opt(string const *, string const *, string *)
                                        6      2
       -> _Copier<string, false>::_Copy(string const *, string const *, string *)
                                        6      2
     _Copy_opt0(string const *, string const *, string *)
                                        6      2
       -> string::operator=(string const &)
                                        6      2
     _Destroy(string *)                 2      2
       -> string::~string()             2      2
     _Destroy_range(string *, string *, allocator<string> &)
                                        6      2
       -> allocator<string>::destroy(string *)
                                        6      2
     _String_val::_String_val(char_allocator)
                                        0      2
     _Uninit_copier<string, false>::_Copy(string const *, string const *, string *)
                                        6      2
       -> _Uninit_copy0(string const *, string const *, string *)
                                        6      2
     _Uninit_copier<unsigned short, true>::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
                                        6      2
       -> _Uninit_copy(char const *, char const *, char *)
                                        6      2
     _Uninit_copy(char const *, char const *, char *)
                                        8      2
       -> memmove                       8      2
     _Uninit_copy(string const *, string const *, string *)
                                        6      2
       -> _Uninit_copier<string, false>::_Copy(string const *, string const *, string *)
                                        6      2
     _Uninit_copy(string const *, string const *, string *, allocator<string> &)
                                        8      2
       -> _Uninit_copy(string const *, string const *, string *)
                                        8      2
     _Uninit_copy(unsigned short const *, unsigned short const *, unsigned short *)
                                        6      2
       -> _Uninit_copier<unsigned short, true>::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
                                        6      2
     _Uninit_copy(unsigned short const *, unsigned short const *, unsigned short *, allocator<unsigned short> &)
                                        8      2
       -> _Uninit_copy(unsigned short const *, unsigned short const *, unsigned short *)
                                        8      2
     _Uninit_copy0(string const *, string const *, string *)
                                        8      2
       -> _Construct(string *, string const &)
                                        8      2
     _Uninitialized_copy(string const *, string const *, string *, allocator<string> &)
                                        8      2
       -> _Uninit_copy(string const *, string const *, string *, allocator<string> &)
                                        8      2
     _Uninitialized_copy(unsigned short const *, unsigned short const *, unsigned short *, allocator<unsigned short> &)
                                        8      2
       -> _Uninit_copy(unsigned short const *, unsigned short const *, unsigned short *, allocator<unsigned short> &)
                                        8      2
     _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
                                       10      2
       -> allocator<string>::construct(string *, string const &)
                                       10      2
     _Uninitialized_fill_n(unsigned short *, unsigned int, unsigned short const &, allocator<unsigned short> &)
                                        0      2
     _Vector_impl<string, allocator<string>>::_Altyval() const
                                        5      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval() const
                                        5      2
       -> allocator<string>::allocator(allocator<void> const &)
                                        5      2
     _Vector_impl<string, allocator<string>>::_Assign(_Vector_impl<string, allocator<string>> const &)
                                       11      4
       -> _Vector_impl<string, allocator<string>>::size() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Tidy()
                                       11      2
       -> _Vector_impl<string, allocator<string>>::size() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::size() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> copy(string *, string *, string *)
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::size() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::capacity() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::size() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::size() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> copy(string *, string *, string *)
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyend() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Altyval() const
                                       11      2
       -> allocator<string>::deallocate(string *, unsigned int)
                                       11      2
       -> _Vector_value<allocator<void>>::_Size<1U>() const
                                       11      2
       -> _Vector_value<allocator<void>>::_Buy(unsigned int)
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       11      2
       -> _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
                                       11      2
     _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                        7      2
       -> _Vector_impl<string, allocator<string>>::_Altyval() const
                                        7      2
       -> _Destroy_range(string *, string *, allocator<string> &)
                                        7      2
     _Vector_impl<string, allocator<string>>::_Erase(string *)
                                        6      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                        6      2
       -> copy(string *, string *, string *)
                                        6      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                        6      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                        6      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                        6      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                        6      2
     _Vector_impl<string, allocator<string>>::_EraseAll()
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                        4      2
     _Vector_impl<string, allocator<string>>::_Insert(string *, string const &)
                                        6      2
       -> _Vector_impl<string, allocator<string>>::_Insert0(string *, string const &)
                                        6      2
     _Vector_impl<string, allocator<string>>::_Insert0(string *, string const &)
                                       10      2
       -> _Vector_value<allocator<void>>::_ToBptr(void *)
                                       10      2
       -> _Vector_value<allocator<void>>::_Bfirst() const
                                       10      2
       -> _Vector_impl<string, allocator<string>>::_Insert_n(string *, unsigned int, string const &)
                                       10      2
       -> _Vector_value<allocator<void>>::_Bfirst() const
                                       10      2
     _Vector_impl<string, allocator<string>>::_Insert_n(string *, unsigned int, string const &)
                                       29      2
       -> string::string(string const &)
                                       29      2
       -> _Vector_impl<string, allocator<string>>::_Insert_n0(string *, unsigned int, string const &)
                                       29      2
       -> string::~string()            29      2
     _Vector_impl<string, allocator<string>>::_Insert_n0(string *, unsigned int, string const &)
                                        8      2
       -> _Vector_impl<string, allocator<string>>::_Make_room(string *, unsigned int)
                                        8      2
       -> _Vector_impl<string, allocator<string>>::_Ufill(string *, unsigned int, string const &)
                                        8      2
     _Vector_impl<string, allocator<string>>::_Make_room(string *, unsigned int)
                                       20      4
       -> _Vector_impl<string, allocator<string>>::capacity() const
                                       20      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                       20      2
       -> allocator<string>::allocator(allocator<void> const &)
                                       20      2
       -> _Vector_impl<string, allocator<string>>::size() const
                                       20      2
       -> allocator<string>::max_size() const
                                       20      2
       -> _Vector_value<allocator<void>>::_Xlen() const
                                       20      2
       -> allocator<string>::max_size() const
                                       20      2
       -> allocator<string>::allocate(unsigned int)
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Tidy0()
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
                                       20      2
       -> copy_backward(string *, string *, string *)
                                       20      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                       20      2
     _Vector_impl<string, allocator<string>>::_Mytyend() const
                                        0      2
     _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                        0      2
     _Vector_impl<string, allocator<string>>::_Mytylast() const
                                        0      2
     _Vector_impl<string, allocator<string>>::_Push_back(string const &)
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Push_back0(string const &)
                                        4      2
     _Vector_impl<string, allocator<string>>::_Push_back0(string const &)
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Ufill(string *, unsigned int, string const &)
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Mytylast() const
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Insert(string *, string const &)
                                        4      2
     _Vector_impl<string, allocator<string>>::_Tidy()
                                        2      2
       -> _Vector_impl<string, allocator<string>>::_Tidy0()
                                        2      2
       -> _Vector_value<allocator<void>>::_Zero()
                                        2      2
     _Vector_impl<string, allocator<string>>::_Tidy0()
                                        9      4
       -> _Vector_impl<string, allocator<string>>::_EraseAll()
                                        9      2
       -> _Vector_impl<string, allocator<string>>::_Mytyend() const
                                        9      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                        9      2
       -> _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                        9      2
       -> _Vector_impl<string, allocator<string>>::_Altyval() const
                                        9      2
       -> allocator<string>::deallocate(string *, unsigned int)
                                        9      2
     _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
                                       10      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                       10      2
       -> allocator<string>::allocator(allocator<void> const &)
                                       10      2
       -> _Uninitialized_copy(string const *, string const *, string *, allocator<string> &)
                                       10      2
     _Vector_impl<string, allocator<string>>::_Ufill(string *, unsigned int, string const &)
                                       10      4
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                       10      2
       -> allocator<string>::allocator(allocator<void> const &)
                                       10      2
       -> _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
                                       10      2
     _Vector_impl<string, allocator<string>>::_Vector_impl()
                                        2      2
       -> _Vector_value<allocator<void>>::_Vector_value()
                                        2      2
     _Vector_impl<string, allocator<string>>::capacity() const
                                        2      2
       -> _Vector_value<allocator<void>>::_Capacity<21U>() const
                                        2      2
     _Vector_impl<string, allocator<string>>::size() const
                                        2      2
       -> _Vector_value<allocator<void>>::_Size<21U>() const
                                        2      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Altyval() const
                                        5      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval() const
                                        5      2
       -> allocator<unsigned short>::allocator(allocator<void> const &)
                                        5      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Destroy(unsigned short *, unsigned short *)
                                        0      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_EraseAll()
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyfirst() const
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Destroy(unsigned short *, unsigned short *)
                                        4      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert(unsigned short *, unsigned short const &)
                                        6      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert0(unsigned short *, unsigned short)
                                        6      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert0(unsigned short *, unsigned short)
                                       10      2
       -> _Vector_value<allocator<void>>::_ToBptr(void *)
                                       10      2
       -> _Vector_value<allocator<void>>::_Bfirst() const
                                       10      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n(unsigned short *, unsigned int, unsigned short const &)
                                       10      2
       -> _Vector_value<allocator<void>>::_Bfirst() const
                                       10      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n(unsigned short *, unsigned int, unsigned short const &)
                                       10      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n0(unsigned short *, unsigned int, unsigned short)
                                       10      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n0(unsigned short *, unsigned int, unsigned short)
                                        8      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
                                        8      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short)
                                        8      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::capacity() const
                                       20      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                       20      2
       -> allocator<unsigned short>::allocator(allocator<void> const &)
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::size() const
                                       20      2
       -> allocator<unsigned short>::max_size() const
                                       20      2
       -> _Vector_value<allocator<void>>::_Xlen() const
                                       20      2
       -> allocator<unsigned short>::max_size() const
                                       20      2
       -> allocator<unsigned short>::allocate(unsigned int)
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyfirst() const
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *)
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *)
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                       20      2
       -> copy_backward(unsigned short *, unsigned short *, unsigned short *)
                                       20      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                       20      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyend() const
                                        0      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyfirst() const
                                        0      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                        0      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back(ITerminalCommand * const &)
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back0(unsigned short)
                                        4      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back0(unsigned short)
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short)
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert(unsigned short *, unsigned short const &)
                                        4      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
                                        9      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_EraseAll()
                                        9      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyend() const
                                        9      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyfirst() const
                                        9      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyfirst() const
                                        9      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Altyval() const
                                        9      2
       -> allocator<unsigned short>::deallocate(unsigned short *, unsigned int)
                                        9      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *)
                                       10      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                       10      2
       -> allocator<unsigned short>::allocator(allocator<void> const &)
                                       10      2
       -> _Uninitialized_copy(unsigned short const *, unsigned short const *, unsigned short *, allocator<unsigned short> &)
                                       10      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short)
                                       10      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                       10      2
       -> allocator<unsigned short>::allocator(allocator<void> const &)
                                       10      2
       -> _Uninitialized_fill_n(unsigned short *, unsigned int, unsigned short const &, allocator<unsigned short> &)
                                       10      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Vector_impl()
                                        2      2
       -> _Vector_value<allocator<void>>::_Vector_value()
                                        2      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::capacity() const
                                        2      2
       -> _Vector_value<allocator<void>>::_Capacity<2U>() const
                                        2      2
     _Vector_impl<unsigned short, allocator<unsigned short>>::size() const
                                        2      2
       -> _Vector_value<allocator<void>>::_Size<2U>() const
                                        2      2
     _Vector_value<allocator<void>>::_Bcapacity() const
                                        4      2
       -> _Vector_value<allocator<void>>::_Bend() const
                                        4      2
       -> _Vector_value<allocator<void>>::_Bfirst() const
                                        4      2
     _Vector_value<allocator<void>>::_Bend() const
                                        0      2
     _Vector_value<allocator<void>>::_Bfirst() const
                                        0      2
     _Vector_value<allocator<void>>::_Blast() const
                                        0      2
     _Vector_value<allocator<void>>::_Bsize() const
                                        4      2
       -> _Vector_value<allocator<void>>::_Blast() const
                                        4      2
       -> _Vector_value<allocator<void>>::_Bfirst() const
                                        4      2
     _Vector_value<allocator<void>>::_Buy(unsigned int)
                                        6      2
       -> _Vector_value<allocator<void>>::_Zero()
                                        6      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                        6      2
       -> allocator<unsigned char>::allocator(allocator<void> const &)
                                        6      2
       -> allocator<unsigned char>::max_size() const
                                        6      2
       -> _Vector_value<allocator<void>>::_Xlen() const
                                        6      2
       -> allocator<unsigned char>::allocate(unsigned int)
                                        6      2
     _Vector_value<allocator<void>>::_Capacity<21U>() const
                                        2      4
       -> _Vector_value<allocator<void>>::_Bcapacity() const
                                        2      2
     _Vector_value<allocator<void>>::_Capacity<2U>() const
                                        2      2
       -> _Vector_value<allocator<void>>::_Bcapacity() const
                                        2      2
     _Vector_value<allocator<void>>::_Size<1U>() const
                                        2      4
       -> _Vector_value<allocator<void>>::_Bsize() const
                                        2      2
     _Vector_value<allocator<void>>::_Size<21U>() const
                                        2      4
       -> _Vector_value<allocator<void>>::_Bsize() const
                                        2      2
     _Vector_value<allocator<void>>::_Size<2U>() const
                                        2      2
       -> _Vector_value<allocator<void>>::_Bsize() const
                                        2      2
     _Vector_value<allocator<void>>::_ToBptr(void *)
                                        0      2
     _Vector_value<allocator<void>>::_Vector_value()
                                        2      2
       -> _ClassUtil::_AllocHolder<allocator<void>, false>::_AllocHolder()
                                        2      2
     _Vector_value<allocator<void>>::_Xlen() const
                                        0      2
     _Vector_value<allocator<void>>::_Zero()
                                        0      2
     allocator<string>::allocate(unsigned int)
                                        4      4
       -> _Allocator<void>::allocate(unsigned int)
                                        4      2
     allocator<string>::allocator(allocator<void> const &)
                                        0      2
     allocator<string>::construct(string *, string const &)
                                        6      2
       -> _Construct(string *, string const &)
                                        6      2
     allocator<string>::deallocate(string *, unsigned int)
                                        6      2
       -> _Allocator<void>::deallocate(void *)
                                        6      2
     allocator<string>::destroy(string *)
                                        4      2
       -> _Destroy(string *)            4      2
     allocator<string>::max_size() const
                                        0      2
     allocator<unsigned char>::allocate(unsigned int)
                                        4      2
       -> _Allocator<void>::allocate(unsigned int)
                                        4      2
     allocator<unsigned char>::allocator(allocator<void> const &)
                                        0      2
     allocator<unsigned char>::max_size() const
                                        0      2
     allocator<unsigned short>::allocate(unsigned int)
                                        4      2
       -> _Allocator<void>::allocate(unsigned int)
                                        4      2
     allocator<unsigned short>::allocator(allocator<void> const &)
                                        0      2
     allocator<unsigned short>::deallocate(unsigned short *, unsigned int)
                                        6      2
       -> _Allocator<void>::deallocate(void *)
                                        6      2
     allocator<unsigned short>::max_size() const
                                        0      2
     allocator<void>::allocator()       0      2
     char_allocator::char_allocator()
                                        0      2
     char_traits::length(char const *)
                                        2      2
       -> strlen                        2      2
     copy(string *, string *, string *)
                                        6      2
       -> _Copy_opt(string *, string *, string *)
                                        6      2
     copy_backward(string *, string *, string *)
                                        6      2
       -> _Copy_backward_opt(string *, string *, string *)
                                        6      2
     copy_backward(unsigned short *, unsigned short *, unsigned short *)
                                        6      2
       -> _Copy_backward_opt(unsigned short *, unsigned short *, unsigned short *)
                                        6      2
     operator new(unsigned int, void *)
                                        0      2
     operator+(char const *, string const &)
                                       27      2
       -> string::string(char const *)
                                       27      2
       -> string::operator+=(string const &)
                                       27      2
       -> string::string(string const &)
                                       27      2
       -> string::~string()            27      2
     operator+(string const &, char const *)
                                       27      2
       -> string::string(string const &)
                                       27      2
       -> string::operator+=(char const *)
                                       27      2
       -> string::string(string const &)
                                       27      2
       -> string::~string()            27      2
     operator==(string const &, string const &)
                                        4      2
       -> string::compare(string const &) const
                                        4      2
     string::_Myptr()                   0      2
     string::_Myptr() const             0      2
     string::_Pdif(char const *, char const *)
                                        0      2
     string::append(char const *)       4      2
       -> char_traits::length(char const *)
                                        4      2
       -> string::append(char const *, size_t)
                                        4      2
     string::append(string const &)     4      2
       -> string::append(string const &, size_t, size_t)
                                        4      2
     string::assign(char const *)       4      2
       -> char_traits::length(char const *)
                                        4      2
       -> string::assign(char const *, size_t)
                                        4      2
     string::assign(string const &)     4      2
       -> string::assign(string const &, size_t, size_t)
                                        4      2
     string::begin()                    2      2
       -> string::_Myptr()              2      2
     string::clear()                    4      2
       -> string::end()                 4      2
       -> string::begin()               4      2
       -> string::erase(char *, char *)
                                        4      2
     string::compare(string const &) const
                                        8      2
       -> string::size() const          6      2
       -> string::_Myptr() const        6      2
       -> string::compare(size_t, size_t, char const *, size_t) const
                                        8      2
     string::empty() const              0      2
     string::end()                      2      2
       -> string::_Myptr()              2      2
     string::erase(char *, char *)      8      2
       -> string::begin()               8      2
       -> string::_Pdif(char const *, char const *)
                                        8      2
       -> string::_Pdif(char const *, char const *)
                                        8      2
       -> string::erase(size_t, size_t)
                                        8      2
       -> string::_Myptr()              8      2
     string::insert(char *, char)       8      2
       -> string::begin()               8      2
       -> string::_Pdif(char const *, char const *)
                                        8      2
       -> string::insert(size_t, size_t, char)
                                        8      2
       -> string::begin()               8      2
     string::operator+=(char const *)
                                        4      2
       -> string::append(char const *)
                                        4      2
     string::operator+=(string const &)
                                        4      2
       -> string::append(string const &)
                                        4      2
     string::operator=(string const &)
                                        4      2
       -> string::assign(string const &)
                                        4      2
     string::push_back(char)            4      2
       -> string::end()                 4      2
       -> string::insert(char *, char)
                                        4      2
     string::size() const               0      2
     string::string()                   3      2
       -> char_allocator::char_allocator()
                                        3      2
       -> _String_val::_String_val(char_allocator)
                                        3      2
       -> string::_Tidy(bool, size_t)
                                        3      2
     string::string(char const *)       5      2
       -> char_allocator::char_allocator()
                                        5      2
       -> _String_val::_String_val(char_allocator)
                                        5      2
       -> string::_Tidy(bool, size_t)
                                        5      2
       -> string::assign(char const *)
                                        5      2
     string::string(char const *, char const *)
                                        7      2
       -> char_allocator::char_allocator()
                                        7      2
       -> _String_val::_String_val(char_allocator)
                                        7      2
       -> string::_Tidy(bool, size_t)
                                        7      2
       -> string::assign(char const *, size_t)
                                        7      2
     string::string(string const &)     4      2
       -> _String_val::_String_val(char_allocator)
                                        4      2
       -> string::_Tidy(bool, size_t)
                                        4      2
       -> string::assign(string const &, size_t, size_t)
                                        4      2
     string::~string()                  2      2
       -> string::_Tidy(bool, size_t)
                                        2      2
     vector<ITerminalCommand *>::begin()
                                        0      2
     vector<ITerminalCommand *>::operator[](unsigned int)
                                        4      2
       -> vector<ITerminalCommand *>::begin()
                                        4      2
     vector<ITerminalCommand *>::push_back(ITerminalCommand *)
                                        4      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back(ITerminalCommand * const &)
                                        4      2
     vector<ITerminalCommand *>::size() const
                                        2      2
       -> _Vector_value<allocator<void>>::_Size<2U>() const
                                        2      2
     vector<ITerminalCommand *>::vector()
                                        2      2
       -> _Vector_impl<unsigned short, allocator<unsigned short>>::_Vector_impl()
                                        2      2
       -> _Vector_value<allocator<void>>::_Zero()
                                        2      2
     vector<string>::_I(string *)       0      2
     vector<string>::_P(string *)       0      2
     vector<string>::begin()            0      2
     vector<string>::empty() const      2      2
       -> vector<string>::size() const
                                        2      2
     vector<string>::erase(string *)
                                        4      2
       -> vector<string>::_P(string *)
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Erase(string *)
                                        4      2
       -> vector<string>::_I(string *)
                                        4      2
     vector<string>::operator=(vector<string> const &)
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Assign(_Vector_impl<string, allocator<string>> const &)
                                        4      2
     vector<string>::operator[](unsigned int)
                                        4      4
       -> vector<string>::begin()       4      2
     vector<string>::push_back(string const &)
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Push_back(string const &)
                                        4      2
     vector<string>::size() const       2      2
       -> _Vector_value<allocator<void>>::_Size<21U>() const
                                        2      2
     vector<string>::vector()           2      2
       -> _Vector_impl<string, allocator<string>>::_Vector_impl()
                                        2      2
       -> _Vector_value<allocator<void>>::_Zero()
                                        2      2
     vector<string>::~vector()          2      2
       -> _Vector_impl<string, allocator<string>>::_Tidy()
                                        2      2


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     char_traits::length(char const *)
                                                      18
     _ClassUtil::_AllocHolder<allocator<void>, false>::_AllocHolder()
                                                       2
     _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval()
                                                      18
     _ClassUtil::_AllocHolder<allocator<void>, false>::_Alval() const
                                                      18
     char_allocator::char_allocator()
                                                       2
     _String_val::_String_val(char_allocator)
                                                       6
     string::string()                                 46
     string::string(char const *)                     56
     string::string(char const *, char const *)
                                                      70
     string::string(string const &)                   56
     string::~string()                                24
     string::operator=(string const &)
                                                      22
     string::operator+=(string const &)
                                                      22
     string::operator+=(char const *)
                                                      22
     string::append(string const &)                   34
     string::append(char const *)                     30
     string::assign(string const &)                   34
     string::assign(char const *)                     30
     string::insert(char *, char)                     56
     string::erase(char *, char *)                    60
     string::clear()                                  36
     string::begin()                                  18
     string::end()                                    30
     string::push_back(char)                          30
     string::size() const                              8
     string::empty() const                            18
     string::compare(string const &) const
                                                      50
     string::_Pdif(char const *, char const *)
                                                      18
     string::_Myptr()                                 34
     string::_Myptr() const                           34
     _Copy_opt0(string const *, string const *, string *)
                                                      38
     _Copier<string, false>::_Copy(string const *, string const *, string *)
                                                      26
     _Copy_opt(string const *, string const *, string *)
                                                      26
     _Copy_opt(string *, string *, string *)
                                                      26
     copy(string *, string *, string *)
                                                      26
     _Copy_backward_opt0(string const *, string const *, string *)
                                                      42
     _Backward_copier<string, false>::_Copy(string const *, string const *, string *)
                                                      26
     _Backward_copier<unsigned short, true>::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
                                                      62
     _Copy_backward_opt(string const *, string const *, string *)
                                                      26
     _Copy_backward_opt(unsigned short const *, unsigned short const *, unsigned short *)
                                                      26
     _Copy_backward_opt(string *, string *, string *)
                                                      26
     _Copy_backward_opt(unsigned short *, unsigned short *, unsigned short *)
                                                      26
     copy_backward(string *, string *, string *)
                                                      26
     copy_backward(unsigned short *, unsigned short *, unsigned short *)
                                                      26
     operator new(unsigned int, void *)
                                                       6
     _Allocator<void>::allocate(unsigned int)
                                                      18
     _Allocator<void>::deallocate(void *)
                                                      18
     _Construct(string *, string const &)
                                                      44
     _Destroy(string *)                               18
     allocator<string>::allocator(allocator<void> const &)
                                                       2
     allocator<unsigned char>::allocator(allocator<void> const &)
                                                       2
     allocator<unsigned short>::allocator(allocator<void> const &)
                                                       2
     allocator<string>::deallocate(string *, unsigned int)
                                                      22
     allocator<unsigned short>::deallocate(unsigned short *, unsigned int)
                                                      22
     allocator<string>::allocate(unsigned int)
                                                      28
     allocator<unsigned char>::allocate(unsigned int)
                                                      20
     allocator<unsigned short>::allocate(unsigned int)
                                                      24
     allocator<string>::construct(string *, string const &)
                                                      24
     allocator<string>::destroy(string *)
                                                      20
     allocator<string>::max_size() const
                                                      20
     allocator<unsigned char>::max_size() const
                                                      20
     allocator<unsigned short>::max_size() const
                                                      20
     allocator<void>::allocator()                      2
     _Destroy_range(string *, string *, allocator<string> &)
                                                      34
     _Uninit_copy0(string const *, string const *, string *)
                                                      46
     _Uninit_copy(char const *, char const *, char *)
                                                      38
     _Uninit_copier<string, false>::_Copy(string const *, string const *, string *)
                                                      26
     _Uninit_copier<unsigned short, true>::_Copy(unsigned short const *, unsigned short const *, unsigned short *)
                                                      26
     _Uninit_copy(string const *, string const *, string *)
                                                      26
     _Uninit_copy(unsigned short const *, unsigned short const *, unsigned short *)
                                                      26
     _Uninit_copy(string const *, string const *, string *, allocator<string> &)
                                                      28
     _Uninit_copy(unsigned short const *, unsigned short const *, unsigned short *, allocator<unsigned short> &)
                                                      28
     _Uninitialized_copy(string const *, string const *, string *, allocator<string> &)
                                                      30
     _Uninitialized_copy(unsigned short const *, unsigned short const *, unsigned short *, allocator<unsigned short> &)
                                                      30
     _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
                                                      48
     _Uninitialized_fill_n(unsigned short *, unsigned int, unsigned short const &, allocator<unsigned short> &)
                                                      30
     _Vector_value<allocator<void>>::_Vector_value()
                                                      20
     _Vector_value<allocator<void>>::_Zero()
                                                      32
     _Vector_value<allocator<void>>::_Buy(unsigned int)
                                                     122
     _Vector_value<allocator<void>>::_ToBptr(void *)
                                                       2
     _Vector_value<allocator<void>>::_Bfirst() const
                                                       8
     _Vector_value<allocator<void>>::_Blast() const
                                                       8
     _Vector_value<allocator<void>>::_Bend() const
                                                       8
     _Vector_value<allocator<void>>::_Bsize() const
                                                      32
     _Vector_value<allocator<void>>::_Bcapacity() const
                                                      32
     _Vector_value<allocator<void>>::_Capacity<21U>() const
                                                      26
     _Vector_value<allocator<void>>::_Capacity<2U>() const
                                                      22
     _Vector_value<allocator<void>>::_Size<21U>() const
                                                      26
     _Vector_value<allocator<void>>::_Size<1U>() const
                                                      26
     _Vector_value<allocator<void>>::_Size<2U>() const
                                                      22
     _Vector_value<allocator<void>>::_Xlen() const
                                                       2
     _Vector_impl<string, allocator<string>>::_Vector_impl()
                                                      20
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Vector_impl()
                                                      20
     _Vector_impl<string, allocator<string>>::_Altyval() const
                                                      34
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Altyval() const
                                                      34
     _Vector_impl<string, allocator<string>>::_EraseAll()
                                                      50
     _Vector_impl<unsigned short, allocator<unsigned short>>::_EraseAll()
                                                      50
     _Vector_impl<string, allocator<string>>::_Tidy0()
                                                      88
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Tidy0()
                                                      82
     _Vector_impl<string, allocator<string>>::_Tidy()
                                                      24
     _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                                      38
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Destroy(unsigned short *, unsigned short *)
                                                       2
     _Vector_impl<string, allocator<string>>::_Assign(_Vector_impl<string, allocator<string>> const &)
                                                     398
     _Vector_impl<string, allocator<string>>::_Insert(string *, string const &)
                                                      26
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert(unsigned short *, unsigned short const &)
                                                      30
     _Vector_impl<string, allocator<string>>::_Insert_n(string *, unsigned int, string const &)
                                                      48
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n(unsigned short *, unsigned int, unsigned short const &)
                                                      38
     _Vector_impl<string, allocator<string>>::_Erase(string *)
                                                      80
     _Vector_impl<string, allocator<string>>::_Push_back(string const &)
                                                      22
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back(ITerminalCommand * const &)
                                                      26
     _Vector_impl<string, allocator<string>>::_Mytyfirst() const
                                                       8
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyfirst() const
                                                       8
     _Vector_impl<string, allocator<string>>::_Mytylast() const
                                                       8
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytylast() const
                                                       8
     _Vector_impl<string, allocator<string>>::_Mytyend() const
                                                       8
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Mytyend() const
                                                       8
     _Vector_impl<string, allocator<string>>::_Make_room(string *, unsigned int)
                                                     510
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Make_room(unsigned short *, unsigned int)
                                                     348
     _Vector_impl<string, allocator<string>>::size() const
                                                      18
     _Vector_impl<unsigned short, allocator<unsigned short>>::size() const
                                                      18
     _Vector_impl<string, allocator<string>>::capacity() const
                                                      18
     _Vector_impl<unsigned short, allocator<unsigned short>>::capacity() const
                                                      18
     _Vector_impl<string, allocator<string>>::_Insert0(string *, string const &)
                                                      76
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert0(unsigned short *, unsigned short)
                                                      82
     _Vector_impl<string, allocator<string>>::_Insert_n0(string *, unsigned int, string const &)
                                                      42
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Insert_n0(unsigned short *, unsigned int, unsigned short)
                                                      42
     _Vector_impl<string, allocator<string>>::_Push_back0(string const &)
                                                      76
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Push_back0(unsigned short)
                                                      90
     _Vector_impl<string, allocator<string>>::_Ufill(string *, unsigned int, string const &)
                                                      74
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Ufill(unsigned short *, unsigned int, unsigned short)
                                                      74
     _Vector_impl<string, allocator<string>>::_Ucopy(string const *, string const *, string *)
                                                      58
     _Vector_impl<unsigned short, allocator<unsigned short>>::_Ucopy(unsigned short const *, unsigned short const *, unsigned short *)
                                                      58
     vector<string>::vector()                         26
     vector<ITerminalCommand *>::vector()
                                                      26
     vector<string>::~vector()                        18
     vector<string>::operator=(vector<string> const &)
                                                      24
     vector<string>::begin()                           8
     vector<ITerminalCommand *>::begin()
                                                       8
     vector<string>::size() const                     18
     vector<ITerminalCommand *>::size() const
                                                      18
     vector<string>::empty() const                    28
     vector<string>::operator[](unsigned int)
                                                      38
     vector<ITerminalCommand *>::operator[](unsigned int)
                                                      28
     vector<string>::push_back(string const &)
                                                      22
     vector<ITerminalCommand *>::push_back(ITerminalCommand *)
                                                      28
     vector<string>::erase(string *)
                                                      38
     vector<string>::_P(string *)                      6
     vector<string>::_I(string *)                      6
     operator+(char const *, string const &)
                                                      48
     operator+(string const &, char const *)
                                                      48
     operator==(string const &, string const &)
                                                      32
     ITerminalCommand::operator==(string const &)
                                                      26
     ITerminalCommand::SetTerminalService(TerminalService &)
                                                       8
     errormsg                                         49
     TerminalService::TerminalService(unsigned char)
                                                      48
     TerminalService::Init()                           2
     TerminalService::Input(char)                    752
     ctrl                                              1
     listpointer                                       1
     TerminalService::isprint(char)                   18
     TerminalService::Input(string const &)
                                                     284
     TerminalService::AddCommand(ITerminalCommand &)
                                                      76
     ?<Initializer for <Constant "\n">>                2
     ?<Initializer for <Constant "\r            ">>   14
     ?<Initializer for <Constant "\r>> ">>             5
     ?<Initializer for <Constant " ">>                 2
     ?<Initializer for <Constant "\n>> ">>             5
     ?<Initializer for <Constant "tcs.size() <=defa   27
     ?<Initializer for <Constant "C:\\work\\TIEL_Fr   52
     ?<Constant "\n">                                  2
     ?<Constant "\r            ">                     14
     ?<Constant "\r>> ">                               5
     ?<Constant " ">                                   2
     ?<Constant "\n>> ">                               5
     ?<Constant "tcs.size() <=defaultP...">           27
     ?<Constant "C:\\work\\TIEL_FrameWor...">         52
     TerminalService::new TerminalService(unsigned char)
                                                      34
      Others                                          14

 
 6 942 bytes in segment CODE
    14 bytes in segment INITTAB
    49 bytes in segment NEAR_F
   107 bytes in segment NEAR_I
   107 bytes in segment NEAR_ID
     2 bytes in segment NEAR_Z
 
 1 370 bytes of CODE memory (+ 5 742 bytes shared)
   109 bytes of DATA memory

Errors: none
Warnings: 1
