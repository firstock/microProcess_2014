###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.50.0.50277/W32 for Atmel AVR    01/Dec/2013  06:59:18 #
# Copyright (C) 1996-2010 IAR Systems AB.                                     #
#                                                                             #
#    Source file  =  D:\Work\IAR\TIEF_Framework\APP\LAB10\lab10.cpp           #
#    Command line =  D:\Work\IAR\TIEF_Framework\APP\LAB10\lab10.cpp           #
#                    --cpu=m128 -ms -o D:\Work\IAR\TIEF_Framework\ATmega128_R #
#                    elease\Obj\ -D NDEBUG -D xWATCHDOG_ENABLE -lC            #
#                    D:\Work\IAR\TIEF_Framework\ATmega128_Release\List\ -y    #
#                    --initializers_in_flash -z9 --cross_call_passes=2        #
#                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e -I ./\ -I    #
#                    D:\Work\IAR\TIEF_Framework\ -I                           #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Basic_Componen #
#                    t\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/BSP/MC_E #
#                    02SMB_v1_3\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork #
#                    /Common\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Co #
#                    nfiguration\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWor #
#                    k/CPU/AVR_Driver\ -I D:\Work\IAR\TIEF_Framework/TIEL_Fra #
#                    meWork/Driver_Interface\ -I                              #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Drivers\ -I    #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Service\ -I    #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/System\ -I     #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Test\ -I       #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Utils\ -I      #
#                    D:\Work\IAR\TIEF_Framework/BUILD_COUNT\ -I "C:\Program   #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.4_0\avr\INC\" -I "C:\Program Files (x86)\IAR           #
#                    Systems\Embedded Workbench 5.4_0\avr\INC\DLIB\"          #
#                    --eeprom_size 4096 --eec++ --dlib_config "C:\Program     #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.4_0\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h"                  #
#    List file    =  D:\Work\IAR\TIEF_Framework\ATmega128_Release\List\lab10. #
#                    lst                                                      #
#    Object file  =  D:\Work\IAR\TIEF_Framework\ATmega128_Release\Obj\lab10.r #
#                    90                                                       #
#                                                                             #
#                                                                             #
###############################################################################

D:\Work\IAR\TIEF_Framework\APP\LAB10\lab10.cpp
      1          #include "lab10.h"

    CreateWatchDog();
    ^
"D:\Work\IAR\TIEF_Framework\TIEL_FrameWork\Driver_Interface\DriverFactory.h",80  Warning[Pe837]: 
          omission of explicit type is nonstandard ("int" assumed)

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void SystemManager::Exit()
   \                     ??Exit:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 Lab10App::~Lab10App()
   \                     `?~Lab10App`:
   \   00000000   ........           CALL    ?PROLOGUE3_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   2FA2               MOV     R26, R18
   \   00000008   2B01               OR      R16, R17
   \   0000000A   F051               BREQ    `?~Lab10App_1`
   \   0000000C   E020               LDI     R18, 0
   \   0000000E   E030               LDI     R19, 0
   \   00000010   2F08               MOV     R16, R24
   \   00000012   ........           CALL    `?~SystemManager`
   \   00000016   FFA0               SBRS    R26, 0
   \   00000018   C003               RJMP    `?~Lab10App_1`
   \   0000001A   018C               MOVW    R17:R16, R25:R24
   \   0000001C   ........           CALL    `??operator delete`
   \                     `?~Lab10App_1`:
   \   00000020   E0E3               LDI     R30, 3
   \   00000022   ........           JMP     ?EPILOGUE_B3_L09
      2          #include <cassert>
      3          #include <cstring>
      4          #include "BCComponentManager.h"
      5          
      6          
      7          #include "displayadc.h"
      8          
      9          
     10          class myAdcAdaptor: public AdcEvent{
     11            
     12            DisplayAdc *disadc;
     13          
     14          public:
     15            myAdcAdaptor(){}

   \                                 In  segment CODE, align 2, keep-with-next
     16            virtual ~myAdcAdaptor(){}
   \                     `?~myAdcAdaptor`:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   2B41               OR      R20, R17
   \   00000004   F021               BREQ    `?~myAdcAdaptor_1`
   \   00000006   FF20               SBRS    R18, 0
   \   00000008   C002               RJMP    `?~myAdcAdaptor_1`
   \   0000000A   ........           CALL    `??operator delete`
   \                     `?~myAdcAdaptor_1`:
   \   0000000E   9508               RET
     17          public:
     18            void SetDisplayAdc(DisplayAdc *_disadc)
     19            {
     20              assert(0 != _disadc);
     21              
     22              disadc = _disadc;
     23            }
     24          protected:  

   \                                 In  segment CODE, align 2, keep-with-next
     25            void Converted( unsigned short _valueOfAdc)
   \                     ??Converted:
     26            {
     27                if(0 != disadc){
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8102               LDD     R16, Z+2
   \   00000004   8113               LDD     R17, Z+3
   \   00000006   2F40               MOV     R20, R16
   \   00000008   2B41               OR      R20, R17
   \   0000000A   F011               BREQ    ??Converted_1
     28                  disadc->SetAdcValue(_valueOfAdc);
   \   0000000C   ........           CALL    ??SetAdcValue
     29                }
     30              
     31            }
   \                     ??Converted_1:
   \   00000010   9508               RET
     32            
     33          };
     34          
     35          class mylcdAdaptor: public IDisplay{
     36            
     37            Clcd        *lcd;
     38          public:
     39            mylcdAdaptor(){}

   \                                 In  segment CODE, align 2, keep-with-next
     40            virtual ~mylcdAdaptor(){}
   \                     `?~mylcdAdaptor`:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   2B41               OR      R20, R17
   \   00000004   F021               BREQ    `?~mylcdAdaptor_1`
   \   00000006   FF20               SBRS    R18, 0
   \   00000008   C002               RJMP    `?~mylcdAdaptor_1`
   \   0000000A   ........           CALL    `??operator delete`
   \                     `?~mylcdAdaptor_1`:
   \   0000000E   9508               RET
     41            
     42            void SetClcd(Clcd  *_lcd)
     43            {
     44              assert(0 != _lcd);
     45              lcd = _lcd;
     46            } 
     47            

   \                                 In  segment CODE, align 2, keep-with-next
     48            void OutPutVolt(float _v)
   \                     ??OutPutVolt:
     49            {
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
   \   00000004   972A               SBIW    R29:R28, 10
   \   00000006   01D8               MOVW    R27:R26, R17:R16
     50              char str[10];
     51              
     52              sprintf(str,"%4.2f     ",_v);
   \   00000008   937A               ST      -Y, R23
   \   0000000A   936A               ST      -Y, R22
   \   0000000C   935A               ST      -Y, R21
   \   0000000E   934A               ST      -Y, R20
   \   00000010   ....               LDI     R18, LOW(`?<Constant "%4.2f     ">`)
   \   00000012   ....               LDI     R19, (`?<Constant "%4.2f     ">`) >> 8
   \   00000014   018E               MOVW    R17:R16, R29:R28
   \   00000016   5F0C               SUBI    R16, 252
   \   00000018   4F1F               SBCI    R17, 255
   \   0000001A   ........           CALL    sprintf
   \   0000001E   9624               ADIW    R29:R28, 4
     53              if(0 != lcd)
   \   00000020   9612               ADIW    R27:R26, 2
   \   00000022   910D               LD      R16, X+
   \   00000024   911C               LD      R17, X
   \   00000026   2F20               MOV     R18, R16
   \   00000028   2B21               OR      R18, R17
   \   0000002A   F021               BREQ    ??OutPutVolt_1
     54              {
     55                lcd->Write(Clcd::LINE1,str);
   \   0000002C   01AE               MOVW    R21:R20, R29:R28
   \   0000002E   E820               LDI     R18, 128
   \   00000030   ........           CALL    ??Write_1
     56              }
     57            }
   \                     ??OutPutVolt_1:
   \   00000034   962A               ADIW    R29:R28, 10
   \   00000036   91A9               LD      R26, Y+
   \   00000038   91B9               LD      R27, Y+
   \   0000003A   9508               RET
     58            

   \                                 In  segment CODE, align 2, keep-with-next
     59            void OutPutBar(unsigned char _bar)
   \                     ??OutPutBar:
     60            {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   972A               SBIW    R29:R28, 10
   \   00000006   01C8               MOVW    R25:R24, R17:R16
     61              char str[10]="         ";
   \   00000008   ....               LDI     R30, LOW(`?<Constant "         ">`)
   \   0000000A   ....               LDI     R31, HIGH(`?<Constant "         ">`)
   \   0000000C   ....               LDI     R19, (`?<Constant "         ">`) >> 16
   \   0000000E   018E               MOVW    R17:R16, R29:R28
   \   00000010   E04A               LDI     R20, 10
   \   00000012   E050               LDI     R21, 0
   \   00000014   ........           CALL    ?ML_FLASH_SRAM_24EC_16_L07
     62              
     63              if(0 != lcd)
   \   00000018   01FC               MOVW    R31:R30, R25:R24
   \   0000001A   8102               LDD     R16, Z+2
   \   0000001C   8113               LDD     R17, Z+3
   \   0000001E   2B01               OR      R16, R17
   \   00000020   F081               BREQ    ??OutPutBar_1
     64              {
     65                if( 9 <= _bar){
   \   00000022   3029               CPI     R18, 9
   \   00000024   F008               BRCS    ??OutPutBar_2
     66                  _bar = 9; 
   \   00000026   E029               LDI     R18, 9
     67                }
     68                memset(str,'#',_bar);
   \                     ??OutPutBar_2:
   \   00000028   2F42               MOV     R20, R18
   \   0000002A   E223               LDI     R18, 35
   \   0000002C   E030               LDI     R19, 0
   \   0000002E   018E               MOVW    R17:R16, R29:R28
   \   00000030   ........           CALL    memset
     69          
     70                lcd->Write(Clcd::LINE2,str);
   \   00000034   01AE               MOVW    R21:R20, R29:R28
   \   00000036   EC20               LDI     R18, 192
   \   00000038   01FC               MOVW    R31:R30, R25:R24
   \   0000003A   8102               LDD     R16, Z+2
   \   0000003C   8113               LDD     R17, Z+3
   \   0000003E   ........           CALL    ??Write_1
     71              }
     72            }
   \                     ??OutPutBar_1:
   \   00000042   962A               ADIW    R29:R28, 10
   \   00000044   9189               LD      R24, Y+
   \   00000046   9199               LD      R25, Y+
   \   00000048   9508               RET
     73          };
     74          

   \                                 In  segment CODE, align 2, keep-with-next
   \   static __intrinsic __nearfunc __version_3 void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
     75          Lab10App myapp;
   \   00000004   ....               LDI     R26, LOW(myadcEvent)
   \   00000006   ....               LDI     R27, (myadcEvent) >> 8
   \   00000008   ....               LDI     R16, ((myadcEvent + 8) & 0xff) & 0xFF
   \   0000000A   ....               LDI     R17, (((myadcEvent + 8) >> 8) & 0xff) & 0xFF
   \   0000000C   ....               RCALL   ??Lab10App
   \   0000000E   ....               LDI     R16, LOW(?_0)
   \   00000010   ....               LDI     R17, (?_0) >> 8
   \   00000012   ....               RCALL   ?Subroutine0
     76          
     77          DisplayAdc    disadc;
   \                     ??CrossCallReturnLabel_0:
   \   00000014   ....               LDI     R16, ((myadcEvent + 24) & 0xff) & 0xFF
   \   00000016   ....               LDI     R17, (((myadcEvent + 24) >> 8) & 0xff) & 0xFF
   \   00000018   ........           CALL    ??DisplayAdc
   \   0000001C   ....               LDI     R16, LOW((?_0 + 6))
   \   0000001E   ....               LDI     R17, HIGH((?_0 + 6))
   \   00000020   ....               RCALL   ?Subroutine0
     78          myAdcAdaptor  myadcEvent;
   \                     ??CrossCallReturnLabel_1:
   \   00000022   ....               LDI     R16, LOW(??__vtbl)
   \   00000024   ....               LDI     R17, (??__vtbl) >> 8
   \   00000026   930D               ST      X+, R16
   \   00000028   931C               ST      X, R17
   \   0000002A   9613               ADIW    R27:R26, 3
   \   0000002C   ....               LDI     R16, LOW((?_0 + 12))
   \   0000002E   ....               LDI     R17, HIGH((?_0 + 12))
   \   00000030   ....               RCALL   ?Subroutine0
     79          mylcdAdaptor   mylcdadp;
   \                     ??CrossCallReturnLabel_2:
   \   00000032   ....               LDI     R16, LOW((??__vtbl + 4))
   \   00000034   ....               LDI     R17, HIGH((??__vtbl + 4))
   \   00000036   930D               ST      X+, R16
   \   00000038   931C               ST      X, R17
   \   0000003A   ....               LDI     R16, LOW((?_0 + 18))
   \   0000003C   ....               LDI     R17, HIGH((?_0 + 18))
   \   0000003E   ....               RCALL   ?Subroutine0
   \                     ??CrossCallReturnLabel_3:
   \   00000040                      REQUIRE ?Subroutine3
   \   00000040                      ;               // Fall through to label ?Subroutine3

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 0>`:
   \   00000000   E022               LDI     R18, 2
   \   00000002   E030               LDI     R19, 0
   \   00000004   ........           JMP     `?~Lab10App`

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 1>`:
   \   00000000   E022               LDI     R18, 2
   \   00000002   E030               LDI     R19, 0
   \   00000004   ........           JMP     `?~DisplayAdc`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     ?_0:
   \   00000000                      DS8 6
   \   00000006                      REQUIRE `?<Initializer for >`
   \   00000006                      DS8 6
   \   0000000C                      REQUIRE `?<Initializer for >_1`
   \   0000000C                      DS8 6
   \   00000012                      REQUIRE `?<Initializer for >_2`
   \   00000012                      DS8 6
   \   00000018                      REQUIRE `?<Initializer for >_3`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     myadcEvent:
   \   00000000                      DS8 4
   \                     mylcdadp:
   \   00000004                      DS8 4
   \                     myapp:
   \   00000008                      DS8 16
   \                     disadc:
   \   00000018                      DS8 4
     80          

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine3:
   \   00000000   91A9               LD      R26, Y+
   \   00000002   91B9               LD      R27, Y+
   \   00000004   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
     81          Lab10App::Lab10App()
   \                     ??Lab10App:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
   \   00000004   01D8               MOVW    R27:R26, R17:R16
     82          {
   \   00000006   ........           CALL    ??SystemManager
   \   0000000A   ....               LDI     R16, LOW(??__vtbl_2)
   \   0000000C   ....               LDI     R17, (??__vtbl_2) >> 8
   \   0000000E   9612               ADIW    R27:R26, 2
   \   00000010   930D               ST      X+, R16
   \   00000012   931C               ST      X, R17
   \   00000014   9713               SBIW    R27:R26, 3
     83            
     84          }
   \   00000016   018D               MOVW    R17:R16, R27:R26
   \   00000018   ....               RJMP    ?Subroutine3
     85             
     86          #define LED_GREEN8B BCComponentManager::LED0
     87          

   \                                 In  segment CODE, align 2, keep-with-next
     88          void Lab10App::Init(void)
   \                     ??Init:
     89          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
     90            driver = GetDriverFactory();
   \   00000006   ........           CALL    ??GetDriverFactory
   \   0000000A   01FC               MOVW    R31:R30, R25:R24
   \   0000000C   8306               STD     Z+6, R16
   \   0000000E   8317               STD     Z+7, R17
     91            tm = GetBCComponentManager()->CreateTimer();
   \   00000010   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_10:
   \   00000012   ........           CALL    ??CreateTimer
   \   00000016   01FC               MOVW    R31:R30, R25:R24
   \   00000018   8304               STD     Z+4, R16
   \   0000001A   8315               STD     Z+5, R17
     92            greenLed  = GetBCComponentManager()->CreateLed(LED_GREEN8B);
   \   0000001C   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_9:
   \   0000001E   E020               LDI     R18, 0
   \   00000020   ........           CALL    ??CreateLed
   \   00000024   01FC               MOVW    R31:R30, R25:R24
   \   00000026   8704               STD     Z+12, R16
   \   00000028   8715               STD     Z+13, R17
     93            serial = GetBCComponentManager()->CreateSerialIO();
   \   0000002A   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_8:
   \   0000002C   E020               LDI     R18, 0
   \   0000002E   ........           CALL    ??CreateSerialIO
   \   00000032   01FC               MOVW    R31:R30, R25:R24
   \   00000034   8700               STD     Z+8, R16
   \   00000036   8711               STD     Z+9, R17
     94            adc = GetBCComponentManager()->CreateAdc();
   \   00000038   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_7:
   \   0000003A   ........           CALL    ??CreateAdc
   \   0000003E   01FC               MOVW    R31:R30, R25:R24
   \   00000040   8706               STD     Z+14, R16
   \   00000042   8717               STD     Z+15, R17
     95            lcd = driver->CreateClcd();
   \   00000044   01DC               MOVW    R27:R26, R25:R24
   \   00000046   9616               ADIW    R27:R26, 6
   \   00000048   91ED               LD      R30, X+
   \   0000004A   91FC               LD      R31, X
   \   0000004C   018F               MOVW    R17:R16, R31:R30
   \   0000004E   8120               LD      R18, Z
   \   00000050   81F1               LDD     R31, Z+1
   \   00000052   2FE2               MOV     R30, R18
   \   00000054   963C               ADIW    R31:R30, 12
   \   00000056   9125               LPM     R18, Z+
   \   00000058   91F4               LPM     R31, Z
   \   0000005A   2FE2               MOV     R30, R18
   \   0000005C   9509               ICALL
   \   0000005E   01FC               MOVW    R31:R30, R25:R24
   \   00000060   8702               STD     Z+10, R16
   \   00000062   8713               STD     Z+11, R17
     96            
     97          ///////////////////////////////////////////////////////////////////////////////   
     98          
     99            mylcdadp.SetClcd(lcd);
   \   00000064   ....               LDI     R30, LOW(myadcEvent)
   \   00000066   ....               LDI     R31, (myadcEvent) >> 8
   \   00000068   8306               STD     Z+6, R16
   \   0000006A   8317               STD     Z+7, R17
    100            myadcEvent.SetDisplayAdc(&disadc);
   \   0000006C   ....               LDI     R16, ((myadcEvent + 24) & 0xff) & 0xFF
   \   0000006E   ....               LDI     R17, (((myadcEvent + 24) >> 8) & 0xff) & 0xFF
   \   00000070   8302               STD     Z+2, R16
   \   00000072   8313               STD     Z+3, R17
    101            disadc.SetIDisplay(&mylcdadp);
   \   00000074   ....               LDI     R18, ((myadcEvent + 4) & 0xff) & 0xFF
   \   00000076   ....               LDI     R19, (((myadcEvent + 4) >> 8) & 0xff) & 0xFF
   \   00000078   ........           CALL    ??SetIDisplay
    102            
    103            adc->SetFrequency(100);// 100Hz
   \   0000007C   E624               LDI     R18, 100
   \   0000007E   ....               RCALL   ?Subroutine1
   \                     ??CrossCallReturnLabel_4:
   \   00000080   ........           CALL    ??SetFrequency
    104            adc->Addevent(&myadcEvent);
   \   00000084   ....               LDI     R18, LOW(myadcEvent)
   \   00000086   ....               LDI     R19, (myadcEvent) >> 8
   \   00000088   ....               RCALL   ?Subroutine1
   \                     ??CrossCallReturnLabel_5:
   \   0000008A   ........           CALL    ??Addevent
    105            adc->Run();
   \   0000008E   ....               RCALL   ?Subroutine1
   \                     ??CrossCallReturnLabel_6:
   \   00000090   ........           CALL    ??Run
    106            
    107            
    108            
    109            serial->Write(gnu_lic);
   \   00000094   ....               LDI     R18, LOW(gnu_lic)
   \   00000096   ....               LDI     R19, (gnu_lic) >> 8
   \   00000098   01FC               MOVW    R31:R30, R25:R24
   \   0000009A   8500               LDD     R16, Z+8
   \   0000009C   8511               LDD     R17, Z+9
   \   0000009E   ........           CALL    ??Write
    110          
    111          }
   \   000000A2   E0E4               LDI     R30, 4
   \   000000A4   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   ........           JMP     ??GetBCComponentManager

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   01FC               MOVW    R31:R30, R25:R24
   \   00000002   8506               LDD     R16, Z+14
   \   00000004   8517               LDD     R17, Z+15
   \   00000006   9508               RET

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "%4.2f     ">>`:
   \   00000000   3425322E2066       DC8 "%4.2f     "
   \              2020202000  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for >`:
   \   00000000   ............       DC16 ?_1, myapp, `?<Unnamed 0>`/2
   \                     `?<Initializer for >_1`:
   \   00000006   ............       DC16 ?_3, disadc, `?<Unnamed 1>`/2
   \                     `?<Initializer for >_2`:
   \   0000000C   ............       DC16 ?_5, myadcEvent, `?<Unnamed 2>`/2
   \                     `?<Initializer for >_3`:
   \   00000012   ............       DC16 ?_7, mylcdadp, `?<Unnamed 3>`/2

   \                                 In  segment DIFUNCT, align 1, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ....               DW      ??__sti__routine/2

   \                                 In  segment FAR_F, align 1, keep-with-next
   \                     `?<Constant "         ">`:
   \   00000000   202020202020       DC8 "         "
   \              20200020    

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "%4.2f     ">`:
   \   00000000                      DS8 11
   \   0000000B                      REQUIRE `?<Initializer for <Constant "%4.2f     ">>`

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 Lab10App *Lab10App::new Lab10App()
   \                     `??new Lab10App`:
   \   00000000   E100               LDI     R16, 16
   \   00000002   E010               LDI     R17, 0
   \   00000004   ........           CALL    `??operator new`
   \   00000008   2F20               MOV     R18, R16
   \   0000000A   2B21               OR      R18, R17
   \   0000000C   F009               BREQ    `??new Lab10App_1`
   \   0000000E   ....               RJMP    ??Lab10App
   \                     `??new Lab10App_1`:
   \   00000010   E000               LDI     R16, 0
   \   00000012   E010               LDI     R17, 0
   \   00000014   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   ........           JMP     __record_needed_destruction

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 2>`:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 3>`:
   \   00000000   9508               RET

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \   __vtbl_entry const __flash myAdcAdaptor::__vtbl[2]
   \                     ??__vtbl:
   \   00000000   ........           DC16 `?~myAdcAdaptor`/2, ??Converted/2
   \   00000004   ............       DC16 `?~mylcdAdaptor`/2, ??OutPutVolt/2, ??OutPutBar/2
    112           

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     <Unnamed 0>                        0      2
       -> Lab10App::~Lab10App()         0      2
     <Unnamed 1>                        0      2
       -> DisplayAdc::~DisplayAdc()     0      2
     <Unnamed 2>                        0      2
     <Unnamed 3>                        0      2
     Lab10App::Init()                   4      2
       -> GetDriverFactory()            4      2
       -> GetBCComponentManager()       4      2
       -> BCComponentManager::CreateTimer()
                                        4      2
       -> GetBCComponentManager()       4      2
       -> BCComponentManager::CreateLed(BCComponentManager::LED)
                                        4      2
       -> GetBCComponentManager()       4      2
       -> BCComponentManager::CreateSerialIO(unsigned char)
                                        4      2
       -> GetBCComponentManager()       4      2
       -> BCComponentManager::CreateAdc()
                                        4      2
       ->   Indirect call               4      2
       -> DisplayAdc::SetIDisplay(IDisplay *)
                                        4      2
       -> Adc::SetFrequency(unsigned char)
                                        4      2
       -> Adc::Addevent(AdcEvent *)     4      2
       -> Adc::Run()                    4      2
       -> SerialIO::Write(char __flash *)
                                        4      2
     Lab10App::Lab10App()               2      2
       -> SystemManager::SystemManager()
                                        2      2
     Lab10App::new Lab10App()           0      2
       -> operator new(size_t)          0      2
       -> Lab10App::Lab10App()          0      2
     Lab10App::~Lab10App()              4      2
       -> SystemManager::~SystemManager()
                                        4      2
       -> operator delete(void *)       4      2
     SystemManager::Exit()              0      2
     __sti__routine()                   2      2
       -> Lab10App::Lab10App()          2      2
       -> __record_needed_destruction
                                        2      2
       -> DisplayAdc::DisplayAdc()      2      2
       -> __record_needed_destruction
                                        2      2
       -> __record_needed_destruction
                                        2      2
       -> __record_needed_destruction
                                        2      2
     myAdcAdaptor::Converted(unsigned short)
                                        0      2
       -> DisplayAdc::SetAdcValue(unsigned short)
                                        0      2
     myAdcAdaptor::~myAdcAdaptor()      0      2
       -> operator delete(void *)       0      2
     mylcdAdaptor::OutPutBar(unsigned char)
                                       12      4
       -> memset                       12      2
       -> Clcd::Write(unsigned char, char *)
                                       12      2
     mylcdAdaptor::OutPutVolt(float)
                                       16      2
       -> sprintf                      16      2
       -> Clcd::Write(unsigned char, char *)
                                       12      2
     mylcdAdaptor::~mylcdAdaptor()      0      2
       -> operator delete(void *)       0      2


   Segment part sizes:

     Function/Label                             Bytes
     --------------                             -----
     SystemManager::Exit()                         2
     Lab10App::~Lab10App()                        38
     myAdcAdaptor::~myAdcAdaptor()                16
     myAdcAdaptor::Converted(unsigned short)
                                                  18
     mylcdAdaptor::~mylcdAdaptor()                16
     mylcdAdaptor::OutPutVolt(float)
                                                  60
     mylcdAdaptor::OutPutBar(unsigned char)
                                                  74
     __sti__routine()                             64
     ?<Unnamed 0>                                  8
     ?<Unnamed 1>                                  8
     ?_0                                          24
     myadcEvent                                   28
     mylcdadp
     myapp
     disadc
     ?Subroutine3                                  6
     Lab10App::Lab10App()                         26
     Lab10App::Init()                            168
     ?Subroutine2                                  4
     ?Subroutine1                                  8
     ?<Initializer for <Constant "%4.2f     ">>   11
     ?<Initializer for >                          24
     ?<Constant "         ">                      10
     ?<Constant "%4.2f     ">                     11
     Lab10App::new Lab10App()                     22
     ?Subroutine0                                  4
     ?<Unnamed 2>                                  2
     ?<Unnamed 3>                                  2
     myAdcAdaptor::__vtbl                         10
     mylcdAdaptor::__vtbl
      Others                                      30

 
 546 bytes in segment CODE
   2 bytes in segment DIFUNCT
  10 bytes in segment FAR_F
  14 bytes in segment INITTAB
  16 bytes in segment NEAR_F
  35 bytes in segment NEAR_I
  35 bytes in segment NEAR_ID
  36 bytes in segment NEAR_Z
 
 379 bytes of CODE memory (+ 244 bytes shared)
  71 bytes of DATA memory

Errors: none
Warnings: 1
