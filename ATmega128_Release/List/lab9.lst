###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.50.0.50277/W32 for Atmel AVR    01/Dec/2013  06:57:30 #
# Copyright (C) 1996-2010 IAR Systems AB.                                     #
#                                                                             #
#    Source file  =  D:\Work\IAR\TIEF_Framework\APP\LAB9\lab9.cpp             #
#    Command line =  D:\Work\IAR\TIEF_Framework\APP\LAB9\lab9.cpp --cpu=m128  #
#                    -ms -o D:\Work\IAR\TIEF_Framework\ATmega128_Release\Obj\ #
#                     -D NDEBUG -D xWATCHDOG_ENABLE -lC                       #
#                    D:\Work\IAR\TIEF_Framework\ATmega128_Release\List\ -y    #
#                    --initializers_in_flash -z9 --cross_call_passes=2        #
#                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e -I ./\ -I    #
#                    D:\Work\IAR\TIEF_Framework\ -I                           #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Basic_Componen #
#                    t\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/BSP/MC_E #
#                    02SMB_v1_3\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork #
#                    /Common\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Co #
#                    nfiguration\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWor #
#                    k/CPU/AVR_Driver\ -I D:\Work\IAR\TIEF_Framework/TIEL_Fra #
#                    meWork/Driver_Interface\ -I                              #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Drivers\ -I    #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Service\ -I    #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/System\ -I     #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Test\ -I       #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Utils\ -I      #
#                    D:\Work\IAR\TIEF_Framework/BUILD_COUNT\ -I "C:\Program   #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.4_0\avr\INC\" -I "C:\Program Files (x86)\IAR           #
#                    Systems\Embedded Workbench 5.4_0\avr\INC\DLIB\"          #
#                    --eeprom_size 4096 --eec++ --dlib_config "C:\Program     #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.4_0\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h"                  #
#    List file    =  D:\Work\IAR\TIEF_Framework\ATmega128_Release\List\lab9.l #
#                    st                                                       #
#    Object file  =  D:\Work\IAR\TIEF_Framework\ATmega128_Release\Obj\lab9.r9 #
#                    0                                                        #
#                                                                             #
#                                                                             #
###############################################################################

D:\Work\IAR\TIEF_Framework\APP\LAB9\lab9.cpp
      1          #include "lab9.h"

    CreateWatchDog();
    ^
"D:\Work\IAR\TIEF_Framework\TIEL_FrameWork\Driver_Interface\DriverFactory.h",80  Warning[Pe837]: 
          omission of explicit type is nonstandard ("int" assumed)

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void SystemManager::Exit()
   \                     ??Exit:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 Lab9App::~Lab9App()
   \                     `?~Lab9App`:
   \   00000000   ........           CALL    ?PROLOGUE3_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   2FA2               MOV     R26, R18
   \   00000008   2B01               OR      R16, R17
   \   0000000A   F051               BREQ    `?~Lab9App_1`
   \   0000000C   E020               LDI     R18, 0
   \   0000000E   E030               LDI     R19, 0
   \   00000010   2F08               MOV     R16, R24
   \   00000012   ........           CALL    `?~SystemManager`
   \   00000016   FFA0               SBRS    R26, 0
   \   00000018   C003               RJMP    `?~Lab9App_1`
   \   0000001A   018C               MOVW    R17:R16, R25:R24
   \   0000001C   ........           CALL    `??operator delete`
   \                     `?~Lab9App_1`:
   \   00000020   E0E3               LDI     R30, 3
   \   00000022   ........           JMP     ?EPILOGUE_B3_L09
      2          #include <cassert>
      3          #include "BCComponentManager.h"
      4          
      5          
      6          #include "stringprocessing.h"
      7          

   \                                 In  segment CODE, align 2, keep-with-next
      8          class myTimerAdaptor : public ITimerEvent
   \   __nearfunc __version_3 myTimerAdaptor::~myTimerAdaptor()
   \                     `?~myTimerAdaptor`:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   2B41               OR      R20, R17
   \   00000004   F021               BREQ    `?~myTimerAdaptor_1`
   \   00000006   FF20               SBRS    R18, 0
   \   00000008   C002               RJMP    `?~myTimerAdaptor_1`
   \   0000000A   ........           CALL    `??operator delete`
   \                     `?~myTimerAdaptor_1`:
   \   0000000E   9508               RET
      9          {
     10            StringProcess *sp;
     11          public:
     12            myTimerAdaptor(void)
     13              :ITimerEvent(REPEAT,500)
     14            {
     15              
     16            }
     17            
     18            void SetStringProcess(StringProcess *_sp)
     19            {
     20              assert(0 != _sp);
     21              
     22              sp = _sp;
     23            }
     24            
     25          protected:  

   \                                 In  segment CODE, align 2, keep-with-next
     26            void  TimeOutEvent(void)
   \                     ??TimeOutEvent:
     27            {
     28              if(0 != sp){
   \   00000000   01F8               MOVW    R31:R30, R17:R16
   \   00000002   8500               LDD     R16, Z+8
   \   00000004   8511               LDD     R17, Z+9
   \   00000006   2F20               MOV     R18, R16
   \   00000008   2B21               OR      R18, R17
   \   0000000A   F011               BREQ    ??TimeOutEvent_1
     29                  sp->tm500ms();
   \   0000000C   ........           CALL    ??tm500ms
     30              }
     31            }
   \                     ??TimeOutEvent_1:
   \   00000010   9508               RET
     32            
     33          };
     34          
     35          

   \                                 In  segment CODE, align 2, keep-with-next
     36          class mySerialAdaptor : public SerialEvent
   \   __nearfunc __version_3 mySerialAdaptor::~mySerialAdaptor()
   \                     `?~mySerialAdaptor`:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   2B41               OR      R20, R17
   \   00000004   F021               BREQ    `?~mySerialAdaptor_1`
   \   00000006   FF20               SBRS    R18, 0
   \   00000008   C002               RJMP    `?~mySerialAdaptor_1`
   \   0000000A   ........           CALL    `??operator delete`
   \                     `?~mySerialAdaptor_1`:
   \   0000000E   9508               RET
     37          {
     38            StringProcess *sp;
     39          public:
     40            void SetStringProcess(StringProcess *_sp)
     41            {
     42              assert(0 != _sp);
     43              
     44              sp = _sp;
     45            }
     46            
     47          protected:  

   \                                 In  segment CODE, align 2, keep-with-next
     48            void Receive( unsigned char _data ){
   \                     ??Receive:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   2F82               MOV     R24, R18
     49              
     50              if(0 != sp){
   \   00000008   9614               ADIW    R27:R26, 4
   \   0000000A   910D               LD      R16, X+
   \   0000000C   911C               LD      R17, X
   \   0000000E   9715               SBIW    R27:R26, 5
   \   00000010   2F20               MOV     R18, R16
   \   00000012   2B21               OR      R18, R17
   \   00000014   F019               BREQ    ??Receive_1
     51                  sp->InputCh(_data);    
   \   00000016   2F28               MOV     R18, R24
   \   00000018   ........           CALL    ??InputCh
     52              }
     53          
     54              sio->Write(_data); //echo back
   \                     ??Receive_1:
   \   0000001C   2F28               MOV     R18, R24
   \   0000001E   910D               LD      R16, X+
   \   00000020   911C               LD      R17, X
   \   00000022   9711               SBIW    R27:R26, 1
   \   00000024   ........           CALL    ??Write_2
     55              
     56              if('\r' == _data) // '\r' is 0x0d;
   \   00000028   308D               CPI     R24, 13
   \   0000002A   F431               BRNE    ??Receive_2
     57              {
     58                sio->Write("\n");
   \   0000002C   ....               LDI     R18, LOW(`?<Constant "\\n">`)
   \   0000002E   ....               LDI     R19, (`?<Constant "\\n">`) >> 8
   \   00000030   910D               LD      R16, X+
   \   00000032   911C               LD      R17, X
   \   00000034   ........           CALL    ??Write_1
     59              }
     60              
     61            }; 
   \                     ??Receive_2:
   \   00000038   E0E4               LDI     R30, 4
   \   0000003A   ........           JMP     ?EPILOGUE_B4_L09
     62            
     63          };
     64          
     65          class LcdAdaptor: public IStringOutPut
     66          {
     67            Clcd * lcd;
     68          public:
     69            LcdAdaptor()
     70            {
     71              lcd = 0;
     72            }

   \                                 In  segment CODE, align 2, keep-with-next
     73            virtual ~LcdAdaptor(){};
   \                     `?~LcdAdaptor`:
   \   00000000   2F40               MOV     R20, R16
   \   00000002   2B41               OR      R20, R17
   \   00000004   F021               BREQ    `?~LcdAdaptor_1`
   \   00000006   FF20               SBRS    R18, 0
   \   00000008   C002               RJMP    `?~LcdAdaptor_1`
   \   0000000A   ........           CALL    `??operator delete`
   \                     `?~LcdAdaptor_1`:
   \   0000000E   9508               RET
     74            
     75            void SetCLCD(Clcd * _lcd)
     76            {
     77              assert(0 != _lcd);
     78              
     79              lcd = _lcd;    
     80            }
     81            

   \                                 In  segment CODE, align 2, keep-with-next
     82            void Display(char *_str)
   \                     ??Display:
     83            {
     84              assert(0 != _str);
     85              assert(0 != lcd);
     86              
     87              lcd->Write(Clcd::LINE2,_str);
   \   00000000   01A9               MOVW    R21:R20, R19:R18
   \   00000002   EC20               LDI     R18, 192
   \   00000004   01F8               MOVW    R31:R30, R17:R16
   \   00000006   8102               LDD     R16, Z+2
   \   00000008   8113               LDD     R17, Z+3
   \   0000000A   ........           JMP     ??Write_3
     88            }
     89          };
     90          

   \                                 In  segment CODE, align 2, keep-with-next
   \   static __intrinsic __nearfunc __version_3 void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
     91          Lab9App myapp;
   \   00000004   ....               LDI     R26, LOW((mytimer + 1))
   \   00000006   ....               LDI     R27, HIGH((mytimer + 1))
   \   00000008   ....               LDI     R16, ((mytimer + 20) & 0xff) & 0xFF
   \   0000000A   ....               LDI     R17, (((mytimer + 20) >> 8) & 0xff) & 0xFF
   \   0000000C   ....               RCALL   ??Lab9App
   \   0000000E   ....               LDI     R16, LOW(?_0)
   \   00000010   ....               LDI     R17, (?_0) >> 8
   \   00000012   ....               RCALL   ?Subroutine0
     92          
     93          StringProcess sp;
   \                     ??CrossCallReturnLabel_0:
   \   00000014   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_8:
   \   00000016   ........           CALL    ??StringProcess
   \   0000001A   ....               LDI     R16, LOW((?_0 + 6))
   \   0000001C   ....               LDI     R17, HIGH((?_0 + 6))
   \   0000001E   ....               RCALL   ?Subroutine0
     94          myTimerAdaptor mytimer;
   \                     ??CrossCallReturnLabel_1:
   \   00000020   E000               LDI     R16, 0
   \   00000022   9300....           STS     mytimer, R16
   \   00000026   EF04               LDI     R16, 244
   \   00000028   E011               LDI     R17, 1
   \   0000002A   ....               RCALL   ?Subroutine3
   \                     ??CrossCallReturnLabel_12:
   \   0000002C   9614               ADIW    R27:R26, 4
   \   0000002E   E000               LDI     R16, 0
   \   00000030   9300....           STS     (mytimer + 5), R16
   \   00000034   ....               LDI     R16, LOW(??__vtbl)
   \   00000036   ....               LDI     R17, (??__vtbl) >> 8
   \   00000038   ....               RCALL   ?Subroutine3
   \                     ??CrossCallReturnLabel_13:
   \   0000003A   9615               ADIW    R27:R26, 5
   \   0000003C   ....               LDI     R16, LOW((?_0 + 12))
   \   0000003E   ....               LDI     R17, HIGH((?_0 + 12))
   \   00000040   ....               RCALL   ?Subroutine0
     95          mySerialAdaptor mySerial;
   \                     ??CrossCallReturnLabel_2:
   \   00000042   ....               LDI     R16, LOW((??__vtbl + 4))
   \   00000044   ....               LDI     R17, HIGH((??__vtbl + 4))
   \   00000046   ....               RCALL   ?Subroutine3
   \                     ??CrossCallReturnLabel_14:
   \   00000048   9613               ADIW    R27:R26, 3
   \   0000004A   ....               LDI     R16, LOW((?_0 + 18))
   \   0000004C   ....               LDI     R17, HIGH((?_0 + 18))
   \   0000004E   ....               RCALL   ?Subroutine0
     96          LcdAdaptor myOutPut;
   \                     ??CrossCallReturnLabel_3:
   \   00000050   ....               LDI     R16, LOW((??__vtbl + 8))
   \   00000052   ....               LDI     R17, HIGH((??__vtbl + 8))
   \   00000054   930D               ST      X+, R16
   \   00000056   931D               ST      X+, R17
   \   00000058   E000               LDI     R16, 0
   \   0000005A   930D               ST      X+, R16
   \   0000005C   930C               ST      X, R16
   \   0000005E   ....               LDI     R16, LOW((?_0 + 24))
   \   00000060   ....               LDI     R17, HIGH((?_0 + 24))
   \   00000062   ....               RCALL   ?Subroutine0
   \                     ??CrossCallReturnLabel_4:
   \   00000064                      REQUIRE ?Subroutine4
   \   00000064                      ;               // Fall through to label ?Subroutine4

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 0>`:
   \   00000000   E022               LDI     R18, 2
   \   00000002   E030               LDI     R19, 0
   \   00000004   ........           JMP     `?~Lab9App`

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 1>`:
   \   00000000   E022               LDI     R18, 2
   \   00000002   E030               LDI     R19, 0
   \   00000004   ........           JMP     `?~StringProcess`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     ?_0:
   \   00000000                      DS8 6
   \   00000006                      REQUIRE `?<Initializer for >`
   \   00000006                      DS8 6
   \   0000000C                      REQUIRE `?<Initializer for >_1`
   \   0000000C                      DS8 6
   \   00000012                      REQUIRE `?<Initializer for >_2`
   \   00000012                      DS8 6
   \   00000018                      REQUIRE `?<Initializer for >_3`
   \   00000018                      DS8 6
   \   0000001E                      REQUIRE `?<Initializer for >_4`

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     mytimer:
   \   00000000                      DS8 10
   \                     mySerial:
   \   0000000A                      DS8 6
   \                     myOutPut:
   \   00000010                      DS8 4
   \                     myapp:
   \   00000014                      DS8 14

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     sp:
   \   00000000                      DS8 46
     97          

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine4:
   \   00000000   91A9               LD      R26, Y+
   \   00000002   91B9               LD      R27, Y+
   \   00000004   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
     98          Lab9App::Lab9App()
   \                     ??Lab9App:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
   \   00000004   01D8               MOVW    R27:R26, R17:R16
     99          {
   \   00000006   ........           CALL    ??SystemManager
   \   0000000A   ....               LDI     R16, LOW(??__vtbl_3)
   \   0000000C   ....               LDI     R17, (??__vtbl_3) >> 8
   \   0000000E   9612               ADIW    R27:R26, 2
   \   00000010   ....               RCALL   ?Subroutine3
   \                     ??CrossCallReturnLabel_15:
   \   00000012   9713               SBIW    R27:R26, 3
    100            
    101          }
   \   00000014   018D               MOVW    R17:R16, R27:R26
   \   00000016   ....               RJMP    ?Subroutine4

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine3:
   \   00000000   930D               ST      X+, R16
   \   00000002   931C               ST      X, R17
   \   00000004   9508               RET
    102             
    103          #define LED_GREED BCComponentManager::LED0
    104          

   \                                 In  segment CODE, align 2, keep-with-next
    105          void Lab9App::Init(void)
   \                     ??Init:
    106          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
    107            driver = GetDriverFactory();
   \   00000006   ........           CALL    ??GetDriverFactory
   \   0000000A   01FC               MOVW    R31:R30, R25:R24
   \   0000000C   8306               STD     Z+6, R16
   \   0000000E   8317               STD     Z+7, R17
    108            tm = GetBCComponentManager()->CreateTimer();
   \   00000010   ........           CALL    ??GetBCComponentManager
   \   00000014   ........           CALL    ??CreateTimer
   \   00000018   01FC               MOVW    R31:R30, R25:R24
   \   0000001A   8304               STD     Z+4, R16
   \   0000001C   8315               STD     Z+5, R17
    109            serial = GetBCComponentManager()->CreateSerialIO();
   \   0000001E   ........           CALL    ??GetBCComponentManager
   \   00000022   E020               LDI     R18, 0
   \   00000024   ........           CALL    ??CreateSerialIO
   \   00000028   01FC               MOVW    R31:R30, R25:R24
   \   0000002A   8700               STD     Z+8, R16
   \   0000002C   8711               STD     Z+9, R17
    110            lcd = driver->CreateClcd();
   \   0000002E   01DC               MOVW    R27:R26, R25:R24
   \   00000030   9616               ADIW    R27:R26, 6
   \   00000032   91ED               LD      R30, X+
   \   00000034   91FC               LD      R31, X
   \   00000036   018F               MOVW    R17:R16, R31:R30
   \   00000038   8120               LD      R18, Z
   \   0000003A   81F1               LDD     R31, Z+1
   \   0000003C   2FE2               MOV     R30, R18
   \   0000003E   963C               ADIW    R31:R30, 12
   \   00000040   9125               LPM     R18, Z+
   \   00000042   91F4               LPM     R31, Z
   \   00000044   2FE2               MOV     R30, R18
   \   00000046   9509               ICALL
   \   00000048   01FC               MOVW    R31:R30, R25:R24
   \   0000004A   8702               STD     Z+10, R16
   \   0000004C   8713               STD     Z+11, R17
    111          
    112          ///////////////////////////////////////////////////////////////////////////////   
    113          
    114            mytimer.SetStringProcess(&sp);
   \   0000004E   ....               LDI     R26, LOW(mytimer)
   \   00000050   ....               LDI     R27, (mytimer) >> 8
   \   00000052   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_9:
   \   00000054   01FD               MOVW    R31:R30, R27:R26
   \   00000056   8700               STD     Z+8, R16
   \   00000058   8711               STD     Z+9, R17
    115            tm->AddEvent(&mytimer);
   \   0000005A   019D               MOVW    R19:R18, R27:R26
   \   0000005C   01FC               MOVW    R31:R30, R25:R24
   \   0000005E   8104               LDD     R16, Z+4
   \   00000060   8115               LDD     R17, Z+5
   \   00000062   ........           CALL    ??AddEvent
    116            mytimer.Resume();
   \   00000066   E001               LDI     R16, 1
   \   00000068   9300....           STS     (mytimer + 5), R16
    117            
    118            mySerial.SetStringProcess(&sp);
   \   0000006C   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_10:
   \   0000006E   01FD               MOVW    R31:R30, R27:R26
   \   00000070   8706               STD     Z+14, R16
   \   00000072   8717               STD     Z+15, R17
    119            serial->SetEvent(mySerial);
   \   00000074   ....               LDI     R18, ((mytimer + 10) & 0xff) & 0xFF
   \   00000076   ....               LDI     R19, (((mytimer + 10) >> 8) & 0xff) & 0xFF
   \   00000078   ....               RCALL   ?Subroutine1
   \                     ??CrossCallReturnLabel_5:
   \   0000007A   ........           CALL    ??SetEvent
    120            
    121            myOutPut.SetCLCD(lcd);
   \   0000007E   01FC               MOVW    R31:R30, R25:R24
   \   00000080   8502               LDD     R16, Z+10
   \   00000082   8513               LDD     R17, Z+11
   \   00000084   01FD               MOVW    R31:R30, R27:R26
   \   00000086   8B02               STD     Z+18, R16
   \   00000088   8B13               STD     Z+19, R17
    122            sp.SetIStringOutPut(&myOutPut);
   \   0000008A   9650               ADIW    R27:R26, 16
   \   0000008C   019D               MOVW    R19:R18, R27:R26
   \   0000008E   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_11:
   \   00000090   ........           CALL    ??SetIStringOutPut
    123            
    124            
    125            serial->Write(gnu_lic);
   \   00000094   ....               LDI     R18, LOW(gnu_lic)
   \   00000096   ....               LDI     R19, (gnu_lic) >> 8
   \   00000098   ....               RCALL   ?Subroutine1
   \                     ??CrossCallReturnLabel_6:
   \   0000009A   ........           CALL    ??Write
    126            serial->Write("\nEnter a message: ");
   \   0000009E   ....               LDI     R18, LOW(`?<Constant "\\nEnter a message: ">`)
   \   000000A0   ....               LDI     R19, (`?<Constant "\\nEnter a message: ">`) >> 8
   \   000000A2   ....               RCALL   ?Subroutine1
   \                     ??CrossCallReturnLabel_7:
   \   000000A4   ........           CALL    ??Write_1
    127          }
   \   000000A8   E0E4               LDI     R30, 4
   \   000000AA   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   ....               LDI     R16, LOW(sp)
   \   00000002   ....               LDI     R17, (sp) >> 8
   \   00000004   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   01FC               MOVW    R31:R30, R25:R24
   \   00000002   8500               LDD     R16, Z+8
   \   00000004   8511               LDD     R17, Z+9
   \   00000006   9508               RET

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\nEnter a message`:
   \   00000000   450A746E7265       DC8 "\012Enter a message: "
   \              61206D207365
   \              61736567203A
   \              00          

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\n">>`:
   \   00000000   000A               DC8 "\012"

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for >`:
   \   00000000   ............       DC16 ?_1, myapp, `?<Unnamed 0>`/2
   \                     `?<Initializer for >_1`:
   \   00000006   ............       DC16 ?_3, sp, `?<Unnamed 1>`/2
   \                     `?<Initializer for >_2`:
   \   0000000C   ............       DC16 ?_5, mytimer, `?<Unnamed 2>`/2
   \                     `?<Initializer for >_3`:
   \   00000012   ............       DC16 ?_7, mySerial, `?<Unnamed 3>`/2
   \                     `?<Initializer for >_4`:
   \   00000018   ............       DC16 ?_9, myOutPut, `?<Unnamed 4>`/2

   \                                 In  segment DIFUNCT, align 1, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ....               DW      ??__sti__routine/2

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\nEnter a message: ">`:
   \   00000000                      DS8 19
   \   00000013                      REQUIRE `?<Initializer for <Constant "\\nEnter a message`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\n">`:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for <Constant "\\n">>`

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 Lab9App *Lab9App::new Lab9App()
   \                     `??new Lab9App`:
   \   00000000   E00E               LDI     R16, 14
   \   00000002   E010               LDI     R17, 0
   \   00000004   ........           CALL    `??operator new`
   \   00000008   2F20               MOV     R18, R16
   \   0000000A   2B21               OR      R18, R17
   \   0000000C   F009               BREQ    `??new Lab9App_1`
   \   0000000E   ....               RJMP    ??Lab9App
   \                     `??new Lab9App_1`:
   \   00000010   E000               LDI     R16, 0
   \   00000012   E010               LDI     R17, 0
   \   00000014   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   ........           JMP     __record_needed_destruction

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 2>`:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 3>`:
   \   00000000   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \                     `?<Unnamed 4>`:
   \   00000000   9508               RET

   \                                 In  segment NEAR_F, align 1, keep-with-next
   \   __vtbl_entry const __flash myTimerAdaptor::__vtbl[2]
   \                     ??__vtbl:
   \   00000000   ........           DC16 `?~myTimerAdaptor`/2, ??TimeOutEvent/2
   \   00000004   ........           DC16 `?~mySerialAdaptor`/2, ??Receive/2
   \   00000008   ........           DC16 `?~LcdAdaptor`/2, ??Display/2
    128           

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     <Unnamed 0>                        0      2
       -> Lab9App::~Lab9App()           0      2
     <Unnamed 1>                        0      2
       -> StringProcess::~StringProcess()
                                        0      2
     <Unnamed 2>                        0      2
     <Unnamed 3>                        0      2
     <Unnamed 4>                        0      2
     Lab9App::Init()                    4      2
       -> GetDriverFactory()            4      2
       -> GetBCComponentManager()       4      2
       -> BCComponentManager::CreateTimer()
                                        4      2
       -> GetBCComponentManager()       4      2
       -> BCComponentManager::CreateSerialIO(unsigned char)
                                        4      2
       ->   Indirect call               4      2
       -> TimerManager::AddEvent(ITimerEvent *)
                                        4      2
       -> SerialIO::SetEvent(SerialEvent &)
                                        4      2
       -> StringProcess::SetIStringOutPut(IStringOutPut *)
                                        4      2
       -> SerialIO::Write(char __flash *)
                                        4      2
       -> SerialIO::Write(char const *)
                                        4      2
     Lab9App::Lab9App()                 2      2
       -> SystemManager::SystemManager()
                                        2      2
     Lab9App::new Lab9App()             0      2
       -> operator new(size_t)          0      2
       -> Lab9App::Lab9App()            0      2
     Lab9App::~Lab9App()                4      2
       -> SystemManager::~SystemManager()
                                        4      2
       -> operator delete(void *)       4      2
     LcdAdaptor::Display(char *)        0      2
       -> Clcd::Write(unsigned char, char *)
                                        0      2
     LcdAdaptor::~LcdAdaptor()          0      2
       -> operator delete(void *)       0      2
     SystemManager::Exit()              0      2
     __sti__routine()                   2      2
       -> Lab9App::Lab9App()            2      2
       -> __record_needed_destruction
                                        2      2
       -> StringProcess::StringProcess()
                                        2      2
       -> __record_needed_destruction
                                        2      2
       -> __record_needed_destruction
                                        2      2
       -> __record_needed_destruction
                                        2      2
       -> __record_needed_destruction
                                        2      2
     mySerialAdaptor::Receive(unsigned char)
                                        4      2
       -> StringProcess::InputCh(char)
                                        4      2
       -> SerialIO::Write(unsigned char)
                                        4      2
       -> SerialIO::Write(char const *)
                                        4      2
     mySerialAdaptor::~mySerialAdaptor()
                                        0      2
       -> operator delete(void *)       0      2
     myTimerAdaptor::TimeOutEvent()     0      2
       -> StringProcess::tm500ms()      0      2
     myTimerAdaptor::~myTimerAdaptor()
                                        0      2
       -> operator delete(void *)       0      2


   Segment part sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     SystemManager::Exit()                             2
     Lab9App::~Lab9App()                              38
     myTimerAdaptor::~myTimerAdaptor()
                                                      16
     myTimerAdaptor::TimeOutEvent()                   18
     mySerialAdaptor::~mySerialAdaptor()
                                                      16
     mySerialAdaptor::Receive(unsigned char)
                                                      62
     LcdAdaptor::~LcdAdaptor()                        16
     LcdAdaptor::Display(char *)                      14
     __sti__routine()                                100
     ?<Unnamed 0>                                      8
     ?<Unnamed 1>                                      8
     ?_0                                              30
     mytimer                                          34
     mySerial
     myOutPut
     myapp
     sp                                               46
     ?Subroutine4                                      6
     Lab9App::Lab9App()                               24
     ?Subroutine3                                      6
     Lab9App::Init()                                 174
     ?Subroutine2                                      6
     ?Subroutine1                                      8
     ?<Initializer for <Constant "\nEnter a message   19
     ?<Initializer for <Constant "\n">>                2
     ?<Initializer for >                              30
     ?<Constant "\nEnter a message: ">                19
     ?<Constant "\n">                                  2
     Lab9App::new Lab9App()                           22
     ?Subroutine0                                      4
     ?<Unnamed 2>                                      2
     ?<Unnamed 3>                                      2
     ?<Unnamed 4>                                      2
     myTimerAdaptor::__vtbl                           12
     mySerialAdaptor::__vtbl
     LcdAdaptor::__vtbl
      Others                                          32

 
 554 bytes in segment CODE
   2 bytes in segment DIFUNCT
  14 bytes in segment INITTAB
  18 bytes in segment NEAR_F
  51 bytes in segment NEAR_I
  51 bytes in segment NEAR_ID
  90 bytes in segment NEAR_Z
 
 437 bytes of CODE memory (+ 202 bytes shared)
 141 bytes of DATA memory

Errors: none
Warnings: 1
