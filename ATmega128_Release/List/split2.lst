###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.50.0.50277/W32 for Atmel AVR    02/Dec/2013  00:32:58 #
# Copyright (C) 1996-2010 IAR Systems AB.                                     #
#                                                                             #
#    Source file  =  D:\Work\IAR\TIEF_Framework\TIEL_FrameWork\Utils\split2.c #
#                    pp                                                       #
#    Command line =  D:\Work\IAR\TIEF_Framework\TIEL_FrameWork\Utils\split2.c #
#                    pp --cpu=m128 -ms -o D:\Work\IAR\TIEF_Framework\ATmega12 #
#                    8_Release\Obj\ -D NDEBUG -D xWATCHDOG_ENABLE -lC         #
#                    D:\Work\IAR\TIEF_Framework\ATmega128_Release\List\ -y    #
#                    --initializers_in_flash -z9 --cross_call_passes=2        #
#                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e -I ./\ -I    #
#                    D:\Work\IAR\TIEF_Framework\ -I                           #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Basic_Componen #
#                    t\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/BSP/MC_E #
#                    02SMB_v1_3\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork #
#                    /Common\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Co #
#                    nfiguration\ -I D:\Work\IAR\TIEF_Framework/TIEL_FrameWor #
#                    k/CPU/AVR_Driver\ -I D:\Work\IAR\TIEF_Framework/TIEL_Fra #
#                    meWork/Driver_Interface\ -I                              #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Drivers\ -I    #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Service\ -I    #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/System\ -I     #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Test\ -I       #
#                    D:\Work\IAR\TIEF_Framework/TIEL_FrameWork/Utils\ -I      #
#                    D:\Work\IAR\TIEF_Framework/BUILD_COUNT\ -I "C:\Program   #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.4_0\avr\INC\" -I "C:\Program Files (x86)\IAR           #
#                    Systems\Embedded Workbench 5.4_0\avr\INC\DLIB\"          #
#                    --eeprom_size 4096 --eec++ --dlib_config "C:\Program     #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.4_0\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h"                  #
#    List file    =  D:\Work\IAR\TIEF_Framework\ATmega128_Release\List\split2 #
#                    .lst                                                     #
#    Object file  =  D:\Work\IAR\TIEF_Framework\ATmega128_Release\Obj\split2. #
#                    r90                                                      #
#                                                                             #
#                                                                             #
###############################################################################

D:\Work\IAR\TIEF_Framework\TIEL_FrameWork\Utils\split2.cpp
      1          #include <cctype>
      2          #include <string>

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string::string(string const &)
   \                     ??string:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   01F9               MOVW    R31:R30, R19:R18
   \   0000000A   8100               LD      R16, Z
   \   0000000C   930C               ST      X, R16
   \   0000000E   E040               LDI     R20, 0
   \   00000010   E050               LDI     R21, 0
   \   00000012   E020               LDI     R18, 0
   \   00000014   2F0A               MOV     R16, R26
   \   00000016   ........           CALL    ??_Tidy
   \   0000001A   ....               LDI     R30, LOW(??npos)
   \   0000001C   ....               LDI     R31, (??npos) >> 8
   \   0000001E   8160               LD      R22, Z
   \   00000020   8171               LDD     R23, Z+1
   \   00000022   E040               LDI     R20, 0
   \   00000024   E050               LDI     R21, 0
   \   00000026   019C               MOVW    R19:R18, R25:R24
   \   00000028   018D               MOVW    R17:R16, R27:R26
   \   0000002A   ........           CALL    ??assign
   \   0000002E   018D               MOVW    R17:R16, R27:R26
   \   00000030   E0E4               LDI     R30, 4
   \   00000032   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string::string(string const &, size_t, size_t)
   \                     ??string_1:
   \   00000000   ........           CALL    ?PROLOGUE8_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004   01C8               MOVW    R25:R24, R17:R16
   \   00000006   0139               MOVW    R7:R6, R19:R18
   \   00000008   01DA               MOVW    R27:R26, R21:R20
   \   0000000A   012B               MOVW    R5:R4, R23:R22
   \   0000000C   01F8               MOVW    R31:R30, R17:R16
   \   0000000E   8300               ST      Z, R16
   \   00000010   E040               LDI     R20, 0
   \   00000012   E050               LDI     R21, 0
   \   00000014   E020               LDI     R18, 0
   \   00000016   ........           CALL    ??_Tidy
   \   0000001A   01B2               MOVW    R23:R22, R5:R4
   \   0000001C   01AD               MOVW    R21:R20, R27:R26
   \   0000001E   0193               MOVW    R19:R18, R7:R6
   \   00000020   018C               MOVW    R17:R16, R25:R24
   \   00000022   ........           CALL    ??assign
   \   00000026   018C               MOVW    R17:R16, R25:R24
   \   00000028   E0E8               LDI     R30, 8
   \   0000002A   ........           JMP     ?EPILOGUE_B8_L09
      3          #include <vector>

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Copy_backward_opt0(string const *, string const *, string *)
   \                     ??_Copy_backward_opt0:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   012A               MOVW    R5:R4, R21:R20
   \   0000000A   C00F               RJMP    ??_Copy_backward_opt0_1
   \                     ??_Copy_backward_opt0_2:
   \   0000000C   9745               SBIW    R25:R24, 21
   \   0000000E   EE0B               LDI     R16, 235
   \   00000010   0E40               ADD     R4, R16
   \   00000012   EF0F               LDI     R16, 255
   \   00000014   1E50               ADC     R5, R16
   \   00000016   ....               LDI     R30, LOW(??npos)
   \   00000018   ....               LDI     R31, (??npos) >> 8
   \   0000001A   8160               LD      R22, Z
   \   0000001C   8171               LDD     R23, Z+1
   \   0000001E   E040               LDI     R20, 0
   \   00000020   E050               LDI     R21, 0
   \   00000022   019C               MOVW    R19:R18, R25:R24
   \   00000024   0182               MOVW    R17:R16, R5:R4
   \   00000026   ........           CALL    ??assign
   \                     ??_Copy_backward_opt0_1:
   \   0000002A   17A8               CP      R26, R24
   \   0000002C   07B9               CPC     R27, R25
   \   0000002E   F771               BRNE    ??_Copy_backward_opt0_2
   \   00000030   0182               MOVW    R17:R16, R5:R4
   \   00000032   E0E6               LDI     R30, 6
   \   00000034   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string *_Uninit_copy0(string const *, string const *, string *)
   \                     ??_Uninit_copy0:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   C009               RJMP    ??_Uninit_copy0_1
   \                     ??_Uninit_copy0_2:
   \   0000000C   2F08               MOV     R16, R24
   \   0000000E   2B09               OR      R16, R25
   \   00000010   F021               BREQ    ??_Uninit_copy0_3
   \   00000012   019D               MOVW    R19:R18, R27:R26
   \   00000014   018C               MOVW    R17:R16, R25:R24
   \   00000016   ........           CALL    ??string
   \                     ??_Uninit_copy0_3:
   \   0000001A   9645               ADIW    R25:R24, 21
   \   0000001C   9655               ADIW    R27:R26, 21
   \                     ??_Uninit_copy0_1:
   \   0000001E   15A4               CP      R26, R4
   \   00000020   05B5               CPC     R27, R5
   \   00000022   F7A1               BRNE    ??_Uninit_copy0_2
   \   00000024   018C               MOVW    R17:R16, R25:R24
   \   00000026   E0E6               LDI     R30, 6
   \   00000028   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
   \                     ??_Uninitialized_fill_n:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   0129               MOVW    R5:R4, R19:R18
   \   00000008   01CA               MOVW    R25:R24, R21:R20
   \   0000000A   C00B               RJMP    ??_Uninitialized_fill_n_1
   \                     ??_Uninitialized_fill_n_2:
   \   0000000C   2F0A               MOV     R16, R26
   \   0000000E   2B0B               OR      R16, R27
   \   00000010   F021               BREQ    ??_Uninitialized_fill_n_3
   \   00000012   019C               MOVW    R19:R18, R25:R24
   \   00000014   018D               MOVW    R17:R16, R27:R26
   \   00000016   ........           CALL    ??string
   \                     ??_Uninitialized_fill_n_3:
   \   0000001A   EF0F               LDI     R16, 255
   \   0000001C   0E40               ADD     R4, R16
   \   0000001E   1E50               ADC     R5, R16
   \   00000020   9655               ADIW    R27:R26, 21
   \                     ??_Uninitialized_fill_n_1:
   \   00000022   2D04               MOV     R16, R4
   \   00000024   2905               OR      R16, R5
   \   00000026   F791               BRNE    ??_Uninitialized_fill_n_2
   \   00000028   E0E6               LDI     R30, 6
   \   0000002A   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   910D               LD      R16, X+
   \   00000008   911C               LD      R17, X
   \   0000000A   9711               SBIW    R27:R26, 1
   \   0000000C   2B01               OR      R16, R17
   \   0000000E   F099               BREQ    ??_Tidy0_1
   \   00000010   9612               ADIW    R27:R26, 2
   \   00000012   914D               LD      R20, X+
   \   00000014   915C               LD      R21, X
   \   00000016   9713               SBIW    R27:R26, 3
   \   00000018   912D               LD      R18, X+
   \   0000001A   913C               LD      R19, X
   \   0000001C   9711               SBIW    R27:R26, 1
   \   0000001E   018D               MOVW    R17:R16, R27:R26
   \   00000020   ........           CALL    ??_Destroy
   \   00000024   910D               LD      R16, X+
   \   00000026   911D               LD      R17, X+
   \   00000028   930D               ST      X+, R16
   \   0000002A   931C               ST      X, R17
   \   0000002C   9713               SBIW    R27:R26, 3
   \   0000002E   910D               LD      R16, X+
   \   00000030   911C               LD      R17, X
   \   00000032   ........           CALL    `??operator delete`
   \                     ??_Tidy0_1:
   \   00000036   91A9               LD      R26, Y+
   \   00000038   91B9               LD      R27, Y+
   \   0000003A   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
   \                     ??_Destroy:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01DA               MOVW    R27:R26, R21:R20
   \   00000006   01C9               MOVW    R25:R24, R19:R18
   \   00000008   C007               RJMP    ??_Destroy_1
   \                     ??_Destroy_2:
   \   0000000A   E040               LDI     R20, 0
   \   0000000C   E050               LDI     R21, 0
   \   0000000E   E021               LDI     R18, 1
   \   00000010   018C               MOVW    R17:R16, R25:R24
   \   00000012   ........           CALL    ??_Tidy
   \   00000016   9645               ADIW    R25:R24, 21
   \                     ??_Destroy_1:
   \   00000018   178A               CP      R24, R26
   \   0000001A   079B               CPC     R25, R27
   \   0000001C   F7B1               BRNE    ??_Destroy_2
   \   0000001E   E0E4               LDI     R30, 4
   \   00000020   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Insert_n(string *, unsigned int, string const &)
   \                     ??_Insert_n:
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   9765               SBIW    R29:R28, 21
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   0129               MOVW    R5:R4, R19:R18
   \   0000000A   01CA               MOVW    R25:R24, R21:R20
   \   0000000C   019B               MOVW    R19:R18, R23:R22
   \   0000000E   018E               MOVW    R17:R16, R29:R28
   \   00000010   ........           CALL    ??string
   \   00000014   01BE               MOVW    R23:R22, R29:R28
   \   00000016   01AC               MOVW    R21:R20, R25:R24
   \   00000018   0192               MOVW    R19:R18, R5:R4
   \   0000001A   018D               MOVW    R17:R16, R27:R26
   \   0000001C   ........           CALL    ??_Insert_n0
   \   00000020   E040               LDI     R20, 0
   \   00000022   E050               LDI     R21, 0
   \   00000024   E021               LDI     R18, 1
   \   00000026   018E               MOVW    R17:R16, R29:R28
   \   00000028   ........           CALL    ??_Tidy
   \   0000002C   9665               ADIW    R29:R28, 21
   \   0000002E   E0E6               LDI     R30, 6
   \   00000030   ........           JMP     ?EPILOGUE_B6_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Make_room(string *, unsigned int)
   \                     ??_Make_room:
   \   00000000   ........           CALL    ?PROLOGUE16_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004                      REQUIRE ?Register_R6_is_cg_reg
   \   00000004                      REQUIRE ?Register_R7_is_cg_reg
   \   00000004                      REQUIRE ?Register_R8_is_cg_reg
   \   00000004                      REQUIRE ?Register_R9_is_cg_reg
   \   00000004                      REQUIRE ?Register_R10_is_cg_reg
   \   00000004                      REQUIRE ?Register_R11_is_cg_reg
   \   00000004                      REQUIRE ?Register_R12_is_cg_reg
   \   00000004                      REQUIRE ?Register_R13_is_cg_reg
   \   00000004                      REQUIRE ?Register_R14_is_cg_reg
   \   00000004                      REQUIRE ?Register_R15_is_cg_reg
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   0169               MOVW    R13:R12, R19:R18
   \   00000008   015A               MOVW    R11:R10, R21:R20
   \   0000000A   908D               LD      R8, X+
   \   0000000C   909C               LD      R9, X
   \   0000000E   9711               SBIW    R27:R26, 1
   \   00000010   01FD               MOVW    R31:R30, R27:R26
   \   00000012   8104               LDD     R16, Z+4
   \   00000014   8115               LDD     R17, Z+5
   \   00000016   ....               RCALL   ?Subroutine0
   \                     ??CrossCallReturnLabel_0:
   \   00000018   01C8               MOVW    R25:R24, R17:R16
   \   0000001A   2FEA               MOV     R30, R26
   \   0000001C   8062               LDD     R6, Z+2
   \   0000001E   8073               LDD     R7, Z+3
   \   00000020   0123               MOVW    R5:R4, R7:R6
   \   00000022   0183               MOVW    R17:R16, R7:R6
   \   00000024   ....               RCALL   ?Subroutine0
   \                     ??CrossCallReturnLabel_1:
   \   00000026   0178               MOVW    R15:R14, R17:R16
   \   00000028   2D0A               MOV     R16, R10
   \   0000002A   290B               OR      R16, R11
   \   0000002C   F409               BRNE    $+2+2
   \   0000002E   C07D               RJMP    ??CrossCallReturnLabel_4
   \   00000030   E300               LDI     R16, 48
   \   00000032   E01C               LDI     R17, 12
   \   00000034   190E               SUB     R16, R14
   \   00000036   091F               SBC     R17, R15
   \   00000038   150A               CP      R16, R10
   \   0000003A   051B               CPC     R17, R11
   \   0000003C   F408               BRCC    $+2+2
   \   0000003E   C075               RJMP    ??CrossCallReturnLabel_4
   \   00000040   E105               LDI     R16, 21
   \   00000042   E010               LDI     R17, 0
   \   00000044   01A5               MOVW    R21:R20, R11:R10
   \   00000046   ....               RCALL   ?Subroutine4
   \                     ??CrossCallReturnLabel_6:
   \   00000048   0148               MOVW    R9:R8, R17:R16
   \   0000004A   0CEA               ADD     R14, R10
   \   0000004C   1CFB               ADC     R15, R11
   \   0000004E   158E               CP      R24, R14
   \   00000050   059F               CPC     R25, R15
   \   00000052   F5D0               BRCC    ??_Make_room_1
   \   00000054   019C               MOVW    R19:R18, R25:R24
   \   00000056   9536               LSR     R19
   \   00000058   9527               ROR     R18
   \   0000005A   E300               LDI     R16, 48
   \   0000005C   E01C               LDI     R17, 12
   \   0000005E   1B02               SUB     R16, R18
   \   00000060   0B13               SBC     R17, R19
   \   00000062   1708               CP      R16, R24
   \   00000064   0719               CPC     R17, R25
   \   00000066   F418               BRCC    ??_Make_room_2
   \   00000068   E080               LDI     R24, 0
   \   0000006A   E090               LDI     R25, 0
   \   0000006C   C002               RJMP    ??_Make_room_3
   \                     ??_Make_room_2:
   \   0000006E   0F82               ADD     R24, R18
   \   00000070   1F93               ADC     R25, R19
   \                     ??_Make_room_3:
   \   00000072   158E               CP      R24, R14
   \   00000074   059F               CPC     R25, R15
   \   00000076   F408               BRCC    ??_Make_room_4
   \   00000078   01C7               MOVW    R25:R24, R15:R14
   \                     ??_Make_room_4:
   \   0000007A   E105               LDI     R16, 21
   \   0000007C   E010               LDI     R17, 0
   \   0000007E   01AC               MOVW    R21:R20, R25:R24
   \   00000080   ....               RCALL   ?Subroutine4
   \                     ??CrossCallReturnLabel_7:
   \   00000082   ........           CALL    `??operator new`
   \   00000086   0128               MOVW    R5:R4, R17:R16
   \   00000088   01A8               MOVW    R21:R20, R17:R16
   \   0000008A   0196               MOVW    R19:R18, R13:R12
   \   0000008C   910D               LD      R16, X+
   \   0000008E   911C               LD      R17, X
   \   00000090   9711               SBIW    R27:R26, 1
   \   00000092   ....               RCALL   ??Subroutine5_0
   \                     ??CrossCallReturnLabel_11:
   \   00000094   0138               MOVW    R7:R6, R17:R16
   \   00000096   01A8               MOVW    R21:R20, R17:R16
   \   00000098   0D48               ADD     R20, R8
   \   0000009A   1D59               ADC     R21, R9
   \   0000009C   01FD               MOVW    R31:R30, R27:R26
   \   0000009E   8122               LDD     R18, Z+2
   \   000000A0   8133               LDD     R19, Z+3
   \   000000A2   ....               RCALL   ?Subroutine3
   \                     ??CrossCallReturnLabel_10:
   \   000000A4   018D               MOVW    R17:R16, R27:R26
   \   000000A6   ........           CALL    ??_Tidy0
   \   000000AA   E145               LDI     R20, 21
   \   000000AC   E050               LDI     R21, 0
   \   000000AE   018C               MOVW    R17:R16, R25:R24
   \   000000B0   ....               RCALL   ?Subroutine1
   \                     ??CrossCallReturnLabel_2:
   \   000000B2   01FD               MOVW    R31:R30, R27:R26
   \   000000B4   8324               STD     Z+4, R18
   \   000000B6   8335               STD     Z+5, R19
   \   000000B8   0187               MOVW    R17:R16, R15:R14
   \   000000BA   ....               RCALL   ?Subroutine1
   \                     ??CrossCallReturnLabel_3:
   \   000000BC   8322               STD     Z+2, R18
   \   000000BE   8333               STD     Z+3, R19
   \   000000C0   924D               ST      X+, R4
   \   000000C2   925C               ST      X, R5
   \   000000C4   0163               MOVW    R13:R12, R7:R6
   \   000000C6   C031               RJMP    ??CrossCallReturnLabel_4
   \                     ??_Make_room_1:
   \   000000C8   01C9               MOVW    R25:R24, R19:R18
   \   000000CA   0F80               ADD     R24, R16
   \   000000CC   1F91               ADC     R25, R17
   \   000000CE   1A42               SUB     R4, R18
   \   000000D0   0A53               SBC     R5, R19
   \   000000D2   0182               MOVW    R17:R16, R5:R4
   \   000000D4   E145               LDI     R20, 21
   \   000000D6   E050               LDI     R21, 0
   \   000000D8   ........           CALL    ?SS_DIVMOD_L02
   \   000000DC   150A               CP      R16, R10
   \   000000DE   051B               CPC     R17, R11
   \   000000E0   F478               BRCC    ??_Make_room_5
   \   000000E2   01AC               MOVW    R21:R20, R25:R24
   \   000000E4   0193               MOVW    R19:R18, R7:R6
   \   000000E6   ....               RCALL   ?Subroutine3
   \                     ??CrossCallReturnLabel_9:
   \   000000E8   01FD               MOVW    R31:R30, R27:R26
   \   000000EA   8142               LDD     R20, Z+2
   \   000000EC   8153               LDD     R21, Z+3
   \   000000EE   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_5:
   \   000000F0   01FD               MOVW    R31:R30, R27:R26
   \   000000F2   8102               LDD     R16, Z+2
   \   000000F4   8113               LDD     R17, Z+3
   \   000000F6   0D08               ADD     R16, R8
   \   000000F8   1D19               ADC     R17, R9
   \   000000FA   8302               STD     Z+2, R16
   \   000000FC   8313               STD     Z+3, R17
   \   000000FE   C015               RJMP    ??CrossCallReturnLabel_4
   \                     ??_Make_room_5:
   \   00000100   EE4B               LDI     R20, 235
   \   00000102   EF5F               LDI     R21, 255
   \   00000104   0185               MOVW    R17:R16, R11:R10
   \   00000106   ....               RCALL   ?Subroutine4
   \                     ??CrossCallReturnLabel_8:
   \   00000108   0123               MOVW    R5:R4, R7:R6
   \   0000010A   0E40               ADD     R4, R16
   \   0000010C   1E51               ADC     R5, R17
   \   0000010E   01A3               MOVW    R21:R20, R7:R6
   \   00000110   0193               MOVW    R19:R18, R7:R6
   \   00000112   0182               MOVW    R17:R16, R5:R4
   \   00000114   ....               RCALL   ??Subroutine5_0
   \                     ??CrossCallReturnLabel_12:
   \   00000116   01FD               MOVW    R31:R30, R27:R26
   \   00000118   8302               STD     Z+2, R16
   \   0000011A   8313               STD     Z+3, R17
   \   0000011C   01A3               MOVW    R21:R20, R7:R6
   \   0000011E   0192               MOVW    R19:R18, R5:R4
   \   00000120   0186               MOVW    R17:R16, R13:R12
   \   00000122   ........           CALL    ??_Copy_backward_opt0
   \   00000126   01AC               MOVW    R21:R20, R25:R24
   \   00000128   ....               RCALL   ?Subroutine2
   \                     ??CrossCallReturnLabel_4:
   \   0000012A   0186               MOVW    R17:R16, R13:R12
   \   0000012C   E1E0               LDI     R30, 16
   \   0000012E   ........           JMP     ?EPILOGUE_B16_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine4:
   \   00000000   ........           JMP     ?S_EC_MUL_L02

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ??Subroutine5_0:
   \   00000000   ........           JMP     ??_Uninit_copy0

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   0196               MOVW    R19:R18, R13:R12
   \   00000002   018D               MOVW    R17:R16, R27:R26
   \   00000004   ........           JMP     ??_Destroy

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   ........           CALL    ?S_EC_MUL_L02
   \   00000004   0192               MOVW    R19:R18, R5:R4
   \   00000006   0F20               ADD     R18, R16
   \   00000008   1F31               ADC     R19, R17
   \   0000000A   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   1908               SUB     R16, R8
   \   00000002   0919               SBC     R17, R9
   \   00000004   E145               LDI     R20, 21
   \   00000006   E050               LDI     R21, 0
   \   00000008   ........           JMP     ?US_DIVMOD_L02

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 string * _Vector_impl<string, allocator<string>>::_Insert0(string *, string const &)
   \                     ??_Insert0:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
   \   00000006   910D               LD      R16, X+
   \   00000008   911C               LD      R17, X
   \   0000000A   9711               SBIW    R27:R26, 1
   \   0000000C   2B01               OR      R16, R17
   \   0000000E   F419               BRNE    ??_Insert0_1
   \   00000010   E080               LDI     R24, 0
   \   00000012   E090               LDI     R25, 0
   \   00000014   C006               RJMP    ??_Insert0_2
   \                     ??_Insert0_1:
   \   00000016   910D               LD      R16, X+
   \   00000018   911C               LD      R17, X
   \   0000001A   9711               SBIW    R27:R26, 1
   \   0000001C   01C9               MOVW    R25:R24, R19:R18
   \   0000001E   1B80               SUB     R24, R16
   \   00000020   0B91               SBC     R25, R17
   \                     ??_Insert0_2:
   \   00000022   01BA               MOVW    R23:R22, R21:R20
   \   00000024   E041               LDI     R20, 1
   \   00000026   E050               LDI     R21, 0
   \   00000028   018D               MOVW    R17:R16, R27:R26
   \   0000002A   ........           CALL    ??_Insert_n
   \   0000002E   910D               LD      R16, X+
   \   00000030   911C               LD      R17, X
   \   00000032   0F08               ADD     R16, R24
   \   00000034   1F19               ADC     R17, R25
   \   00000036   E0E4               LDI     R30, 4
   \   00000038   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Insert_n0(string *, unsigned int, string const &)
   \                     ??_Insert_n0:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01CA               MOVW    R25:R24, R21:R20
   \   00000008   01DB               MOVW    R27:R26, R23:R22
   \   0000000A   ........           CALL    ??_Make_room
   \   0000000E   01BE               MOVW    R23:R22, R29:R28
   \   00000010   01AD               MOVW    R21:R20, R27:R26
   \   00000012   019C               MOVW    R19:R18, R25:R24
   \   00000014   ........           CALL    ??_Uninitialized_fill_n
   \   00000018   9621               ADIW    R29:R28, 1
   \   0000001A   E0E4               LDI     R30, 4
   \   0000001C   ........           JMP     ?EPILOGUE_B4_L09

   \                                 In  segment CODE, align 2, keep-with-next
   \   __nearfunc __version_3 void _Vector_impl<string, allocator<string>>::_Push_back0(string const &)
   \                     ??_Push_back0:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   9721               SBIW    R29:R28, 1
   \   00000006   01D8               MOVW    R27:R26, R17:R16
   \   00000008   01F8               MOVW    R31:R30, R17:R16
   \   0000000A   8102               LDD     R16, Z+2
   \   0000000C   8113               LDD     R17, Z+3
   \   0000000E   8144               LDD     R20, Z+4
   \   00000010   8155               LDD     R21, Z+5
   \   00000012   1704               CP      R16, R20
   \   00000014   0715               CPC     R17, R21
   \   00000016   F460               BRCC    ??_Push_back0_1
   \   00000018   01C8               MOVW    R25:R24, R17:R16
   \   0000001A   01BE               MOVW    R23:R22, R29:R28
   \   0000001C   01A9               MOVW    R21:R20, R19:R18
   \   0000001E   E021               LDI     R18, 1
   \   00000020   E030               LDI     R19, 0
   \   00000022   ........           CALL    ??_Uninitialized_fill_n
   \   00000026   9645               ADIW    R25:R24, 21
   \   00000028   01FD               MOVW    R31:R30, R27:R26
   \   0000002A   8382               STD     Z+2, R24
   \   0000002C   8393               STD     Z+3, R25
   \   0000002E   C005               RJMP    ??_Push_back0_2
   \                     ??_Push_back0_1:
   \   00000030   01A9               MOVW    R21:R20, R19:R18
   \   00000032   0198               MOVW    R19:R18, R17:R16
   \   00000034   018D               MOVW    R17:R16, R27:R26
   \   00000036   ........           CALL    ??_Insert0
   \                     ??_Push_back0_2:
   \   0000003A   9621               ADIW    R29:R28, 1
   \   0000003C   E0E4               LDI     R30, 4
   \   0000003E   ........           JMP     ?EPILOGUE_B4_L09
      4          
      5          #include "split.h"
      6          
      7          using std::vector;
                          ^
Warning[Pe737]: using-declaration ignored -- it refers to the current namespace
      8          using std::string;
                          ^
Warning[Pe737]: using-declaration ignored -- it refers to the current namespace
      9          
     10          using std::isspace;
                          ^
Warning[Pe737]: using-declaration ignored -- it refers to the current namespace
     11          

   \                                 In  segment CODE, align 2, keep-with-next
     12          vector<string> split(const string& s)
   \                     ??split:
     13          {
   \   00000000   ........           CALL    ?PROLOGUE6_L09
   \   00000004                      REQUIRE ?Register_R4_is_cg_reg
   \   00000004                      REQUIRE ?Register_R5_is_cg_reg
   \   00000004   9765               SBIW    R29:R28, 21
   \   00000006   0128               MOVW    R5:R4, R17:R16
   \   00000008   01D9               MOVW    R27:R26, R19:R18
     14          	vector<string> ret;
   \   0000000A   E000               LDI     R16, 0
   \   0000000C   2DE4               MOV     R30, R4
   \   0000000E   2FF1               MOV     R31, R17
   \   00000010   8300               ST      Z, R16
   \   00000012   8301               STD     Z+1, R16
   \   00000014   8302               STD     Z+2, R16
   \   00000016   8303               STD     Z+3, R16
   \   00000018   8304               STD     Z+4, R16
   \   0000001A   8305               STD     Z+5, R16
     15          	typedef string::size_type string_size;
     16          	string_size i = 0;
   \   0000001C   E040               LDI     R20, 0
   \   0000001E   E050               LDI     R21, 0
   \   00000020   C024               RJMP    ??split_1
   \                     ??split_2:
   \   00000022   019D               MOVW    R19:R18, R27:R26
   \   00000024   5F2F               SUBI    R18, 255
   \   00000026   4F3F               SBCI    R19, 255
     17          
     18          	// invariant: we have processed characters `['original value of `i', `i)'
     19          	while (i != s.size()) {
     20          		// ignore leading blanks
     21          		// invariant: characters in range `['original `i', current `i)' are all spaces
     22          		while (i != s.size() && isspace(s[i]))
     23          			++i;
     24          
     25          		// find end of next word
     26          		string_size j = i;
     27          		// invariant: none of the characters in range `['original `j', current `j)' is a space
     28          		while (j != s.size() && !isspace(s[j]))
   \                     ??split_3:
   \   00000028   0F28               ADD     R18, R24
   \   0000002A   1F39               ADC     R19, R25
   \   0000002C   01F9               MOVW    R31:R30, R19:R18
   \   0000002E   8120               LD      R18, Z
   \   00000030   E030               LDI     R19, 0
   \   00000032   01F9               MOVW    R31:R30, R19:R18
   \   00000034   9739               SBIW    R31:R30, 9
   \   00000036   9735               SBIW    R31:R30, 5
   \   00000038   F018               BRCS    ??split_4
   \   0000003A   3220               CPI     R18, 32
   \   0000003C   4030               SBCI    R19, 0
   \   0000003E   F5F9               BRNE    ??split_5
     29          			++j;
     30          
     31          		// if we found some nonwhitespace characters
     32          		if (i != j) {
   \                     ??split_4:
   \   00000040   1748               CP      R20, R24
   \   00000042   0759               CPC     R21, R25
   \   00000044   F091               BREQ    ??split_1
     33          			// copy from `s' starting at `i' and taking `j' `\-' `i' chars
     34          			ret.push_back(s.substr(i, j - i));
   \   00000046   01BC               MOVW    R23:R22, R25:R24
   \   00000048   1B64               SUB     R22, R20
   \   0000004A   0B75               SBC     R23, R21
   \   0000004C   019D               MOVW    R19:R18, R27:R26
   \   0000004E   018E               MOVW    R17:R16, R29:R28
   \   00000050   ........           CALL    ??string_1
   \   00000054   019E               MOVW    R19:R18, R29:R28
   \   00000056   0182               MOVW    R17:R16, R5:R4
   \   00000058   ........           CALL    ??_Push_back0
   \   0000005C   E040               LDI     R20, 0
   \   0000005E   E050               LDI     R21, 0
   \   00000060   E021               LDI     R18, 1
   \   00000062   018E               MOVW    R17:R16, R29:R28
   \   00000064   ........           CALL    ??_Tidy
     35          			i = j;
   \   00000068   01AC               MOVW    R21:R20, R25:R24
     36          		}
   \                     ??split_1:
   \   0000006A   01FD               MOVW    R31:R30, R27:R26
   \   0000006C   8901               LDD     R16, Z+17
   \   0000006E   8912               LDD     R17, Z+18
   \   00000070   1740               CP      R20, R16
   \   00000072   0751               CPC     R21, R17
   \   00000074   F431               BRNE    ??split_6
     37          
     38          	}
     39          	return ret;
   \   00000076   9665               ADIW    R29:R28, 21
   \   00000078   E0E6               LDI     R30, 6
   \   0000007A   ........           JMP     ?EPILOGUE_B6_L09
   \                     ??split_7:
   \   0000007E   5F4F               SUBI    R20, 255
   \   00000080   4F5F               SBCI    R21, 255
   \                     ??split_6:
   \   00000082   1740               CP      R20, R16
   \   00000084   0751               CPC     R21, R17
   \   00000086   F0C9               BREQ    ??split_8
   \   00000088   01FD               MOVW    R31:R30, R27:R26
   \   0000008A   8983               LDD     R24, Z+19
   \   0000008C   8994               LDD     R25, Z+20
   \   0000008E   3180               CPI     R24, 16
   \   00000090   4090               SBCI    R25, 0
   \   00000092   F018               BRCS    ??split_9
   \   00000094   8121               LDD     R18, Z+1
   \   00000096   8132               LDD     R19, Z+2
   \   00000098   C003               RJMP    ??split_10
   \                     ??split_9:
   \   0000009A   019D               MOVW    R19:R18, R27:R26
   \   0000009C   5F2F               SUBI    R18, 255
   \   0000009E   4F3F               SBCI    R19, 255
   \                     ??split_10:
   \   000000A0   0F24               ADD     R18, R20
   \   000000A2   1F35               ADC     R19, R21
   \   000000A4   01F9               MOVW    R31:R30, R19:R18
   \   000000A6   8120               LD      R18, Z
   \   000000A8   E030               LDI     R19, 0
   \   000000AA   01C9               MOVW    R25:R24, R19:R18
   \   000000AC   9709               SBIW    R25:R24, 9
   \   000000AE   3085               CPI     R24, 5
   \   000000B0   4090               SBCI    R25, 0
   \   000000B2   F328               BRCS    ??split_7
   \   000000B4   3220               CPI     R18, 32
   \   000000B6   4030               SBCI    R19, 0
   \   000000B8   F311               BREQ    ??split_7
   \                     ??split_8:
   \   000000BA   01CA               MOVW    R25:R24, R21:R20
   \   000000BC   C001               RJMP    ??split_11
   \                     ??split_5:
   \   000000BE   9601               ADIW    R25:R24, 1
   \                     ??split_11:
   \   000000C0   1780               CP      R24, R16
   \   000000C2   0791               CPC     R25, R17
   \   000000C4   F409               BRNE    $+2+2
   \   000000C6   CFBC               RJMP    ??split_4
   \   000000C8   01FD               MOVW    R31:R30, R27:R26
   \   000000CA   8923               LDD     R18, Z+19
   \   000000CC   8934               LDD     R19, Z+20
   \   000000CE   3120               CPI     R18, 16
   \   000000D0   4030               SBCI    R19, 0
   \   000000D2   F408               BRCC    $+2+2
   \   000000D4   CFA6               RJMP    ??split_2
   \   000000D6   8121               LDD     R18, Z+1
   \   000000D8   8132               LDD     R19, Z+2
   \   000000DA   CFA6               RJMP    ??split_3
     40          }

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine3:
   \   00000000   0186               MOVW    R17:R16, R13:R12
   \   00000002                      REQUIRE ??Subroutine5_0
   \   00000002                      ;               // Fall through to label ??Subroutine5_0
     41          

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     _Copy_backward_opt0(string const *, string const *, string *)
                                        6      2
       -> string::assign(string const &, size_t, size_t)
                                        6      2
     _Uninit_copy0(string const *, string const *, string *)
                                        6      2
       -> string::string(string const &)
                                        6      2
     _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
                                        6      2
       -> string::string(string const &)
                                        6      2
     _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                        4      2
       -> string::_Tidy(bool, size_t)
                                        4      2
     _Vector_impl<string, allocator<string>>::_Insert0(string *, string const &)
                                        4      2
       -> _Vector_impl<string, allocator<string>>::_Insert_n(string *, unsigned int, string const &)
                                        4      2
     _Vector_impl<string, allocator<string>>::_Insert_n(string *, unsigned int, string const &)
                                       27      2
       -> string::string(string const &)
                                       27      2
       -> _Vector_impl<string, allocator<string>>::_Insert_n0(string *, unsigned int, string const &)
                                       27      2
       -> string::_Tidy(bool, size_t)
                                       27      2
     _Vector_impl<string, allocator<string>>::_Insert_n0(string *, unsigned int, string const &)
                                        5      2
       -> _Vector_impl<string, allocator<string>>::_Make_room(string *, unsigned int)
                                        5      2
       -> _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
                                        5      2
     _Vector_impl<string, allocator<string>>::_Make_room(string *, unsigned int)
                                       16      4
       -> operator new(size_t)         16      2
       -> _Uninit_copy0(string const *, string const *, string *)
                                       16      2
       -> _Uninit_copy0(string const *, string const *, string *)
                                       16      2
       -> _Vector_impl<string, allocator<string>>::_Tidy0()
                                       16      2
       -> _Uninit_copy0(string const *, string const *, string *)
                                       16      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                       16      2
       -> _Uninit_copy0(string const *, string const *, string *)
                                       16      2
       -> _Copy_backward_opt0(string const *, string const *, string *)
                                       16      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                       16      2
     _Vector_impl<string, allocator<string>>::_Push_back0(string const &)
                                        5      2
       -> _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
                                        5      2
       -> _Vector_impl<string, allocator<string>>::_Insert0(string *, string const &)
                                        5      2
     _Vector_impl<string, allocator<string>>::_Tidy0()
                                        2      2
       -> _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                        2      2
       -> operator delete(void *)       2      2
     split(string const &)             27      2
       -> string::string(string const &, size_t, size_t)
                                       27      2
       -> _Vector_impl<string, allocator<string>>::_Push_back0(string const &)
                                       27      2
       -> string::_Tidy(bool, size_t)
                                       27      2
     string::string(string const &)     4      2
       -> string::_Tidy(bool, size_t)
                                        4      2
       -> string::assign(string const &, size_t, size_t)
                                        4      2
     string::string(string const &, size_t, size_t)
                                        8      2
       -> string::_Tidy(bool, size_t)
                                        8      2
       -> string::assign(string const &, size_t, size_t)
                                        8      2


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   54
     string::string(string const &, size_t, size_t)
                                      46
     _Copy_backward_opt0(string const *, string const *, string *)
                                      56
     _Uninit_copy0(string const *, string const *, string *)
                                      44
     _Uninitialized_fill_n(string *, unsigned int, string const &, allocator<string> &)
                                      46
     _Vector_impl<string, allocator<string>>::_Tidy0()
                                      60
     _Vector_impl<string, allocator<string>>::_Destroy(string *, string *)
                                      36
     _Vector_impl<string, allocator<string>>::_Insert_n(string *, unsigned int, string const &)
                                      52
     _Vector_impl<string, allocator<string>>::_Make_room(string *, unsigned int)
                                     306
     ?Subroutine4                      4
     ??Subroutine5_0                   4
     ?Subroutine2                      8
     ?Subroutine1                     12
     ?Subroutine0                     12
     _Vector_impl<string, allocator<string>>::_Insert0(string *, string const &)
                                      60
     _Vector_impl<string, allocator<string>>::_Insert_n0(string *, unsigned int, string const &)
                                      32
     _Vector_impl<string, allocator<string>>::_Push_back0(string const &)
                                      66
     split(string const &)           220
     ?Subroutine3                      2

 
 1 120 bytes in segment CODE
 
 262 bytes of CODE memory (+ 858 bytes shared)

Errors: none
Warnings: 3
